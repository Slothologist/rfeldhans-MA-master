#########################################
vdemo component start: bonsai2.E_bonsai_server_with_gui
2019-08-19T14:14:27,111886034+02:00
#########################################
+ LD_LIBRARY_PATH=
+ DISPLAY=:0
+ component
+ '[' vanadium == pepper-robot ']'
+ for i in '${BONSAI2_MAPPING}'
+ mapping='-m ROBOCUP=/vol/pepper/systems/pepper-robocup-nightly/opt/bonsai2-robocup-scxml/etc/state_machines '
+ for i in '${BONSAI2_MAPPING}'
+ mapping='-m PEPPER=/vol/pepper/systems/pepper-robocup-nightly/opt/bonsai2-pepper-dist/etc/state_machines -m ROBOCUP=/vol/pepper/systems/pepper-robocup-nightly/opt/bonsai2-robocup-scxml/etc/state_machines '
+ export ROS_IP=vanadium
+ ROS_IP=vanadium
+ /vol/pepper/systems/pepper-robocup-nightly/opt/bonsai2-pepper-dist/bin/pepper-bonsai -c /vol/pepper/systems/pepper-robocup-nightly/opt/bonsai2-pepper-dist/etc/bonsai_configs/PepperSpeechRec.xml -t /vol/pepper/systems/pepper-robocup-nightly/opt/bonsai2-pepper-dist/etc/state_machines/task/speechrec/speech_rec.xml -l /vol/pepper/systems/pepper-robocup-nightly/opt/bonsai2-pepper-dist/etc/pepperLogging.properties -m PEPPER=/vol/pepper/systems/pepper-robocup-nightly/opt/bonsai2-pepper-dist/etc/state_machines -m ROBOCUP=/vol/pepper/systems/pepper-robocup-nightly/opt/bonsai2-robocup-scxml/etc/state_machines
log4j:WARN No appenders could be found for logger (de.unibi.citec.clf.bonsai.ros.RosFactory).
log4j:WARN Please initialize the log4j system properly.
log4j:WARN See http://logging.apache.org/log4j/1.2/faq.html#noconfig for more info.
14:14:27 DEBUG FXGUIStarter: Found logging properties file. - /vol/pepper/systems/pepper-robocup-nightly/opt/bonsai2-pepper-dist/etc/pepperLogging.properties
14:14:27 DEBUG FXGUIStarter: using the following includeMappings: 
ROBOCUP = /vol/pepper/systems/pepper-robocup-nightly/opt/bonsai2-robocup-scxml/etc/state_machines
SCXML = /home/salt/src/main/config/state_machines
PEPPER = /vol/pepper/systems/pepper-robocup-nightly/opt/bonsai2-pepper-dist/etc/state_machines

14:14:27 INFO  FXGUIWithServer: set publisher
14:14:27 INFO  FXGUIWithServer: set control server
14:14:27 INFO  SkillStateMachine: SCXML server set

(java:2006): Gtk-WARNING **: Unable to locate theme engine in module_path: "adwaita",
14:14:28 DEBUG SCXMLOverviewController: SCXMLOverviewController initialized
14:14:28 DEBUG CurrentStateViewController: CurrentStateViewController initialized
14:14:30 DEBUG SCXMLDecoder: transforming file: /vol/pepper/systems/pepper-robocup-nightly/opt/bonsai2-pepper-dist/etc/state_machines/task/speechrec/speech_rec.xml
14:14:30 DEBUG SCXMLValidator: checked 49 states. No duplicates!
14:14:30 DEBUG SkillStateMachine: Set state prefix to: de.unibi.citec.clf.bonsai.skills.
14:14:30 DEBUG SkillStateMachine: Set disable_default_slot_warnings to: false
14:14:30 DEBUG SkillStateMachine: Enable Skill warnings: true
14:14:30 DEBUG SkillStateMachine: Set generation of default slots to: false
14:14:30 DEBUG SkillStateMachine: Enable full configuration and validation: true
14:14:30 DEBUG SkillStateMachine: Enable configuration cache: false
14:14:30 INFO  StateMachineConfigurator: CREATING NEW STATE MACHINE CONFIGURATOR
14:14:30 DEBUG StateMachineConfigurator: ... is not a simple state.
14:14:30 DEBUG StateMachineConfigurator: configuring state: de.unibi.citec.clf.bonsai.skills.dialog.Talk#timesUp
14:14:30 DEBUG StateMachineConfigurator: created class object: class de.unibi.citec.clf.bonsai.skills.dialog.Talk
14:14:30 DEBUG StateMachineConfigurator: using settings:
14:14:30 DEBUG StateMachineConfigurator:  -#_BLOCKING=true
14:14:30 DEBUG StateMachineConfigurator:  -#_MESSAGE=time is up
14:14:30 DEBUG SkillConfigurator: request value #_MESSAGE
14:14:30 DEBUG SkillConfigurator: request bool #_BLOCKING default:true
14:14:30 DEBUG Talk: time is up
14:14:30 DEBUG StateMachineConfigurator: Created actuator "SpeechActuator" for state de.unibi.citec.clf.bonsai.skills.dialog.Talk#timesUp
14:14:30 DEBUG StateMachineConfigurator: configuring state: de.unibi.citec.clf.bonsai.skills.dialog.Talk#errorCancelled#crowdrec
14:14:30 DEBUG StateMachineConfigurator: created class object: class de.unibi.citec.clf.bonsai.skills.dialog.Talk
14:14:30 DEBUG StateMachineConfigurator: using settings:
14:14:30 DEBUG StateMachineConfigurator:  -#_BLOCKING=true
14:14:30 DEBUG StateMachineConfigurator:  -#_MESSAGE=Something went wrong. My                     attempt to adjust my position was cancelled.
14:14:30 DEBUG SkillConfigurator: request value #_MESSAGE
14:14:30 DEBUG SkillConfigurator: request bool #_BLOCKING default:true
14:14:30 DEBUG Talk: Something went wrong. My                     attempt to adjust my position was cancelled.
14:14:30 DEBUG StateMachineConfigurator: Created actuator "SpeechActuator" for state de.unibi.citec.clf.bonsai.skills.dialog.Talk#errorCancelled#crowdrec
14:14:30 DEBUG StateMachineConfigurator: configuring state: de.unibi.citec.clf.bonsai.skills.Wait#scanWaitInit#crowdrec
14:14:30 DEBUG StateMachineConfigurator: created class object: class de.unibi.citec.clf.bonsai.skills.Wait
14:14:30 DEBUG StateMachineConfigurator: using settings:
14:14:30 DEBUG StateMachineConfigurator:  -#_TIMEOUT=500
14:14:30 DEBUG SkillConfigurator: request INT #_TIMEOUT default:1000
14:14:30 DEBUG StateMachineConfigurator: configuring state: de.unibi.citec.clf.bonsai.skills.Wait#WaitTwentySek
14:14:30 DEBUG StateMachineConfigurator: created class object: class de.unibi.citec.clf.bonsai.skills.Wait
14:14:30 DEBUG StateMachineConfigurator: using settings:
14:14:30 DEBUG StateMachineConfigurator:  -#_TIMEOUT=500
14:14:30 DEBUG SkillConfigurator: request INT #_TIMEOUT default:1000
14:14:30 DEBUG StateMachineConfigurator: configuring state: de.unibi.citec.clf.bonsai.skills.dialog.Talk#smthWentWrongbmb
14:14:30 DEBUG StateMachineConfigurator: created class object: class de.unibi.citec.clf.bonsai.skills.dialog.Talk
14:14:30 DEBUG StateMachineConfigurator: using settings:
14:14:30 DEBUG StateMachineConfigurator:  -#_BLOCKING=true
14:14:30 DEBUG StateMachineConfigurator:  -#_MESSAGE=Sorry Guys, something went                 wrong, thanks for playing anyway.
14:14:30 DEBUG SkillConfigurator: request value #_MESSAGE
14:14:30 DEBUG SkillConfigurator: request bool #_BLOCKING default:true
14:14:30 DEBUG Talk: Sorry Guys, something went                 wrong, thanks for playing anyway.
14:14:30 DEBUG StateMachineConfigurator: Created actuator "SpeechActuator" for state de.unibi.citec.clf.bonsai.skills.dialog.Talk#smthWentWrongbmb
14:14:30 DEBUG StateMachineConfigurator: ... is not a simple state.
14:14:30 DEBUG StateMachineConfigurator: configuring state: de.unibi.citec.clf.bonsai.skills.nav.drive.DriveDirect#bmb
14:14:30 DEBUG StateMachineConfigurator: created class object: class de.unibi.citec.clf.bonsai.skills.nav.drive.DriveDirect
14:14:30 DEBUG StateMachineConfigurator: using settings:
14:14:30 DEBUG StateMachineConfigurator:  -#_ROT_SPEED=2.0
14:14:30 DEBUG SkillConfigurator: request INT #_TIMEOUT default:-1
14:14:30 DEBUG SkillConfigurator: request double #_DIST default:NaN
14:14:30 DEBUG SkillConfigurator: request double #_MOVE_SPEED default:0.5
14:14:30 DEBUG SkillConfigurator: request double #_ANGLE default:NaN
14:14:30 DEBUG SkillConfigurator: request double #_ROT_SPEED default:0.5
14:14:30 DEBUG SkillConfigurator: request double #_DIR_X default:1.0
14:14:30 DEBUG SkillConfigurator: request double #_DIR_Y default:0.0
14:14:30 DEBUG DriveDirect: dist and angle missing, using slot
14:14:30 DEBUG StateMachineConfigurator: Created actuator "NavigationActuator" for state de.unibi.citec.clf.bonsai.skills.nav.drive.DriveDirect#bmb
14:14:30 WARN  SkillConfigurator: missing slot mapping, create default
14:14:30 DEBUG StateMachineConfigurator: configuring state: de.unibi.citec.clf.bonsai.skills.dialog.SaySlot#giveanswer#bmb
14:14:30 DEBUG StateMachineConfigurator: created class object: class de.unibi.citec.clf.bonsai.skills.dialog.SaySlot
14:14:30 DEBUG StateMachineConfigurator: using settings:
14:14:30 DEBUG StateMachineConfigurator:  -#_BLOCKING=true
14:14:30 DEBUG StateMachineConfigurator:  -#_MESSAGE=$S
14:14:30 DEBUG SkillConfigurator: request value #_MESSAGE default:$S
14:14:30 DEBUG SkillConfigurator: request bool #_BLOCKING default:true
14:14:30 DEBUG StateMachineConfigurator: Created actuator "SpeechActuator" for state de.unibi.citec.clf.bonsai.skills.dialog.SaySlot#giveanswer#bmb
14:14:30 WARN  SkillConfigurator: missing slot mapping, create default
14:14:30 DEBUG StateMachineConfigurator: configuring state: de.unibi.citec.clf.bonsai.skills.nav.drive.DriveDirect#answer
14:14:30 DEBUG StateMachineConfigurator: created class object: class de.unibi.citec.clf.bonsai.skills.nav.drive.DriveDirect
14:14:30 DEBUG StateMachineConfigurator: using settings:
14:14:30 DEBUG StateMachineConfigurator:  -#_ROT_SPEED=2.0
14:14:30 DEBUG SkillConfigurator: request INT #_TIMEOUT default:-1
14:14:30 DEBUG SkillConfigurator: request double #_DIST default:NaN
14:14:30 DEBUG SkillConfigurator: request double #_MOVE_SPEED default:0.5
14:14:30 DEBUG SkillConfigurator: request double #_ANGLE default:NaN
14:14:30 DEBUG SkillConfigurator: request double #_ROT_SPEED default:0.5
14:14:30 DEBUG SkillConfigurator: request double #_DIR_X default:1.0
14:14:30 DEBUG SkillConfigurator: request double #_DIR_Y default:0.0
14:14:30 DEBUG DriveDirect: dist and angle missing, using slot
14:14:30 DEBUG StateMachineConfigurator: Created actuator "NavigationActuator" for state de.unibi.citec.clf.bonsai.skills.nav.drive.DriveDirect#answer
14:14:30 WARN  SkillConfigurator: missing slot mapping, create default
14:14:30 DEBUG StateMachineConfigurator: configuring state: de.unibi.citec.clf.bonsai.skills.dialog.Talk#answerFatal#answer
14:14:30 DEBUG StateMachineConfigurator: created class object: class de.unibi.citec.clf.bonsai.skills.dialog.Talk
14:14:30 DEBUG StateMachineConfigurator: using settings:
14:14:30 DEBUG StateMachineConfigurator:  -#_BLOCKING=true
14:14:30 DEBUG StateMachineConfigurator:  -#_MESSAGE=Sorry, i have trouble answering                     the question.
14:14:30 DEBUG SkillConfigurator: request value #_MESSAGE
14:14:30 DEBUG SkillConfigurator: request bool #_BLOCKING default:true
14:14:30 DEBUG Talk: Sorry, i have trouble answering                     the question.
14:14:30 DEBUG StateMachineConfigurator: Created actuator "SpeechActuator" for state de.unibi.citec.clf.bonsai.skills.dialog.Talk#answerFatal#answer
14:14:30 DEBUG StateMachineConfigurator: configuring state: de.unibi.citec.clf.bonsai.skills.body.SetRobotGaze#reset
14:14:30 DEBUG StateMachineConfigurator: created class object: class de.unibi.citec.clf.bonsai.skills.body.SetRobotGaze
14:14:30 DEBUG StateMachineConfigurator: using settings:
14:14:30 DEBUG StateMachineConfigurator:  -#_VERTICAL=0.0
14:14:30 DEBUG StateMachineConfigurator:  -#_HORIZONTAL=0.0
14:14:30 DEBUG SkillConfigurator: request bool #_BLOCKING default:false
14:14:30 DEBUG SkillConfigurator: request double #_HORIZONTAL default:1.7976931348623157E308
14:14:30 DEBUG SkillConfigurator: request double #_VERTICAL default:1.7976931348623157E308
14:14:30 DEBUG SkillConfigurator: request double #_MOVE_DURATION default:0.0
14:14:30 DEBUG StateMachineConfigurator: Created actuator "GazeActuator" for state de.unibi.citec.clf.bonsai.skills.body.SetRobotGaze#reset
14:14:30 DEBUG StateMachineConfigurator: configuring state: de.unibi.citec.clf.bonsai.skills.dialog.Talk#startWithRiddles
14:14:30 DEBUG StateMachineConfigurator: created class object: class de.unibi.citec.clf.bonsai.skills.dialog.Talk
14:14:30 DEBUG StateMachineConfigurator: using settings:
14:14:30 DEBUG StateMachineConfigurator:  -#_BLOCKING=true
14:14:30 DEBUG StateMachineConfigurator:  -#_MESSAGE=lets play riddles now. i will wait             for your questions now
14:14:30 DEBUG SkillConfigurator: request value #_MESSAGE
14:14:30 DEBUG SkillConfigurator: request bool #_BLOCKING default:true
14:14:30 DEBUG Talk: lets play riddles now. i will wait             for your questions now
14:14:30 DEBUG StateMachineConfigurator: Created actuator "SpeechActuator" for state de.unibi.citec.clf.bonsai.skills.dialog.Talk#startWithRiddles
14:14:30 DEBUG StateMachineConfigurator: configuring state: de.unibi.citec.clf.bonsai.skills.dialog.SaySlot#giveanswer#answer
14:14:30 DEBUG StateMachineConfigurator: created class object: class de.unibi.citec.clf.bonsai.skills.dialog.SaySlot
14:14:30 DEBUG StateMachineConfigurator: using settings:
14:14:30 DEBUG StateMachineConfigurator:  -#_BLOCKING=true
14:14:30 DEBUG StateMachineConfigurator:  -#_MESSAGE=$S
14:14:30 DEBUG SkillConfigurator: request value #_MESSAGE default:$S
14:14:30 DEBUG SkillConfigurator: request bool #_BLOCKING default:true
14:14:30 DEBUG StateMachineConfigurator: Created actuator "SpeechActuator" for state de.unibi.citec.clf.bonsai.skills.dialog.SaySlot#giveanswer#answer
14:14:30 WARN  SkillConfigurator: missing slot mapping, create default
14:14:30 DEBUG StateMachineConfigurator: configuring state: de.unibi.citec.clf.bonsai.skills.dialog.Talk#errorUnhandeled#crowdrec
14:14:30 DEBUG StateMachineConfigurator: created class object: class de.unibi.citec.clf.bonsai.skills.dialog.Talk
14:14:30 DEBUG StateMachineConfigurator: using settings:
14:14:30 DEBUG StateMachineConfigurator:  -#_BLOCKING=true
14:14:30 DEBUG StateMachineConfigurator:  -#_MESSAGE=Something went wrong. I                     encountered an unexpected Error. 
14:14:30 DEBUG SkillConfigurator: request value #_MESSAGE
14:14:30 DEBUG SkillConfigurator: request bool #_BLOCKING default:true
14:14:30 DEBUG Talk: Something went wrong. I                     encountered an unexpected Error. 
14:14:30 DEBUG StateMachineConfigurator: Created actuator "SpeechActuator" for state de.unibi.citec.clf.bonsai.skills.dialog.Talk#errorUnhandeled#crowdrec
14:14:30 DEBUG StateMachineConfigurator: configuring state: de.unibi.citec.clf.bonsai.skills.dialog.Talk#beginScanProcedure#crowdrec
14:14:30 DEBUG StateMachineConfigurator: created class object: class de.unibi.citec.clf.bonsai.skills.dialog.Talk
14:14:30 DEBUG StateMachineConfigurator: using settings:
14:14:30 DEBUG StateMachineConfigurator:  -#_BLOCKING=true
14:14:30 DEBUG StateMachineConfigurator:  -#_MESSAGE=I will scan the group now.                 please do not move and look in my direction with a neutral                 facial expression.
14:14:30 DEBUG SkillConfigurator: request value #_MESSAGE
14:14:30 DEBUG SkillConfigurator: request bool #_BLOCKING default:true
14:14:30 DEBUG Talk: I will scan the group now.                 please do not move and look in my direction with a neutral                 facial expression.
14:14:30 DEBUG StateMachineConfigurator: Created actuator "SpeechActuator" for state de.unibi.citec.clf.bonsai.skills.dialog.Talk#beginScanProcedure#crowdrec
14:14:30 DEBUG StateMachineConfigurator: configuring state: de.unibi.citec.clf.bonsai.skills.tasks.speechrec.CheckFreeSpaceAroundCrowd#crowdrec
14:14:30 DEBUG StateMachineConfigurator: created class object: class de.unibi.citec.clf.bonsai.skills.tasks.speechrec.CheckFreeSpaceAroundCrowd
14:14:30 DEBUG StateMachineConfigurator: using settings:
14:14:30 DEBUG StateMachineConfigurator:  -#_CHECK_IN_ARENA=true
14:14:30 DEBUG SkillConfigurator: request bool #_CHECK_IN_ARENA default:false
14:14:30 DEBUG SkillConfigurator: request INT #_TIMEOUT default:60000
14:14:30 DEBUG StateMachineConfigurator: Created actuator "PeopleActuator" for state de.unibi.citec.clf.bonsai.skills.tasks.speechrec.CheckFreeSpaceAroundCrowd#crowdrec
14:14:30 DEBUG StateMachineConfigurator: Created actuator "KBaseActuator" for state de.unibi.citec.clf.bonsai.skills.tasks.speechrec.CheckFreeSpaceAroundCrowd#crowdrec
14:14:30 DEBUG StateMachineConfigurator: Request sensor "PositionSensor" for state de.unibi.citec.clf.bonsai.skills.tasks.speechrec.CheckFreeSpaceAroundCrowd#crowdrec
14:14:30 WARN  SkillConfigurator: missing slot mapping, create default
14:14:30 DEBUG StateMachineConfigurator: configuring state: de.unibi.citec.clf.bonsai.skills.dialog.Talk#searchGroup#crowdrec
14:14:30 DEBUG StateMachineConfigurator: created class object: class de.unibi.citec.clf.bonsai.skills.dialog.Talk
14:14:30 DEBUG StateMachineConfigurator: using settings:
14:14:30 DEBUG StateMachineConfigurator:  -#_BLOCKING=true
14:14:30 DEBUG StateMachineConfigurator:  -#_MESSAGE=I will search the group now.                 And adjust my position to get a good look at everyone
14:14:30 DEBUG SkillConfigurator: request value #_MESSAGE
14:14:30 DEBUG SkillConfigurator: request bool #_BLOCKING default:true
14:14:30 DEBUG Talk: I will search the group now.                 And adjust my position to get a good look at everyone
14:14:30 DEBUG StateMachineConfigurator: Created actuator "SpeechActuator" for state de.unibi.citec.clf.bonsai.skills.dialog.Talk#searchGroup#crowdrec
14:14:30 DEBUG StateMachineConfigurator: configuring state: de.unibi.citec.clf.bonsai.skills.dialog.Talk#fatal#crowdrec
14:14:30 DEBUG StateMachineConfigurator: created class object: class de.unibi.citec.clf.bonsai.skills.dialog.Talk
14:14:30 DEBUG StateMachineConfigurator: using settings:
14:14:30 DEBUG StateMachineConfigurator:  -#_BLOCKING=true
14:14:30 DEBUG StateMachineConfigurator:  -#_MESSAGE=A fatal error accrued while                     attempting to adjust my position
14:14:30 DEBUG SkillConfigurator: request value #_MESSAGE
14:14:30 DEBUG SkillConfigurator: request bool #_BLOCKING default:true
14:14:30 DEBUG Talk: A fatal error accrued while                     attempting to adjust my position
14:14:30 DEBUG StateMachineConfigurator: Created actuator "SpeechActuator" for state de.unibi.citec.clf.bonsai.skills.dialog.Talk#fatal#crowdrec
14:14:30 DEBUG StateMachineConfigurator: configuring state: de.unibi.citec.clf.bonsai.skills.personPerception.DescribeCrowd#crowdrec
14:14:30 DEBUG StateMachineConfigurator: created class object: class de.unibi.citec.clf.bonsai.skills.personPerception.DescribeCrowd
14:14:30 DEBUG StateMachineConfigurator: using settings:
14:14:30 DEBUG SkillConfigurator: request bool #_SAY_GENDER default:true
14:14:30 DEBUG SkillConfigurator: request bool #_GERMAN default:false
14:14:30 WARN  SkillConfigurator: missing slot mapping, create default
14:14:30 WARN  SkillConfigurator: missing slot mapping, create default
14:14:30 DEBUG StateMachineConfigurator: configuring state: de.unibi.citec.clf.bonsai.skills.End
14:14:30 DEBUG StateMachineConfigurator: created class object: class de.unibi.citec.clf.bonsai.skills.End
14:14:30 DEBUG StateMachineConfigurator: using settings:
14:14:30 DEBUG StateMachineConfigurator: configuring state: de.unibi.citec.clf.bonsai.skills.body.ExecutePosture#crowdrec
14:14:30 DEBUG StateMachineConfigurator: created class object: class de.unibi.citec.clf.bonsai.skills.body.ExecutePosture
14:14:30 DEBUG StateMachineConfigurator: using settings:
14:14:30 DEBUG StateMachineConfigurator:  -#_POSE=camera
14:14:30 DEBUG StateMachineConfigurator:  -#_BLOCKING=true
14:14:30 DEBUG SkillConfigurator: request bool #_BLOCKING default:true
14:14:30 DEBUG SkillConfigurator: request value #_POSE
14:14:30 DEBUG SkillConfigurator: request value #_GROUP default:null
14:14:30 DEBUG StateMachineConfigurator: Created actuator "PostureActuator" for state de.unibi.citec.clf.bonsai.skills.body.ExecutePosture#crowdrec
14:14:30 DEBUG StateMachineConfigurator: configuring state: de.unibi.citec.clf.bonsai.skills.dialog.Talk#smthWentWrong
14:14:30 DEBUG StateMachineConfigurator: created class object: class de.unibi.citec.clf.bonsai.skills.dialog.Talk
14:14:30 DEBUG StateMachineConfigurator: using settings:
14:14:30 DEBUG StateMachineConfigurator:  -#_BLOCKING=true
14:14:30 DEBUG StateMachineConfigurator:  -#_MESSAGE=Sorry Guys, something went                 wrong, lets continue with the blind mans bluff game.
14:14:30 DEBUG SkillConfigurator: request value #_MESSAGE
14:14:30 DEBUG SkillConfigurator: request bool #_BLOCKING default:true
14:14:30 DEBUG Talk: Sorry Guys, something went                 wrong, lets continue with the blind mans bluff game.
14:14:30 DEBUG StateMachineConfigurator: Created actuator "SpeechActuator" for state de.unibi.citec.clf.bonsai.skills.dialog.Talk#smthWentWrong
14:14:30 DEBUG StateMachineConfigurator: configuring state: de.unibi.citec.clf.bonsai.skills.dialog.SaySlot#crowdrec
14:14:30 DEBUG StateMachineConfigurator: created class object: class de.unibi.citec.clf.bonsai.skills.dialog.SaySlot
14:14:30 DEBUG StateMachineConfigurator: using settings:
14:14:30 DEBUG StateMachineConfigurator:  -#_MESSAGE=$S.
14:14:30 DEBUG SkillConfigurator: request value #_MESSAGE default:$S
14:14:30 DEBUG SkillConfigurator: request bool #_BLOCKING default:true
14:14:30 DEBUG StateMachineConfigurator: Created actuator "SpeechActuator" for state de.unibi.citec.clf.bonsai.skills.dialog.SaySlot#crowdrec
14:14:30 WARN  SkillConfigurator: missing slot mapping, create default
14:14:30 DEBUG StateMachineConfigurator: ... is not a simple state.
14:14:30 DEBUG StateMachineConfigurator: ... is not a simple state.
14:14:30 DEBUG StateMachineConfigurator: configuring state: de.unibi.citec.clf.bonsai.skills.Wait#WaitTenSek
14:14:30 DEBUG StateMachineConfigurator: created class object: class de.unibi.citec.clf.bonsai.skills.Wait
14:14:30 DEBUG StateMachineConfigurator: using settings:
14:14:30 DEBUG StateMachineConfigurator:  -#_TIMEOUT=10000
14:14:30 DEBUG SkillConfigurator: request INT #_TIMEOUT default:1000
14:14:30 DEBUG StateMachineConfigurator: configuring state: de.unibi.citec.clf.bonsai.skills.body.SetRobotGaze#reset#crowdrec
14:14:30 DEBUG StateMachineConfigurator: created class object: class de.unibi.citec.clf.bonsai.skills.body.SetRobotGaze
14:14:30 DEBUG StateMachineConfigurator: using settings:
14:14:30 DEBUG StateMachineConfigurator:  -#_VERTICAL=0.0
14:14:30 DEBUG StateMachineConfigurator:  -#_HORIZONTAL=0.0
14:14:30 DEBUG SkillConfigurator: request bool #_BLOCKING default:false
14:14:30 DEBUG SkillConfigurator: request double #_HORIZONTAL default:1.7976931348623157E308
14:14:30 DEBUG SkillConfigurator: request double #_VERTICAL default:1.7976931348623157E308
14:14:30 DEBUG SkillConfigurator: request double #_MOVE_DURATION default:0.0
14:14:30 DEBUG StateMachineConfigurator: Created actuator "GazeActuator" for state de.unibi.citec.clf.bonsai.skills.body.SetRobotGaze#reset#crowdrec
14:14:30 DEBUG StateMachineConfigurator: configuring state: de.unibi.citec.clf.bonsai.skills.dialog.Talk#bmbFinished
14:14:30 DEBUG StateMachineConfigurator: created class object: class de.unibi.citec.clf.bonsai.skills.dialog.Talk
14:14:30 DEBUG StateMachineConfigurator: using settings:
14:14:30 DEBUG StateMachineConfigurator:  -#_BLOCKING=true
14:14:30 DEBUG StateMachineConfigurator:  -#_MESSAGE=Ok Guys, we are finished. thanks             for playing.
14:14:30 DEBUG SkillConfigurator: request value #_MESSAGE
14:14:30 DEBUG SkillConfigurator: request bool #_BLOCKING default:true
14:14:30 DEBUG Talk: Ok Guys, we are finished. thanks             for playing.
14:14:30 DEBUG StateMachineConfigurator: Created actuator "SpeechActuator" for state de.unibi.citec.clf.bonsai.skills.dialog.Talk#bmbFinished
14:14:30 DEBUG StateMachineConfigurator: configuring state: de.unibi.citec.clf.bonsai.skills.nav.drive.DriveDirect#adjustPos#crowdrec
14:14:30 DEBUG StateMachineConfigurator: created class object: class de.unibi.citec.clf.bonsai.skills.nav.drive.DriveDirect
14:14:30 DEBUG StateMachineConfigurator: using settings:
14:14:30 DEBUG SkillConfigurator: request INT #_TIMEOUT default:-1
14:14:30 DEBUG SkillConfigurator: request double #_DIST default:NaN
14:14:30 DEBUG SkillConfigurator: request double #_MOVE_SPEED default:0.5
14:14:30 DEBUG SkillConfigurator: request double #_ANGLE default:NaN
14:14:30 DEBUG SkillConfigurator: request double #_ROT_SPEED default:0.5
14:14:30 DEBUG SkillConfigurator: request double #_DIR_X default:1.0
14:14:30 DEBUG SkillConfigurator: request double #_DIR_Y default:0.0
14:14:30 DEBUG DriveDirect: dist and angle missing, using slot
14:14:30 DEBUG StateMachineConfigurator: Created actuator "NavigationActuator" for state de.unibi.citec.clf.bonsai.skills.nav.drive.DriveDirect#adjustPos#crowdrec
14:14:30 WARN  SkillConfigurator: missing slot mapping, create default
14:14:30 DEBUG StateMachineConfigurator: configuring state: de.unibi.citec.clf.bonsai.skills.dialog.Talk#answerNotUnderstood#answer
14:14:30 DEBUG StateMachineConfigurator: created class object: class de.unibi.citec.clf.bonsai.skills.dialog.Talk
14:14:30 DEBUG StateMachineConfigurator: using settings:
14:14:30 DEBUG StateMachineConfigurator:  -#_BLOCKING=true
14:14:30 DEBUG StateMachineConfigurator:  -#_MESSAGE=Sorry, i have trouble hearing                     you. Please repeat the question a little louder.
14:14:30 DEBUG SkillConfigurator: request value #_MESSAGE
14:14:30 DEBUG SkillConfigurator: request bool #_BLOCKING default:true
14:14:30 DEBUG Talk: Sorry, i have trouble hearing                     you. Please repeat the question a little louder.
14:14:30 DEBUG StateMachineConfigurator: Created actuator "SpeechActuator" for state de.unibi.citec.clf.bonsai.skills.dialog.Talk#answerNotUnderstood#answer
14:14:30 DEBUG StateMachineConfigurator: configuring state: de.unibi.citec.clf.bonsai.skills.dialog.Talk#NowBMB
14:14:30 DEBUG StateMachineConfigurator: created class object: class de.unibi.citec.clf.bonsai.skills.dialog.Talk
14:14:30 DEBUG StateMachineConfigurator: using settings:
14:14:30 DEBUG StateMachineConfigurator:  -#_BLOCKING=true
14:14:30 DEBUG StateMachineConfigurator:  -#_MESSAGE=Ok Guys, now lets play the blind             mans bluff game. go ahead ask me a question
14:14:30 DEBUG SkillConfigurator: request value #_MESSAGE
14:14:30 DEBUG SkillConfigurator: request bool #_BLOCKING default:true
14:14:30 DEBUG Talk: Ok Guys, now lets play the blind             mans bluff game. go ahead ask me a question
14:14:30 DEBUG StateMachineConfigurator: Created actuator "SpeechActuator" for state de.unibi.citec.clf.bonsai.skills.dialog.Talk#NowBMB
14:14:30 DEBUG StateMachineConfigurator: configuring state: de.unibi.citec.clf.bonsai.skills.tasks.speechrec.AnswerQuestion#bmb
14:14:30 DEBUG StateMachineConfigurator: created class object: class de.unibi.citec.clf.bonsai.skills.tasks.speechrec.AnswerQuestion
14:14:30 DEBUG StateMachineConfigurator: using settings:
14:14:30 DEBUG StateMachineConfigurator: Created actuator "KBaseActuator" for state de.unibi.citec.clf.bonsai.skills.tasks.speechrec.AnswerQuestion#bmb
14:14:30 WARN  SkillConfigurator: missing slot mapping, create default
14:14:30 WARN  SkillConfigurator: missing slot mapping, create default
14:14:30 WARN  SkillConfigurator: missing slot mapping, create default
14:14:30 DEBUG StateMachineConfigurator: configuring state: de.unibi.citec.clf.bonsai.skills.nav.drive.DriveDirect#timeout#answer
14:14:30 DEBUG StateMachineConfigurator: created class object: class de.unibi.citec.clf.bonsai.skills.nav.drive.DriveDirect
14:14:30 DEBUG StateMachineConfigurator: using settings:
14:14:30 DEBUG StateMachineConfigurator:  -#_ROT_SPEED=2.0
14:14:30 DEBUG SkillConfigurator: request INT #_TIMEOUT default:-1
14:14:30 DEBUG SkillConfigurator: request double #_DIST default:NaN
14:14:30 DEBUG SkillConfigurator: request double #_MOVE_SPEED default:0.5
14:14:30 DEBUG SkillConfigurator: request double #_ANGLE default:NaN
14:14:30 DEBUG SkillConfigurator: request double #_ROT_SPEED default:0.5
14:14:30 DEBUG SkillConfigurator: request double #_DIR_X default:1.0
14:14:30 DEBUG SkillConfigurator: request double #_DIR_Y default:0.0
14:14:30 DEBUG DriveDirect: dist and angle missing, using slot
14:14:30 DEBUG StateMachineConfigurator: Created actuator "NavigationActuator" for state de.unibi.citec.clf.bonsai.skills.nav.drive.DriveDirect#timeout#answer
14:14:30 WARN  SkillConfigurator: missing slot mapping, create default
14:14:30 DEBUG StateMachineConfigurator: configuring state: de.unibi.citec.clf.bonsai.skills.dialog.Talk#successTimout#crowdrec
14:14:30 DEBUG StateMachineConfigurator: created class object: class de.unibi.citec.clf.bonsai.skills.dialog.Talk
14:14:30 DEBUG StateMachineConfigurator: using settings:
14:14:30 DEBUG StateMachineConfigurator:  -#_BLOCKING=true
14:14:30 DEBUG StateMachineConfigurator:  -#_MESSAGE=There was a Timeout while                     driving.
14:14:30 DEBUG SkillConfigurator: request value #_MESSAGE
14:14:30 DEBUG SkillConfigurator: request bool #_BLOCKING default:true
14:14:30 DEBUG Talk: There was a Timeout while                     driving.
14:14:30 DEBUG StateMachineConfigurator: Created actuator "SpeechActuator" for state de.unibi.citec.clf.bonsai.skills.dialog.Talk#successTimout#crowdrec
14:14:30 DEBUG StateMachineConfigurator: configuring state: de.unibi.citec.clf.bonsai.skills.tasks.speechrec.AnswerQuestion#answer
14:14:30 DEBUG StateMachineConfigurator: created class object: class de.unibi.citec.clf.bonsai.skills.tasks.speechrec.AnswerQuestion
14:14:30 DEBUG StateMachineConfigurator: using settings:
14:14:30 DEBUG StateMachineConfigurator: Created actuator "KBaseActuator" for state de.unibi.citec.clf.bonsai.skills.tasks.speechrec.AnswerQuestion#answer
14:14:30 WARN  SkillConfigurator: missing slot mapping, create default
14:14:30 WARN  SkillConfigurator: missing slot mapping, create default
14:14:30 WARN  SkillConfigurator: missing slot mapping, create default
14:14:30 DEBUG StateMachineConfigurator: configuring state: de.unibi.citec.clf.bonsai.skills.dialog.Talk#letsPlayAGame
14:14:30 DEBUG StateMachineConfigurator: created class object: class de.unibi.citec.clf.bonsai.skills.dialog.Talk
14:14:30 DEBUG StateMachineConfigurator: using settings:
14:14:30 DEBUG StateMachineConfigurator:  -#_BLOCKING=true
14:14:30 DEBUG StateMachineConfigurator:  -#_MESSAGE=Hi Guys, I want to play riddles.             Please assemble behind me so i can see you when i turn around             in ten seconds.
14:14:30 DEBUG SkillConfigurator: request value #_MESSAGE
14:14:30 DEBUG SkillConfigurator: request bool #_BLOCKING default:true
14:14:30 DEBUG Talk: Hi Guys, I want to play riddles.             Please assemble behind me so i can see you when i turn around             in ten seconds.
14:14:30 DEBUG StateMachineConfigurator: Created actuator "SpeechActuator" for state de.unibi.citec.clf.bonsai.skills.dialog.Talk#letsPlayAGame
14:14:30 DEBUG StateMachineConfigurator: configuring state: de.unibi.citec.clf.bonsai.skills.dialog.Talk#answerFatal#bmb
14:14:30 DEBUG StateMachineConfigurator: created class object: class de.unibi.citec.clf.bonsai.skills.dialog.Talk
14:14:30 DEBUG StateMachineConfigurator: using settings:
14:14:30 DEBUG StateMachineConfigurator:  -#_BLOCKING=true
14:14:30 DEBUG StateMachineConfigurator:  -#_MESSAGE=Sorry, i have trouble answering                     the question.
14:14:30 DEBUG SkillConfigurator: request value #_MESSAGE
14:14:30 DEBUG SkillConfigurator: request bool #_BLOCKING default:true
14:14:30 DEBUG Talk: Sorry, i have trouble answering                     the question.
14:14:30 DEBUG StateMachineConfigurator: Created actuator "SpeechActuator" for state de.unibi.citec.clf.bonsai.skills.dialog.Talk#answerFatal#bmb
14:14:30 DEBUG StateMachineConfigurator: configuring state: de.unibi.citec.clf.bonsai.skills.tasks.speechrec.PepperGetSourceAndGNT#answer
14:14:30 DEBUG StateMachineConfigurator: created class object: class de.unibi.citec.clf.bonsai.skills.tasks.speechrec.PepperGetSourceAndGNT
14:14:30 INFO  StateMachineConfigurator: overwritten @SENSOR with external:SpeechSensor
14:14:30 INFO  StateMachineConfigurator: overwritten @TURN_TO_SOURCE with external:false
14:14:30 INFO  StateMachineConfigurator: overwritten @TIMEOUT with external:-1
14:14:30 INFO  StateMachineConfigurator: overwritten @exitWoGNT with external:false
14:14:30 DEBUG StateMachineConfigurator: using settings:
14:14:30 DEBUG StateMachineConfigurator:  -#_TIMEOUT=-1
14:14:30 DEBUG StateMachineConfigurator:  -#_ALLOW_EXITING_WITHOUT_GNT=false
14:14:30 DEBUG StateMachineConfigurator:  -#_TURN_TO_SOURCE=false
14:14:30 DEBUG StateMachineConfigurator:  -#_SENSOR=SpeechSensor
14:14:30 DEBUG StateMachineConfigurator:  -#_NONTERMINALS=question
14:14:30 DEBUG SkillConfigurator: request bool #_TURN_TO_SOURCE default:true
14:14:30 DEBUG SkillConfigurator: request value #_SENSOR
14:14:30 DEBUG PepperGetSourceAndGNT: wait for nt using speech sensor:SpeechSensor
14:14:30 DEBUG SkillConfigurator: request INT #_TIMEOUT default:-1
14:14:30 DEBUG SkillConfigurator: request double #_MAX_DISTANCE default:2.0
14:14:30 DEBUG SkillConfigurator: request value #_NONTERMINALS
14:14:30 DEBUG SkillConfigurator: request bool #_DISABLE_CONCAT_UNDERSCORE default:false
14:14:30 DEBUG SkillConfigurator: request value #_NONTERMINALS_TO_CONFIRM default:#N/A#
14:14:30 DEBUG SkillConfigurator: request value #_TEXT default:#N/A#
14:14:30 DEBUG SkillConfigurator: request bool #_ALLOW_EXITING_WITHOUT_GNT default:false
14:14:30 DEBUG StateMachineConfigurator: Created actuator "SSLActuator" for state de.unibi.citec.clf.bonsai.skills.tasks.speechrec.PepperGetSourceAndGNT#answer
14:14:30 DEBUG StateMachineConfigurator: Created actuator "SpeechActuator" for state de.unibi.citec.clf.bonsai.skills.tasks.speechrec.PepperGetSourceAndGNT#answer
14:14:30 DEBUG StateMachineConfigurator: Request sensor "SpeechSensor" for state de.unibi.citec.clf.bonsai.skills.tasks.speechrec.PepperGetSourceAndGNT#answer
14:14:30 WARN  SkillConfigurator: missing slot mapping, create default
14:14:30 WARN  SkillConfigurator: missing slot mapping, create default
14:14:30 DEBUG StateMachineConfigurator: ... is not a simple state.
14:14:30 DEBUG StateMachineConfigurator: ... is not a simple state.
14:14:30 DEBUG StateMachineConfigurator: configuring state: de.unibi.citec.clf.bonsai.skills.dialog.Talk#answerNotUnderstood#bmb
14:14:30 DEBUG StateMachineConfigurator: created class object: class de.unibi.citec.clf.bonsai.skills.dialog.Talk
14:14:30 DEBUG StateMachineConfigurator: using settings:
14:14:30 DEBUG StateMachineConfigurator:  -#_BLOCKING=true
14:14:30 DEBUG StateMachineConfigurator:  -#_MESSAGE=Sorry, i have trouble hearing                     you. Please repeat the question a little louder.
14:14:30 DEBUG SkillConfigurator: request value #_MESSAGE
14:14:30 DEBUG SkillConfigurator: request bool #_BLOCKING default:true
14:14:30 DEBUG Talk: Sorry, i have trouble hearing                     you. Please repeat the question a little louder.
14:14:30 DEBUG StateMachineConfigurator: Created actuator "SpeechActuator" for state de.unibi.citec.clf.bonsai.skills.dialog.Talk#answerNotUnderstood#bmb
14:14:30 DEBUG StateMachineConfigurator: configuring state: de.unibi.citec.clf.bonsai.skills.End#crowdrec
14:14:30 DEBUG StateMachineConfigurator: created class object: class de.unibi.citec.clf.bonsai.skills.End
14:14:30 DEBUG StateMachineConfigurator: using settings:
14:14:30 DEBUG StateMachineConfigurator: configuring state: de.unibi.citec.clf.bonsai.skills.tasks.speechrec.PepperGetSourceAndGNT#bmb
14:14:30 DEBUG StateMachineConfigurator: created class object: class de.unibi.citec.clf.bonsai.skills.tasks.speechrec.PepperGetSourceAndGNT
14:14:30 INFO  StateMachineConfigurator: overwritten @SENSOR with external:SpeechSensor
14:14:30 INFO  StateMachineConfigurator: overwritten @TURN_TO_SOURCE with external:false
14:14:30 INFO  StateMachineConfigurator: overwritten @TIMEOUT with external:-1
14:14:30 INFO  StateMachineConfigurator: overwritten @exitWoGNT with external:false
14:14:30 DEBUG StateMachineConfigurator: using settings:
14:14:30 DEBUG StateMachineConfigurator:  -#_TIMEOUT=-1
14:14:30 DEBUG StateMachineConfigurator:  -#_ALLOW_EXITING_WITHOUT_GNT=false
14:14:30 DEBUG StateMachineConfigurator:  -#_TURN_TO_SOURCE=false
14:14:30 DEBUG StateMachineConfigurator:  -#_SENSOR=SpeechSensor
14:14:30 DEBUG StateMachineConfigurator:  -#_NONTERMINALS=question
14:14:30 DEBUG SkillConfigurator: request bool #_TURN_TO_SOURCE default:true
14:14:30 DEBUG SkillConfigurator: request value #_SENSOR
14:14:30 DEBUG PepperGetSourceAndGNT: wait for nt using speech sensor:SpeechSensor
14:14:30 DEBUG SkillConfigurator: request INT #_TIMEOUT default:-1
14:14:30 DEBUG SkillConfigurator: request double #_MAX_DISTANCE default:2.0
14:14:30 DEBUG SkillConfigurator: request value #_NONTERMINALS
14:14:30 DEBUG SkillConfigurator: request bool #_DISABLE_CONCAT_UNDERSCORE default:false
14:14:30 DEBUG SkillConfigurator: request value #_NONTERMINALS_TO_CONFIRM default:#N/A#
14:14:30 DEBUG SkillConfigurator: request value #_TEXT default:#N/A#
14:14:30 DEBUG SkillConfigurator: request bool #_ALLOW_EXITING_WITHOUT_GNT default:false
14:14:30 DEBUG StateMachineConfigurator: Created actuator "SSLActuator" for state de.unibi.citec.clf.bonsai.skills.tasks.speechrec.PepperGetSourceAndGNT#bmb
14:14:30 DEBUG StateMachineConfigurator: Created actuator "SpeechActuator" for state de.unibi.citec.clf.bonsai.skills.tasks.speechrec.PepperGetSourceAndGNT#bmb
14:14:30 DEBUG StateMachineConfigurator: Request sensor "SpeechSensor" for state de.unibi.citec.clf.bonsai.skills.tasks.speechrec.PepperGetSourceAndGNT#bmb
14:14:30 WARN  SkillConfigurator: missing slot mapping, create default
14:14:30 WARN  SkillConfigurator: missing slot mapping, create default
14:14:30 DEBUG StateMachineConfigurator: configuring state: de.unibi.citec.clf.bonsai.skills.personPerception.GatherCrowdInformation#crowdrec
14:14:30 DEBUG StateMachineConfigurator: created class object: class de.unibi.citec.clf.bonsai.skills.personPerception.GatherCrowdInformation
14:14:30 DEBUG StateMachineConfigurator: using settings:
14:14:30 DEBUG StateMachineConfigurator:  -#_CHECK_IN_ARENA=true
14:14:30 DEBUG SkillConfigurator: request bool #_CHECK_IN_ARENA default:false
14:14:30 DEBUG SkillConfigurator: request INT #_TIMEOUT default:60000
14:14:30 DEBUG StateMachineConfigurator: Created actuator "PeopleActuator" for state de.unibi.citec.clf.bonsai.skills.personPerception.GatherCrowdInformation#crowdrec
14:14:30 DEBUG StateMachineConfigurator: Created actuator "KBaseActuator" for state de.unibi.citec.clf.bonsai.skills.personPerception.GatherCrowdInformation#crowdrec
14:14:30 DEBUG StateMachineConfigurator: Request sensor "PositionSensor" for state de.unibi.citec.clf.bonsai.skills.personPerception.GatherCrowdInformation#crowdrec
14:14:30 WARN  SkillConfigurator: missing slot mapping, create default
14:14:30 DEBUG StateMachineConfigurator: configuring state: de.unibi.citec.clf.bonsai.skills.nav.drive.DriveDirect#timeout#bmb
14:14:30 DEBUG StateMachineConfigurator: created class object: class de.unibi.citec.clf.bonsai.skills.nav.drive.DriveDirect
14:14:30 DEBUG StateMachineConfigurator: using settings:
14:14:30 DEBUG StateMachineConfigurator:  -#_ROT_SPEED=2.0
14:14:30 DEBUG SkillConfigurator: request INT #_TIMEOUT default:-1
14:14:30 DEBUG SkillConfigurator: request double #_DIST default:NaN
14:14:30 DEBUG SkillConfigurator: request double #_MOVE_SPEED default:0.5
14:14:30 DEBUG SkillConfigurator: request double #_ANGLE default:NaN
14:14:30 DEBUG SkillConfigurator: request double #_ROT_SPEED default:0.5
14:14:30 DEBUG SkillConfigurator: request double #_DIR_X default:1.0
14:14:30 DEBUG SkillConfigurator: request double #_DIR_Y default:0.0
14:14:30 DEBUG DriveDirect: dist and angle missing, using slot
14:14:30 DEBUG StateMachineConfigurator: Created actuator "NavigationActuator" for state de.unibi.citec.clf.bonsai.skills.nav.drive.DriveDirect#timeout#bmb
14:14:30 WARN  SkillConfigurator: missing slot mapping, create default
14:14:30 DEBUG StateMachineConfigurator: configuring state: de.unibi.citec.clf.bonsai.skills.nav.drive.DriveDirect#turnAround#crowdrec
14:14:30 DEBUG StateMachineConfigurator: created class object: class de.unibi.citec.clf.bonsai.skills.nav.drive.DriveDirect
14:14:30 DEBUG StateMachineConfigurator: using settings:
14:14:30 DEBUG StateMachineConfigurator:  -#_DIST=0.0
14:14:30 DEBUG StateMachineConfigurator:  -#_MOVE_SPEED=0.0
14:14:30 DEBUG StateMachineConfigurator:  -#_ANGLE=3.14159265359
14:14:30 DEBUG StateMachineConfigurator:  -#_ROT_SPEED=1.5
14:14:30 DEBUG SkillConfigurator: request INT #_TIMEOUT default:-1
14:14:30 DEBUG SkillConfigurator: request double #_DIST default:NaN
14:14:30 DEBUG SkillConfigurator: request double #_MOVE_SPEED default:0.5
14:14:30 DEBUG SkillConfigurator: request double #_ANGLE default:NaN
14:14:30 DEBUG SkillConfigurator: request double #_ROT_SPEED default:0.5
14:14:30 DEBUG SkillConfigurator: request double #_DIR_X default:1.0
14:14:30 DEBUG SkillConfigurator: request double #_DIR_Y default:0.0
14:14:30 DEBUG StateMachineConfigurator: Created actuator "NavigationActuator" for state de.unibi.citec.clf.bonsai.skills.nav.drive.DriveDirect#turnAround#crowdrec
14:14:30 DEBUG StateMachineConfigurator: configuring state: de.unibi.citec.clf.bonsai.skills.dialog.Talk#noPerson#crowdrec
14:14:30 DEBUG StateMachineConfigurator: created class object: class de.unibi.citec.clf.bonsai.skills.dialog.Talk
14:14:30 DEBUG StateMachineConfigurator: using settings:
14:14:30 DEBUG StateMachineConfigurator:  -#_BLOCKING=true
14:14:30 DEBUG StateMachineConfigurator:  -#_MESSAGE=Something went wrong. I                     could not detect any person to adjust my position
14:14:30 DEBUG SkillConfigurator: request value #_MESSAGE
14:14:30 DEBUG SkillConfigurator: request bool #_BLOCKING default:true
14:14:30 DEBUG Talk: Something went wrong. I                     could not detect any person to adjust my position
14:14:30 DEBUG StateMachineConfigurator: Created actuator "SpeechActuator" for state de.unibi.citec.clf.bonsai.skills.dialog.Talk#noPerson#crowdrec
14:14:30 DEBUG StateMachineConfigurator: configuring state: de.unibi.citec.clf.bonsai.skills.dialog.Talk#success#crowdrec
14:14:30 DEBUG StateMachineConfigurator: created class object: class de.unibi.citec.clf.bonsai.skills.dialog.Talk
14:14:30 DEBUG StateMachineConfigurator: using settings:
14:14:30 DEBUG StateMachineConfigurator:  -#_BLOCKING=true
14:14:30 DEBUG StateMachineConfigurator:  -#_MESSAGE=I successfully adjusted                     my position.
14:14:30 DEBUG SkillConfigurator: request value #_MESSAGE
14:14:30 DEBUG SkillConfigurator: request bool #_BLOCKING default:true
14:14:30 DEBUG Talk: I successfully adjusted                     my position.
14:14:30 DEBUG StateMachineConfigurator: Created actuator "SpeechActuator" for state de.unibi.citec.clf.bonsai.skills.dialog.Talk#success#crowdrec
14:14:30 INFO  StateMachineConfigurator: configured 49 skills with 0 errors
14:14:30 DEBUG SCXMLValidator: Found TranistionTarget: crowdrec
14:14:30 DEBUG SCXMLValidator: ... is not a simple state.
14:14:30 DEBUG SCXMLValidator: Found TranistionTarget: dialog.Talk#timesUp
14:14:30 DEBUG SCXMLValidator: ... class exists.
14:14:30 DEBUG SCXMLValidator: Found TranistionTarget: dialog.Talk#errorCancelled#crowdrec
14:14:30 DEBUG SCXMLValidator: ... class exists.
14:14:30 DEBUG SCXMLValidator: Found TranistionTarget: Wait#scanWaitInit#crowdrec
14:14:30 DEBUG SCXMLValidator: ... class exists.
14:14:30 DEBUG SCXMLValidator: Found TranistionTarget: Wait#WaitTwentySek
14:14:30 DEBUG SCXMLValidator: ... class exists.
14:14:30 DEBUG SCXMLValidator: Found TranistionTarget: dialog.Talk#smthWentWrongbmb
14:14:30 DEBUG SCXMLValidator: ... class exists.
14:14:30 DEBUG SCXMLValidator: Found TranistionTarget: riddlesgame
14:14:30 DEBUG SCXMLValidator: ... is not a simple state.
14:14:30 DEBUG SCXMLValidator: Found TranistionTarget: nav.drive.DriveDirect#bmb
14:14:30 DEBUG SCXMLValidator: ... class exists.
14:14:30 DEBUG SCXMLValidator: Found TranistionTarget: dialog.SaySlot#giveanswer#bmb
14:14:30 DEBUG SCXMLValidator: ... class exists.
14:14:30 DEBUG SCXMLValidator: Found TranistionTarget: nav.drive.DriveDirect#answer
14:14:30 DEBUG SCXMLValidator: ... class exists.
14:14:30 DEBUG SCXMLValidator: Found TranistionTarget: dialog.Talk#answerFatal#answer
14:14:30 DEBUG SCXMLValidator: ... class exists.
14:14:30 DEBUG SCXMLValidator: Found TranistionTarget: body.SetRobotGaze#reset
14:14:30 DEBUG SCXMLValidator: ... class exists.
14:14:30 DEBUG SCXMLValidator: Found TranistionTarget: dialog.Talk#startWithRiddles
14:14:30 DEBUG SCXMLValidator: ... class exists.
14:14:30 DEBUG SCXMLValidator: Found TranistionTarget: dialog.SaySlot#giveanswer#answer
14:14:30 DEBUG SCXMLValidator: ... class exists.
14:14:30 DEBUG SCXMLValidator: Found TranistionTarget: dialog.Talk#errorUnhandeled#crowdrec
14:14:30 DEBUG SCXMLValidator: ... class exists.
14:14:30 DEBUG SCXMLValidator: Found TranistionTarget: dialog.Talk#beginScanProcedure#crowdrec
14:14:30 DEBUG SCXMLValidator: ... class exists.
14:14:30 DEBUG SCXMLValidator: Found TranistionTarget: tasks.speechrec.CheckFreeSpaceAroundCrowd#crowdrec
14:14:30 DEBUG SCXMLValidator: ... class exists.
14:14:30 DEBUG SCXMLValidator: Found TranistionTarget: dialog.Talk#searchGroup#crowdrec
14:14:30 DEBUG SCXMLValidator: ... class exists.
14:14:30 DEBUG SCXMLValidator: Found TranistionTarget: dialog.Talk#fatal#crowdrec
14:14:30 DEBUG SCXMLValidator: ... class exists.
14:14:30 DEBUG SCXMLValidator: Found TranistionTarget: personPerception.DescribeCrowd#crowdrec
14:14:30 DEBUG SCXMLValidator: ... class exists.
14:14:30 DEBUG SCXMLValidator: Found TranistionTarget: End
14:14:30 DEBUG SCXMLValidator: ... class exists.
14:14:30 DEBUG SCXMLValidator: Found TranistionTarget: body.ExecutePosture#crowdrec
14:14:30 DEBUG SCXMLValidator: ... class exists.
14:14:30 DEBUG SCXMLValidator: Found TranistionTarget: dialog.Talk#smthWentWrong
14:14:30 DEBUG SCXMLValidator: ... class exists.
14:14:30 DEBUG SCXMLValidator: Found TranistionTarget: dialog.SaySlot#crowdrec
14:14:30 DEBUG SCXMLValidator: ... class exists.
14:14:30 DEBUG SCXMLValidator: Found TranistionTarget: bmbgame
14:14:30 DEBUG SCXMLValidator: ... is not a simple state.
14:14:30 DEBUG SCXMLValidator: Found TranistionTarget: adjustPos#crowdrec
14:14:30 DEBUG SCXMLValidator: ... is not a simple state.
14:14:30 DEBUG SCXMLValidator: Found TranistionTarget: Wait#WaitTenSek
14:14:30 DEBUG SCXMLValidator: ... class exists.
14:14:30 DEBUG SCXMLValidator: Found TranistionTarget: body.SetRobotGaze#reset#crowdrec
14:14:30 DEBUG SCXMLValidator: ... class exists.
14:14:30 DEBUG SCXMLValidator: Found TranistionTarget: dialog.Talk#bmbFinished
14:14:30 DEBUG SCXMLValidator: ... class exists.
14:14:30 DEBUG SCXMLValidator: Found TranistionTarget: nav.drive.DriveDirect#adjustPos#crowdrec
14:14:30 DEBUG SCXMLValidator: ... class exists.
14:14:30 DEBUG SCXMLValidator: Found TranistionTarget: dialog.Talk#answerNotUnderstood#answer
14:14:30 DEBUG SCXMLValidator: ... class exists.
14:14:30 DEBUG SCXMLValidator: Found TranistionTarget: dialog.Talk#NowBMB
14:14:30 DEBUG SCXMLValidator: ... class exists.
14:14:30 DEBUG SCXMLValidator: Found TranistionTarget: tasks.speechrec.AnswerQuestion#bmb
14:14:30 DEBUG SCXMLValidator: ... class exists.
14:14:30 DEBUG SCXMLValidator: Found TranistionTarget: nav.drive.DriveDirect#timeout#answer
14:14:30 DEBUG SCXMLValidator: ... class exists.
14:14:30 DEBUG SCXMLValidator: Found TranistionTarget: dialog.Talk#successTimout#crowdrec
14:14:30 DEBUG SCXMLValidator: ... class exists.
14:14:30 DEBUG SCXMLValidator: Found TranistionTarget: tasks.speechrec.AnswerQuestion#answer
14:14:30 DEBUG SCXMLValidator: ... class exists.
14:14:30 DEBUG SCXMLValidator: Found TranistionTarget: dialog.Talk#letsPlayAGame
14:14:30 DEBUG SCXMLValidator: ... class exists.
14:14:30 DEBUG SCXMLValidator: Found TranistionTarget: dialog.Talk#answerFatal#bmb
14:14:30 DEBUG SCXMLValidator: ... class exists.
14:14:30 DEBUG SCXMLValidator: Found TranistionTarget: tasks.speechrec.PepperGetSourceAndGNT#answer
14:14:30 DEBUG SCXMLValidator: ... class exists.
14:14:30 DEBUG SCXMLValidator: Found TranistionTarget: answer
14:14:30 DEBUG SCXMLValidator: ... is not a simple state.
14:14:30 DEBUG SCXMLValidator: Found TranistionTarget: bmb
14:14:30 DEBUG SCXMLValidator: ... is not a simple state.
14:14:30 DEBUG SCXMLValidator: Found TranistionTarget: dialog.Talk#answerNotUnderstood#bmb
14:14:30 DEBUG SCXMLValidator: ... class exists.
14:14:30 DEBUG SCXMLValidator: Found TranistionTarget: End#crowdrec
14:14:30 DEBUG SCXMLValidator: ... class exists.
14:14:30 DEBUG SCXMLValidator: Found TranistionTarget: tasks.speechrec.PepperGetSourceAndGNT#bmb
14:14:30 DEBUG SCXMLValidator: ... class exists.
14:14:30 DEBUG SCXMLValidator: Found TranistionTarget: personPerception.GatherCrowdInformation#crowdrec
14:14:30 DEBUG SCXMLValidator: ... class exists.
14:14:30 DEBUG SCXMLValidator: Found TranistionTarget: nav.drive.DriveDirect#timeout#bmb
14:14:30 DEBUG SCXMLValidator: ... class exists.
14:14:30 DEBUG SCXMLValidator: Found TranistionTarget: nav.drive.DriveDirect#turnAround#crowdrec
14:14:30 DEBUG SCXMLValidator: ... class exists.
14:14:30 DEBUG SCXMLValidator: Found TranistionTarget: dialog.Talk#noPerson#crowdrec
14:14:30 DEBUG SCXMLValidator: ... class exists.
14:14:30 DEBUG SCXMLValidator: Found TranistionTarget: dialog.Talk#success#crowdrec
14:14:30 DEBUG SCXMLValidator: ... class exists.
14:14:30 DEBUG SCXMLValidator: Parsing and validation successful.
14:14:30 INFO  BonsaiManager: Parsing configuration file
14:14:31 DEBUG XmlConfigurationParser: Parsed Config:
<?xml version="1.0"?>
<BonsaiConfiguration xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="BonsaiConfiguration.xsd">
    
    <FactoryOptions factoryClass="de.unibi.citec.clf.bonsai.ros.RosFactory">
        <Option key="#_INIT_TIMEOUT">8000</Option>
    </FactoryOptions>
    <FactoryOptions factoryClass="de.unibi.citec.clf.bonsai.memory.MemoryFactory" />

    <CoordinateTransformer factoryClass="de.unibi.citec.clf.bonsai.ros.RosFactory" coordinateTransformerClass="de.unibi.citec.clf.bonsai.ros.TFTransformer" />
    
    <WorkingMemory key="WorkingMemory" factoryClass="de.unibi.citec.clf.bonsai.memory.MemoryFactory" workingMemoryClass="de.unibi.citec.clf.bonsai.memory.DefaultMemory">
    </WorkingMemory>

    <!-- SENSORS -->
    
    <Sensor key="SpeechSensorConfirm" dataTypeClass="de.unibi.citec.clf.btl.data.speechrec.Utterance" factoryClass="de.unibi.citec.clf.bonsai.ros.RosFactory" sensorClass="de.unibi.citec.clf.bonsai.ros.sensors.RosBtlMsgSensor" wireTypeClass="std_msgs.String">
        <Options>
            <Option key="topic">/speechrec/psa/confirm</Option>
        </Options>
    </Sensor>
   <Sensor key="SpeechSensorStop" dataTypeClass="de.unibi.citec.clf.btl.data.speechrec.Utterance" factoryClass="de.unibi.citec.clf.bonsai.ros.RosFactory" sensorClass="de.unibi.citec.clf.bonsai.ros.sensors.RosBtlMsgSensor" wireTypeClass="std_msgs.String">
        <Options>
            <Option key="topic">/speechrec/psa/stop</Option>
        </Options>
    </Sensor>
   <Sensor key="SpeechSensorPerson" dataTypeClass="de.unibi.citec.clf.btl.data.speechrec.Utterance" factoryClass="de.unibi.citec.clf.bonsai.ros.RosFactory" sensorClass="de.unibi.citec.clf.bonsai.ros.sensors.RosBtlMsgSensor" wireTypeClass="std_msgs.String">
        <Options>
            <Option key="topic">/speechrec/psa/person</Option>
        </Options>
    </Sensor>
   <Sensor key="SpeechSensorDrinks" dataTypeClass="de.unibi.citec.clf.btl.data.speechrec.Utterance" factoryClass="de.unibi.citec.clf.bonsai.ros.RosFactory" sensorClass="de.unibi.citec.clf.bonsai.ros.sensors.RosBtlMsgSensor" wireTypeClass="std_msgs.String">
        <Options>
            <Option key="topic">/speechrec/psa/drinks</Option>
        </Options>
    </Sensor>
   <Sensor key="PositionSensor" dataTypeClass="de.unibi.citec.clf.btl.data.navigation.PositionData" factoryClass="de.unibi.citec.clf.bonsai.ros.RosFactory" sensorClass="de.unibi.citec.clf.bonsai.ros.sensors.RosBtlMsgSensor" wireTypeClass="geometry_msgs.PoseWithCovarianceStamped">
        <Options>
            <Option key="topic">/amcl_pose</Option>
            <Option key="keepLast">True</Option>
        </Options>
    </Sensor>
   <Sensor key="HoloLensPositionSensor" dataTypeClass="de.unibi.citec.clf.btl.data.navigation.PositionData" factoryClass="de.unibi.citec.clf.bonsai.ros.RosFactory" sensorClass="de.unibi.citec.clf.bonsai.ros.sensors.RosBtlMsgSensor" wireTypeClass="geometry_msgs.PoseStamped">
        <Options>
            <Option key="topic">/hololens/position</Option>
            <Option key="keepLast">True</Option>
        </Options>
    </Sensor>
   <Sensor key="LaserSensor" dataTypeClass="de.unibi.citec.clf.btl.data.vision1d.LaserData" factoryClass="de.unibi.citec.clf.bonsai.ros.RosFactory" sensorClass="de.unibi.citec.clf.bonsai.ros.sensors.RosBtlMsgSensor" wireTypeClass="sensor_msgs.LaserScan">
        <Options>
            <Option key="topic">/laser/scan_merged</Option>
        </Options>
    </Sensor>
   <Sensor key="PersonSensor" dataTypeClass="de.unibi.citec.clf.btl.data.person.PersonDataList" factoryClass="de.unibi.citec.clf.bonsai.ros.RosFactory" sensorClass="de.unibi.citec.clf.bonsai.ros.sensors.RosBtlMsgSensor" wireTypeClass="bayes_people_tracker_msgs.PeopleWithHead">
        <Options>
            <Option key="topic">/people_tracker/people_with_head</Option>
            <Option key="keepLast">True</Option>
        </Options>
    </Sensor>
   <Sensor key="FrontSonarSensor" dataTypeClass="de.unibi.citec.clf.btl.data.vision1d.SonarData" factoryClass="de.unibi.citec.clf.bonsai.ros.RosFactory" sensorClass="de.unibi.citec.clf.bonsai.ros.sensors.RosBtlMsgSensor" wireTypeClass="sensor_msgs.Range">
        <Options>
            <Option key="topic">/pepper_robot/sonar/front</Option>
        </Options>
    </Sensor>
   <Sensor key="BackSonarSensor" dataTypeClass="de.unibi.citec.clf.btl.data.vision1d.SonarData" factoryClass="de.unibi.citec.clf.bonsai.ros.RosFactory" sensorClass="de.unibi.citec.clf.bonsai.ros.sensors.RosBtlMsgSensor" wireTypeClass="sensor_msgs.Range">
        <Options>
            <Option key="topic">/pepper_robot/sonar/back</Option>
        </Options>
    </Sensor>



    <Sensor key="SpeechSensor" dataTypeClass="de.unibi.citec.clf.btl.data.speechrec.Utterance" factoryClass="de.unibi.citec.clf.bonsai.ros.RosFactory" sensorClass="de.unibi.citec.clf.bonsai.ros.sensors.RosBtlMsgSensor" wireTypeClass="std_msgs.String">
        <Options>
            <Option key="topic">/speechrec/psa/speechRecognition</Option>
        </Options>
    </Sensor>
      
    <!-- ACTUATORS --> 
      
    <Actuator key="NavigationActuator" factoryClass="de.unibi.citec.clf.bonsai.ros.RosFactory" actuatorClass="de.unibi.citec.clf.bonsai.ros.actuators.ClfMoveBaseNavigationActuator" actuatorInterface="de.unibi.citec.clf.bonsai.actuators.NavigationActuator">
        <Options>
            <Option key="topic">/move_base</Option>
            <Option key="driveDirectTopic">/pepper_robot/drivedirect</Option>
            <Option key="costmapTopic">/move_base/clear_costmaps</Option>
            <Option key="makePlanTopic">/move_base/NavfnROS/make_plan</Option>
        </Options>
    </Actuator>
   <Actuator key="SpeechActuator" factoryClass="de.unibi.citec.clf.bonsai.ros.RosFactory" actuatorClass="de.unibi.citec.clf.bonsai.ros.actuators.RosNaoQiSpeechActuator" actuatorInterface="de.unibi.citec.clf.bonsai.actuators.SpeechActuator">
        <Options>
             <Option key="topic">/naoqi_tts_feedback</Option>
        </Options>
    </Actuator>
   <Actuator key="FollowPeopleActuator" factoryClass="de.unibi.citec.clf.bonsai.ros.RosFactory" actuatorClass="de.unibi.citec.clf.bonsai.ros.actuators.RosFollowPeopleActuator" actuatorInterface="de.unibi.citec.clf.bonsai.actuators.FollowPeopleActuator">
        <Options>
            <Option key="topic">/pepper_robot/follow_person</Option>
        </Options>
    </Actuator>
   <Actuator key="SSLActuator" factoryClass="de.unibi.citec.clf.bonsai.ros.RosFactory" actuatorClass="de.unibi.citec.clf.bonsai.ros.actuators.RosNaoQiSSLActuator" actuatorInterface="de.unibi.citec.clf.bonsai.actuators.SSLActuator">
        <Options>
            <Option key="topic">/pepper_ssl_service</Option>
        </Options>
    </Actuator>
   <Actuator key="RecognizeObjectsActuator" factoryClass="de.unibi.citec.clf.bonsai.ros.RosFactory" actuatorClass="de.unibi.citec.clf.bonsai.ros.actuators.RosDetectObjectsActuator" actuatorInterface="de.unibi.citec.clf.bonsai.actuators.RecognizeObjectsActuator">
        <Options>
            <Option key="topic">/detect</Option>
        </Options>
    </Actuator>
   <Actuator key="KBaseActuator" factoryClass="de.unibi.citec.clf.bonsai.ros.RosFactory" actuatorClass="de.unibi.citec.clf.bonsai.ros.actuators.RosKBaseActuator" actuatorInterface="de.unibi.citec.clf.bonsai.actuators.KBaseActuator">
        <Options>
            <Option key="queryTopic">/KBase/query</Option>
            <Option key="dataTopic">/KBase/data</Option>
        </Options>
    </Actuator>
   <Actuator key="PostureActuator" factoryClass="de.unibi.citec.clf.bonsai.ros.RosFactory" actuatorClass="de.unibi.citec.clf.bonsai.ros.actuators.RosNaoQiPostureActuator" actuatorInterface="de.unibi.citec.clf.bonsai.actuators.PostureActuator">
        <Options>
            <Option key="topic">/pepper_robot/motion_control/animation_player</Option>
        </Options>
    </Actuator>
   <Actuator key="PeopleActuator" factoryClass="de.unibi.citec.clf.bonsai.ros.RosFactory" actuatorClass="de.unibi.citec.clf.bonsai.ros.actuators.RosDetectPeopleActuator" actuatorInterface="de.unibi.citec.clf.bonsai.actuators.DetectPeopleActuator">
        <Options>
            <Option key="topic">/open_pose/get_crowd_attributes</Option>
            <Option key="followRoiTopic">/open_pose/shirt_roi</Option>
        </Options>
    </Actuator>
   <Actuator key="GazeActuator" factoryClass="de.unibi.citec.clf.bonsai.ros.RosFactory" actuatorClass="de.unibi.citec.clf.bonsai.ros.actuators.RosGazeActuator" actuatorInterface="de.unibi.citec.clf.bonsai.actuators.GazeActuator">
        <Options>
            <Option key="topic">/pepper_robot/motion_control/set_joint_angles</Option>
            <Option key="actionTopic">/pepper_robot/motion_control/trajectory_action</Option>
            <Option key="maxPitch">0.6371</Option>
            <Option key="minPitch">-0.7068</Option>
            <Option key="maxYaw">2.0857</Option>
            <Option key="minYaw">-2.0857</Option>
        </Options>
    </Actuator>
   <Actuator key="DisplayScrollActuator" factoryClass="de.unibi.citec.clf.bonsai.ros.RosFactory" actuatorClass="de.unibi.citec.clf.bonsai.ros.actuators.RosStringActuator" actuatorInterface="de.unibi.citec.clf.bonsai.actuators.StringActuator">
        <Options>
            <Option key="topic">/pepper_robot/display/scroll_to_section</Option>
        </Options>
    </Actuator>
   <Actuator key="DisplayActuator" factoryClass="de.unibi.citec.clf.bonsai.ros.RosFactory" actuatorClass="de.unibi.citec.clf.bonsai.ros.actuators.RosDisplayActuator" actuatorInterface="de.unibi.citec.clf.bonsai.actuators.DisplayActuator">
        <Options>
            <Option key="choiceTopic">/pepper_robot/display/choice</Option>
        </Options>
    </Actuator>
   <Actuator key="LanguageActuator" factoryClass="de.unibi.citec.clf.bonsai.ros.RosFactory" actuatorClass="de.unibi.citec.clf.bonsai.ros.actuators.RosLanguageActuator" actuatorInterface="de.unibi.citec.clf.bonsai.actuators.LanguageActuator">
        <Options>
            <Option key="topic">/pepper_robot/set_tts_language</Option>
        </Options>
    </Actuator>
   <Actuator key="WaitForTouchEventActuator" factoryClass="de.unibi.citec.clf.bonsai.ros.RosFactory" actuatorClass="de.unibi.citec.clf.bonsai.ros.actuators.RosWaitForTouchEventActuator" actuatorInterface="de.unibi.citec.clf.bonsai.actuators.WaitForTouchEventActuator">
        <Options>
            <Option key="topic">/pepper_robot/wait_for_touch</Option>
        </Options>
    </Actuator>
   <Actuator key="SpeechRecActuator" factoryClass="de.unibi.citec.clf.bonsai.ros.RosFactory" actuatorClass="de.unibi.citec.clf.bonsai.ros.actuators.RosMultiLangFreeSpeechRecActuator" actuatorInterface="de.unibi.citec.clf.bonsai.actuators.MultiLangFreeSpeechRecActuator">
        <Options>
            <Option key="topic">/pepper_robot/google_only_speech</Option>
        </Options>
    </Actuator>
   <Actuator key="TranslationActuator" factoryClass="de.unibi.citec.clf.bonsai.ros.RosFactory" actuatorClass="de.unibi.citec.clf.bonsai.ros.actuators.RosTranslationActuator" actuatorInterface="de.unibi.citec.clf.bonsai.actuators.TranslationActuator">
        <Options>
            <Option key="topic">/pepper_robot/google_translate</Option>
        </Options>
    </Actuator>
   <Actuator key="NLPActuator" factoryClass="de.unibi.citec.clf.bonsai.ros.RosFactory" actuatorClass="de.unibi.citec.clf.bonsai.ros.actuators.RosNLPActuator" actuatorInterface="de.unibi.citec.clf.bonsai.actuators.NLPActuator">
        <Options>
            <Option key="topic">/pepper_robot/nlp</Option>
        </Options>
    </Actuator>
   <Actuator key="PlaySoundActuator" factoryClass="de.unibi.citec.clf.bonsai.ros.RosFactory" actuatorClass="de.unibi.citec.clf.bonsai.ros.actuators.RosSoundPlayActuator" actuatorInterface="de.unibi.citec.clf.bonsai.actuators.SoundPlayActuator">
        <Options>
            <Option key="topic">/pepper_robot/soundplay</Option>
        </Options>
    </Actuator>
   <Actuator key="CameraStreamActuator" factoryClass="de.unibi.citec.clf.bonsai.ros.RosFactory" actuatorClass="de.unibi.citec.clf.bonsai.ros.actuators.RosNaoQiCameraStreamActuator" actuatorInterface="de.unibi.citec.clf.bonsai.actuators.CameraStreamActuator">
        <Options>
            <Option key="colorTopic">/pepper_robot/sink/front/image_raw/toggle</Option>
            <Option key="depthTopic">/pepper_robot/sink/depth/image_raw/toggle</Option>
        </Options>
    </Actuator>
   <Actuator key="TrackingActuator" factoryClass="de.unibi.citec.clf.bonsai.ros.RosFactory" actuatorClass="de.unibi.citec.clf.bonsai.ros.actuators.RosTrackingActuator" actuatorInterface="de.unibi.citec.clf.bonsai.actuators.TrackingActuator">
        <Options>
            <Option key="topic">/cftld/toggle</Option>
        </Options>
    </Actuator>
   <Actuator key="LearnPersonActuator" factoryClass="de.unibi.citec.clf.bonsai.ros.RosFactory" actuatorClass="de.unibi.citec.clf.bonsai.ros.actuators.RosLearnPersonActuator" actuatorInterface="de.unibi.citec.clf.bonsai.actuators.LearnPersonActuator">
        <Options>
            <Option key="topicLearn">/open_pose/learn_face</Option>
            <Option key="topicRecognize">/clf_face_identification_know_uuid</Option>
        </Options>
    </Actuator>
   <Actuator key="BimanualGraspActuator" factoryClass="de.unibi.citec.clf.bonsai.ros.RosFactory" actuatorClass="de.unibi.citec.clf.bonsai.ros.actuators.RosNaoQiBimanualGraspActuator" actuatorInterface="de.unibi.citec.clf.bonsai.actuators.BimanualGraspActuator">
        <Options>
            <Option key="executeServiceTopic">/pepper_grasping/exec</Option>
            <Option key="visualizeServiceTopic">/pepper_grasping/viz</Option>
            <Option key="planningServiceTopic">/pepper_grasping</Option>
        </Options>
    </Actuator>
   <Actuator key="SegmentationActuator" factoryClass="de.unibi.citec.clf.bonsai.ros.RosFactory" actuatorClass="de.unibi.citec.clf.bonsai.ros.actuators.RosSegmentationActuator" actuatorInterface="de.unibi.citec.clf.bonsai.actuators.SegmentationActuator">
        <Options>
            <Option key="topic">/segment</Option>
        </Options>
    </Actuator>
   <Actuator key="Guiding" factoryClass="de.unibi.citec.clf.bonsai.ros.RosFactory" actuatorInterface="de.unibi.citec.clf.bonsai.actuators.GuidingActuator" actuatorClass="de.unibi.citec.clf.bonsai.ros.actuators.RosGuidingActuator">
        <Options>
            <Option key="topic">/force_guiding</Option>
        </Options>
    </Actuator>
   <Actuator key="MotionControlActuator" factoryClass="de.unibi.citec.clf.bonsai.ros.RosFactory" actuatorClass="de.unibi.citec.clf.bonsai.ros.actuators.RosNaoQiMotionControlActuator" actuatorInterface="de.unibi.citec.clf.bonsai.actuators.MotionControlActuator">
        <Options>
            <Option key="topic">/pepper_robot/motion_control/set_stiffness</Option>
        </Options>
    </Actuator>


      
</BonsaiConfiguration>

14:14:31 DEBUG XmlConfigurationParser: Parsing factory settings
14:14:31 DEBUG XmlConfigurationParser: Possible FactoryOptions: <FactoryOptions factoryClass="de.unibi.citec.clf.bonsai.ros.RosFactory">
        <Option key="#_INIT_TIMEOUT">8000</Option>
    </FactoryOptions>
14:14:31 DEBUG XmlConfigurationParser: Parsing options in root: <FactoryOptions factoryClass="de.unibi.citec.clf.bonsai.ros.RosFactory">
        <Option key="#_INIT_TIMEOUT">8000</Option>
    </FactoryOptions>
14:14:31 DEBUG XmlConfigurationParser: Possible Option: <Option key="#_INIT_TIMEOUT">8000</Option>
14:14:31 DEBUG XmlConfigurationParser: Add factory: de.unibi.citec.clf.bonsai.ros.RosFactory
14:14:31 DEBUG XmlConfigurationParser: Possible FactoryOptions: <FactoryOptions factoryClass="de.unibi.citec.clf.bonsai.memory.MemoryFactory" />
14:14:31 DEBUG XmlConfigurationParser: Parsing options in root: <FactoryOptions factoryClass="de.unibi.citec.clf.bonsai.memory.MemoryFactory" />
14:14:31 DEBUG XmlConfigurationParser: Add factory: de.unibi.citec.clf.bonsai.memory.MemoryFactory
14:14:31 DEBUG XmlConfigurationParser: Parsing sensors
14:14:31 DEBUG XmlConfigurationParser: Possible Sensor: <Sensor key="SpeechSensorConfirm" dataTypeClass="de.unibi.citec.clf.btl.data.speechrec.Utterance" factoryClass="de.unibi.citec.clf.bonsai.ros.RosFactory" sensorClass="de.unibi.citec.clf.bonsai.ros.sensors.RosBtlMsgSensor" wireTypeClass="std_msgs.String">
        <Options>
            <Option key="topic">/speechrec/psa/confirm</Option>
        </Options>
    </Sensor>
14:14:31 DEBUG XmlConfigurationParser: Parsing options in root: <Options>
            <Option key="topic">/speechrec/psa/confirm</Option>
        </Options>
14:14:31 DEBUG XmlConfigurationParser: Possible Option: <Option key="topic">/speechrec/psa/confirm</Option>
14:14:31 DEBUG XmlConfigurationParser: Possible Sensor: <Sensor key="SpeechSensorStop" dataTypeClass="de.unibi.citec.clf.btl.data.speechrec.Utterance" factoryClass="de.unibi.citec.clf.bonsai.ros.RosFactory" sensorClass="de.unibi.citec.clf.bonsai.ros.sensors.RosBtlMsgSensor" wireTypeClass="std_msgs.String">
        <Options>
            <Option key="topic">/speechrec/psa/stop</Option>
        </Options>
    </Sensor>
14:14:31 DEBUG XmlConfigurationParser: Parsing options in root: <Options>
            <Option key="topic">/speechrec/psa/stop</Option>
        </Options>
14:14:31 DEBUG XmlConfigurationParser: Possible Option: <Option key="topic">/speechrec/psa/stop</Option>
14:14:31 DEBUG XmlConfigurationParser: Possible Sensor: <Sensor key="SpeechSensorPerson" dataTypeClass="de.unibi.citec.clf.btl.data.speechrec.Utterance" factoryClass="de.unibi.citec.clf.bonsai.ros.RosFactory" sensorClass="de.unibi.citec.clf.bonsai.ros.sensors.RosBtlMsgSensor" wireTypeClass="std_msgs.String">
        <Options>
            <Option key="topic">/speechrec/psa/person</Option>
        </Options>
    </Sensor>
14:14:31 DEBUG XmlConfigurationParser: Parsing options in root: <Options>
            <Option key="topic">/speechrec/psa/person</Option>
        </Options>
14:14:31 DEBUG XmlConfigurationParser: Possible Option: <Option key="topic">/speechrec/psa/person</Option>
14:14:31 DEBUG XmlConfigurationParser: Possible Sensor: <Sensor key="SpeechSensorDrinks" dataTypeClass="de.unibi.citec.clf.btl.data.speechrec.Utterance" factoryClass="de.unibi.citec.clf.bonsai.ros.RosFactory" sensorClass="de.unibi.citec.clf.bonsai.ros.sensors.RosBtlMsgSensor" wireTypeClass="std_msgs.String">
        <Options>
            <Option key="topic">/speechrec/psa/drinks</Option>
        </Options>
    </Sensor>
14:14:31 DEBUG XmlConfigurationParser: Parsing options in root: <Options>
            <Option key="topic">/speechrec/psa/drinks</Option>
        </Options>
14:14:31 DEBUG XmlConfigurationParser: Possible Option: <Option key="topic">/speechrec/psa/drinks</Option>
14:14:31 DEBUG XmlConfigurationParser: Possible Sensor: <Sensor key="PositionSensor" dataTypeClass="de.unibi.citec.clf.btl.data.navigation.PositionData" factoryClass="de.unibi.citec.clf.bonsai.ros.RosFactory" sensorClass="de.unibi.citec.clf.bonsai.ros.sensors.RosBtlMsgSensor" wireTypeClass="geometry_msgs.PoseWithCovarianceStamped">
        <Options>
            <Option key="topic">/amcl_pose</Option>
            <Option key="keepLast">True</Option>
        </Options>
    </Sensor>
14:14:31 DEBUG XmlConfigurationParser: Parsing options in root: <Options>
            <Option key="topic">/amcl_pose</Option>
            <Option key="keepLast">True</Option>
        </Options>
14:14:31 DEBUG XmlConfigurationParser: Possible Option: <Option key="topic">/amcl_pose</Option>
14:14:31 DEBUG XmlConfigurationParser: Possible Option: <Option key="keepLast">True</Option>
14:14:31 DEBUG XmlConfigurationParser: Possible Sensor: <Sensor key="HoloLensPositionSensor" dataTypeClass="de.unibi.citec.clf.btl.data.navigation.PositionData" factoryClass="de.unibi.citec.clf.bonsai.ros.RosFactory" sensorClass="de.unibi.citec.clf.bonsai.ros.sensors.RosBtlMsgSensor" wireTypeClass="geometry_msgs.PoseStamped">
        <Options>
            <Option key="topic">/hololens/position</Option>
            <Option key="keepLast">True</Option>
        </Options>
    </Sensor>
14:14:31 DEBUG XmlConfigurationParser: Parsing options in root: <Options>
            <Option key="topic">/hololens/position</Option>
            <Option key="keepLast">True</Option>
        </Options>
14:14:31 DEBUG XmlConfigurationParser: Possible Option: <Option key="topic">/hololens/position</Option>
14:14:31 DEBUG XmlConfigurationParser: Possible Option: <Option key="keepLast">True</Option>
14:14:31 DEBUG XmlConfigurationParser: Possible Sensor: <Sensor key="LaserSensor" dataTypeClass="de.unibi.citec.clf.btl.data.vision1d.LaserData" factoryClass="de.unibi.citec.clf.bonsai.ros.RosFactory" sensorClass="de.unibi.citec.clf.bonsai.ros.sensors.RosBtlMsgSensor" wireTypeClass="sensor_msgs.LaserScan">
        <Options>
            <Option key="topic">/laser/scan_merged</Option>
        </Options>
    </Sensor>
14:14:31 DEBUG XmlConfigurationParser: Parsing options in root: <Options>
            <Option key="topic">/laser/scan_merged</Option>
        </Options>
14:14:31 DEBUG XmlConfigurationParser: Possible Option: <Option key="topic">/laser/scan_merged</Option>
14:14:31 DEBUG XmlConfigurationParser: Possible Sensor: <Sensor key="PersonSensor" dataTypeClass="de.unibi.citec.clf.btl.data.person.PersonDataList" factoryClass="de.unibi.citec.clf.bonsai.ros.RosFactory" sensorClass="de.unibi.citec.clf.bonsai.ros.sensors.RosBtlMsgSensor" wireTypeClass="bayes_people_tracker_msgs.PeopleWithHead">
        <Options>
            <Option key="topic">/people_tracker/people_with_head</Option>
            <Option key="keepLast">True</Option>
        </Options>
    </Sensor>
14:14:31 DEBUG XmlConfigurationParser: Parsing options in root: <Options>
            <Option key="topic">/people_tracker/people_with_head</Option>
            <Option key="keepLast">True</Option>
        </Options>
14:14:31 DEBUG XmlConfigurationParser: Possible Option: <Option key="topic">/people_tracker/people_with_head</Option>
14:14:31 DEBUG XmlConfigurationParser: Possible Option: <Option key="keepLast">True</Option>
14:14:31 DEBUG XmlConfigurationParser: Possible Sensor: <Sensor key="FrontSonarSensor" dataTypeClass="de.unibi.citec.clf.btl.data.vision1d.SonarData" factoryClass="de.unibi.citec.clf.bonsai.ros.RosFactory" sensorClass="de.unibi.citec.clf.bonsai.ros.sensors.RosBtlMsgSensor" wireTypeClass="sensor_msgs.Range">
        <Options>
            <Option key="topic">/pepper_robot/sonar/front</Option>
        </Options>
    </Sensor>
14:14:31 DEBUG XmlConfigurationParser: Parsing options in root: <Options>
            <Option key="topic">/pepper_robot/sonar/front</Option>
        </Options>
14:14:31 DEBUG XmlConfigurationParser: Possible Option: <Option key="topic">/pepper_robot/sonar/front</Option>
14:14:31 DEBUG XmlConfigurationParser: Possible Sensor: <Sensor key="BackSonarSensor" dataTypeClass="de.unibi.citec.clf.btl.data.vision1d.SonarData" factoryClass="de.unibi.citec.clf.bonsai.ros.RosFactory" sensorClass="de.unibi.citec.clf.bonsai.ros.sensors.RosBtlMsgSensor" wireTypeClass="sensor_msgs.Range">
        <Options>
            <Option key="topic">/pepper_robot/sonar/back</Option>
        </Options>
    </Sensor>
14:14:31 DEBUG XmlConfigurationParser: Parsing options in root: <Options>
            <Option key="topic">/pepper_robot/sonar/back</Option>
        </Options>
14:14:31 DEBUG XmlConfigurationParser: Possible Option: <Option key="topic">/pepper_robot/sonar/back</Option>
14:14:31 DEBUG XmlConfigurationParser: Possible Sensor: <Sensor key="SpeechSensor" dataTypeClass="de.unibi.citec.clf.btl.data.speechrec.Utterance" factoryClass="de.unibi.citec.clf.bonsai.ros.RosFactory" sensorClass="de.unibi.citec.clf.bonsai.ros.sensors.RosBtlMsgSensor" wireTypeClass="std_msgs.String">
        <Options>
            <Option key="topic">/speechrec/psa/speechRecognition</Option>
        </Options>
    </Sensor>
14:14:31 DEBUG XmlConfigurationParser: Parsing options in root: <Options>
            <Option key="topic">/speechrec/psa/speechRecognition</Option>
        </Options>
14:14:31 DEBUG XmlConfigurationParser: Possible Option: <Option key="topic">/speechrec/psa/speechRecognition</Option>
14:14:31 DEBUG XmlConfigurationParser: Parsing actuators
14:14:31 DEBUG XmlConfigurationParser: Possible Actuator: <Actuator key="NavigationActuator" factoryClass="de.unibi.citec.clf.bonsai.ros.RosFactory" actuatorClass="de.unibi.citec.clf.bonsai.ros.actuators.ClfMoveBaseNavigationActuator" actuatorInterface="de.unibi.citec.clf.bonsai.actuators.NavigationActuator">
        <Options>
            <Option key="topic">/move_base</Option>
            <Option key="driveDirectTopic">/pepper_robot/drivedirect</Option>
            <Option key="costmapTopic">/move_base/clear_costmaps</Option>
            <Option key="makePlanTopic">/move_base/NavfnROS/make_plan</Option>
        </Options>
    </Actuator>
14:14:31 DEBUG XmlConfigurationParser: Parsing options in root: <Options>
            <Option key="topic">/move_base</Option>
            <Option key="driveDirectTopic">/pepper_robot/drivedirect</Option>
            <Option key="costmapTopic">/move_base/clear_costmaps</Option>
            <Option key="makePlanTopic">/move_base/NavfnROS/make_plan</Option>
        </Options>
14:14:31 DEBUG XmlConfigurationParser: Possible Option: <Option key="topic">/move_base</Option>
14:14:31 DEBUG XmlConfigurationParser: Possible Option: <Option key="driveDirectTopic">/pepper_robot/drivedirect</Option>
14:14:31 DEBUG XmlConfigurationParser: Possible Option: <Option key="costmapTopic">/move_base/clear_costmaps</Option>
14:14:31 DEBUG XmlConfigurationParser: Possible Option: <Option key="makePlanTopic">/move_base/NavfnROS/make_plan</Option>
14:14:31 DEBUG XmlConfigurationParser: Possible Actuator: <Actuator key="SpeechActuator" factoryClass="de.unibi.citec.clf.bonsai.ros.RosFactory" actuatorClass="de.unibi.citec.clf.bonsai.ros.actuators.RosNaoQiSpeechActuator" actuatorInterface="de.unibi.citec.clf.bonsai.actuators.SpeechActuator">
        <Options>
             <Option key="topic">/naoqi_tts_feedback</Option>
        </Options>
    </Actuator>
14:14:31 DEBUG XmlConfigurationParser: Parsing options in root: <Options>
             <Option key="topic">/naoqi_tts_feedback</Option>
        </Options>
14:14:31 DEBUG XmlConfigurationParser: Possible Option: <Option key="topic">/naoqi_tts_feedback</Option>
14:14:31 DEBUG XmlConfigurationParser: Possible Actuator: <Actuator key="FollowPeopleActuator" factoryClass="de.unibi.citec.clf.bonsai.ros.RosFactory" actuatorClass="de.unibi.citec.clf.bonsai.ros.actuators.RosFollowPeopleActuator" actuatorInterface="de.unibi.citec.clf.bonsai.actuators.FollowPeopleActuator">
        <Options>
            <Option key="topic">/pepper_robot/follow_person</Option>
        </Options>
    </Actuator>
14:14:31 DEBUG XmlConfigurationParser: Parsing options in root: <Options>
            <Option key="topic">/pepper_robot/follow_person</Option>
        </Options>
14:14:31 DEBUG XmlConfigurationParser: Possible Option: <Option key="topic">/pepper_robot/follow_person</Option>
14:14:31 DEBUG XmlConfigurationParser: Possible Actuator: <Actuator key="SSLActuator" factoryClass="de.unibi.citec.clf.bonsai.ros.RosFactory" actuatorClass="de.unibi.citec.clf.bonsai.ros.actuators.RosNaoQiSSLActuator" actuatorInterface="de.unibi.citec.clf.bonsai.actuators.SSLActuator">
        <Options>
            <Option key="topic">/pepper_ssl_service</Option>
        </Options>
    </Actuator>
14:14:31 DEBUG XmlConfigurationParser: Parsing options in root: <Options>
            <Option key="topic">/pepper_ssl_service</Option>
        </Options>
14:14:31 DEBUG XmlConfigurationParser: Possible Option: <Option key="topic">/pepper_ssl_service</Option>
14:14:31 DEBUG XmlConfigurationParser: Possible Actuator: <Actuator key="RecognizeObjectsActuator" factoryClass="de.unibi.citec.clf.bonsai.ros.RosFactory" actuatorClass="de.unibi.citec.clf.bonsai.ros.actuators.RosDetectObjectsActuator" actuatorInterface="de.unibi.citec.clf.bonsai.actuators.RecognizeObjectsActuator">
        <Options>
            <Option key="topic">/detect</Option>
        </Options>
    </Actuator>
14:14:31 DEBUG XmlConfigurationParser: Parsing options in root: <Options>
            <Option key="topic">/detect</Option>
        </Options>
14:14:31 DEBUG XmlConfigurationParser: Possible Option: <Option key="topic">/detect</Option>
14:14:31 DEBUG XmlConfigurationParser: Possible Actuator: <Actuator key="KBaseActuator" factoryClass="de.unibi.citec.clf.bonsai.ros.RosFactory" actuatorClass="de.unibi.citec.clf.bonsai.ros.actuators.RosKBaseActuator" actuatorInterface="de.unibi.citec.clf.bonsai.actuators.KBaseActuator">
        <Options>
            <Option key="queryTopic">/KBase/query</Option>
            <Option key="dataTopic">/KBase/data</Option>
        </Options>
    </Actuator>
14:14:31 DEBUG XmlConfigurationParser: Parsing options in root: <Options>
            <Option key="queryTopic">/KBase/query</Option>
            <Option key="dataTopic">/KBase/data</Option>
        </Options>
14:14:31 DEBUG XmlConfigurationParser: Possible Option: <Option key="queryTopic">/KBase/query</Option>
14:14:31 DEBUG XmlConfigurationParser: Possible Option: <Option key="dataTopic">/KBase/data</Option>
14:14:31 DEBUG XmlConfigurationParser: Possible Actuator: <Actuator key="PostureActuator" factoryClass="de.unibi.citec.clf.bonsai.ros.RosFactory" actuatorClass="de.unibi.citec.clf.bonsai.ros.actuators.RosNaoQiPostureActuator" actuatorInterface="de.unibi.citec.clf.bonsai.actuators.PostureActuator">
        <Options>
            <Option key="topic">/pepper_robot/motion_control/animation_player</Option>
        </Options>
    </Actuator>
14:14:31 DEBUG XmlConfigurationParser: Parsing options in root: <Options>
            <Option key="topic">/pepper_robot/motion_control/animation_player</Option>
        </Options>
14:14:31 DEBUG XmlConfigurationParser: Possible Option: <Option key="topic">/pepper_robot/motion_control/animation_player</Option>
14:14:31 DEBUG XmlConfigurationParser: Possible Actuator: <Actuator key="PeopleActuator" factoryClass="de.unibi.citec.clf.bonsai.ros.RosFactory" actuatorClass="de.unibi.citec.clf.bonsai.ros.actuators.RosDetectPeopleActuator" actuatorInterface="de.unibi.citec.clf.bonsai.actuators.DetectPeopleActuator">
        <Options>
            <Option key="topic">/open_pose/get_crowd_attributes</Option>
            <Option key="followRoiTopic">/open_pose/shirt_roi</Option>
        </Options>
    </Actuator>
14:14:31 DEBUG XmlConfigurationParser: Parsing options in root: <Options>
            <Option key="topic">/open_pose/get_crowd_attributes</Option>
            <Option key="followRoiTopic">/open_pose/shirt_roi</Option>
        </Options>
14:14:31 DEBUG XmlConfigurationParser: Possible Option: <Option key="topic">/open_pose/get_crowd_attributes</Option>
14:14:31 DEBUG XmlConfigurationParser: Possible Option: <Option key="followRoiTopic">/open_pose/shirt_roi</Option>
14:14:31 DEBUG XmlConfigurationParser: Possible Actuator: <Actuator key="GazeActuator" factoryClass="de.unibi.citec.clf.bonsai.ros.RosFactory" actuatorClass="de.unibi.citec.clf.bonsai.ros.actuators.RosGazeActuator" actuatorInterface="de.unibi.citec.clf.bonsai.actuators.GazeActuator">
        <Options>
            <Option key="topic">/pepper_robot/motion_control/set_joint_angles</Option>
            <Option key="actionTopic">/pepper_robot/motion_control/trajectory_action</Option>
            <Option key="maxPitch">0.6371</Option>
            <Option key="minPitch">-0.7068</Option>
            <Option key="maxYaw">2.0857</Option>
            <Option key="minYaw">-2.0857</Option>
        </Options>
    </Actuator>
14:14:31 DEBUG XmlConfigurationParser: Parsing options in root: <Options>
            <Option key="topic">/pepper_robot/motion_control/set_joint_angles</Option>
            <Option key="actionTopic">/pepper_robot/motion_control/trajectory_action</Option>
            <Option key="maxPitch">0.6371</Option>
            <Option key="minPitch">-0.7068</Option>
            <Option key="maxYaw">2.0857</Option>
            <Option key="minYaw">-2.0857</Option>
        </Options>
14:14:31 DEBUG XmlConfigurationParser: Possible Option: <Option key="topic">/pepper_robot/motion_control/set_joint_angles</Option>
14:14:31 DEBUG XmlConfigurationParser: Possible Option: <Option key="actionTopic">/pepper_robot/motion_control/trajectory_action</Option>
14:14:31 DEBUG XmlConfigurationParser: Possible Option: <Option key="maxPitch">0.6371</Option>
14:14:31 DEBUG XmlConfigurationParser: Possible Option: <Option key="minPitch">-0.7068</Option>
14:14:31 DEBUG XmlConfigurationParser: Possible Option: <Option key="maxYaw">2.0857</Option>
14:14:31 DEBUG XmlConfigurationParser: Possible Option: <Option key="minYaw">-2.0857</Option>
14:14:31 DEBUG XmlConfigurationParser: Possible Actuator: <Actuator key="DisplayScrollActuator" factoryClass="de.unibi.citec.clf.bonsai.ros.RosFactory" actuatorClass="de.unibi.citec.clf.bonsai.ros.actuators.RosStringActuator" actuatorInterface="de.unibi.citec.clf.bonsai.actuators.StringActuator">
        <Options>
            <Option key="topic">/pepper_robot/display/scroll_to_section</Option>
        </Options>
    </Actuator>
14:14:31 DEBUG XmlConfigurationParser: Parsing options in root: <Options>
            <Option key="topic">/pepper_robot/display/scroll_to_section</Option>
        </Options>
14:14:31 DEBUG XmlConfigurationParser: Possible Option: <Option key="topic">/pepper_robot/display/scroll_to_section</Option>
14:14:31 DEBUG XmlConfigurationParser: Possible Actuator: <Actuator key="DisplayActuator" factoryClass="de.unibi.citec.clf.bonsai.ros.RosFactory" actuatorClass="de.unibi.citec.clf.bonsai.ros.actuators.RosDisplayActuator" actuatorInterface="de.unibi.citec.clf.bonsai.actuators.DisplayActuator">
        <Options>
            <Option key="choiceTopic">/pepper_robot/display/choice</Option>
        </Options>
    </Actuator>
14:14:31 DEBUG XmlConfigurationParser: Parsing options in root: <Options>
            <Option key="choiceTopic">/pepper_robot/display/choice</Option>
        </Options>
14:14:31 DEBUG XmlConfigurationParser: Possible Option: <Option key="choiceTopic">/pepper_robot/display/choice</Option>
14:14:31 DEBUG XmlConfigurationParser: Possible Actuator: <Actuator key="LanguageActuator" factoryClass="de.unibi.citec.clf.bonsai.ros.RosFactory" actuatorClass="de.unibi.citec.clf.bonsai.ros.actuators.RosLanguageActuator" actuatorInterface="de.unibi.citec.clf.bonsai.actuators.LanguageActuator">
        <Options>
            <Option key="topic">/pepper_robot/set_tts_language</Option>
        </Options>
    </Actuator>
14:14:31 DEBUG XmlConfigurationParser: Parsing options in root: <Options>
            <Option key="topic">/pepper_robot/set_tts_language</Option>
        </Options>
14:14:31 DEBUG XmlConfigurationParser: Possible Option: <Option key="topic">/pepper_robot/set_tts_language</Option>
14:14:31 DEBUG XmlConfigurationParser: Possible Actuator: <Actuator key="WaitForTouchEventActuator" factoryClass="de.unibi.citec.clf.bonsai.ros.RosFactory" actuatorClass="de.unibi.citec.clf.bonsai.ros.actuators.RosWaitForTouchEventActuator" actuatorInterface="de.unibi.citec.clf.bonsai.actuators.WaitForTouchEventActuator">
        <Options>
            <Option key="topic">/pepper_robot/wait_for_touch</Option>
        </Options>
    </Actuator>
14:14:31 DEBUG XmlConfigurationParser: Parsing options in root: <Options>
            <Option key="topic">/pepper_robot/wait_for_touch</Option>
        </Options>
14:14:31 DEBUG XmlConfigurationParser: Possible Option: <Option key="topic">/pepper_robot/wait_for_touch</Option>
14:14:31 DEBUG XmlConfigurationParser: Possible Actuator: <Actuator key="SpeechRecActuator" factoryClass="de.unibi.citec.clf.bonsai.ros.RosFactory" actuatorClass="de.unibi.citec.clf.bonsai.ros.actuators.RosMultiLangFreeSpeechRecActuator" actuatorInterface="de.unibi.citec.clf.bonsai.actuators.MultiLangFreeSpeechRecActuator">
        <Options>
            <Option key="topic">/pepper_robot/google_only_speech</Option>
        </Options>
    </Actuator>
14:14:31 DEBUG XmlConfigurationParser: Parsing options in root: <Options>
            <Option key="topic">/pepper_robot/google_only_speech</Option>
        </Options>
14:14:31 DEBUG XmlConfigurationParser: Possible Option: <Option key="topic">/pepper_robot/google_only_speech</Option>
14:14:31 DEBUG XmlConfigurationParser: Possible Actuator: <Actuator key="TranslationActuator" factoryClass="de.unibi.citec.clf.bonsai.ros.RosFactory" actuatorClass="de.unibi.citec.clf.bonsai.ros.actuators.RosTranslationActuator" actuatorInterface="de.unibi.citec.clf.bonsai.actuators.TranslationActuator">
        <Options>
            <Option key="topic">/pepper_robot/google_translate</Option>
        </Options>
    </Actuator>
14:14:31 DEBUG XmlConfigurationParser: Parsing options in root: <Options>
            <Option key="topic">/pepper_robot/google_translate</Option>
        </Options>
14:14:31 DEBUG XmlConfigurationParser: Possible Option: <Option key="topic">/pepper_robot/google_translate</Option>
14:14:31 DEBUG XmlConfigurationParser: Possible Actuator: <Actuator key="NLPActuator" factoryClass="de.unibi.citec.clf.bonsai.ros.RosFactory" actuatorClass="de.unibi.citec.clf.bonsai.ros.actuators.RosNLPActuator" actuatorInterface="de.unibi.citec.clf.bonsai.actuators.NLPActuator">
        <Options>
            <Option key="topic">/pepper_robot/nlp</Option>
        </Options>
    </Actuator>
14:14:31 DEBUG XmlConfigurationParser: Parsing options in root: <Options>
            <Option key="topic">/pepper_robot/nlp</Option>
        </Options>
14:14:31 DEBUG XmlConfigurationParser: Possible Option: <Option key="topic">/pepper_robot/nlp</Option>
14:14:31 DEBUG XmlConfigurationParser: Possible Actuator: <Actuator key="PlaySoundActuator" factoryClass="de.unibi.citec.clf.bonsai.ros.RosFactory" actuatorClass="de.unibi.citec.clf.bonsai.ros.actuators.RosSoundPlayActuator" actuatorInterface="de.unibi.citec.clf.bonsai.actuators.SoundPlayActuator">
        <Options>
            <Option key="topic">/pepper_robot/soundplay</Option>
        </Options>
    </Actuator>
14:14:31 DEBUG XmlConfigurationParser: Parsing options in root: <Options>
            <Option key="topic">/pepper_robot/soundplay</Option>
        </Options>
14:14:31 DEBUG XmlConfigurationParser: Possible Option: <Option key="topic">/pepper_robot/soundplay</Option>
14:14:31 DEBUG XmlConfigurationParser: Possible Actuator: <Actuator key="CameraStreamActuator" factoryClass="de.unibi.citec.clf.bonsai.ros.RosFactory" actuatorClass="de.unibi.citec.clf.bonsai.ros.actuators.RosNaoQiCameraStreamActuator" actuatorInterface="de.unibi.citec.clf.bonsai.actuators.CameraStreamActuator">
        <Options>
            <Option key="colorTopic">/pepper_robot/sink/front/image_raw/toggle</Option>
            <Option key="depthTopic">/pepper_robot/sink/depth/image_raw/toggle</Option>
        </Options>
    </Actuator>
14:14:31 DEBUG XmlConfigurationParser: Parsing options in root: <Options>
            <Option key="colorTopic">/pepper_robot/sink/front/image_raw/toggle</Option>
            <Option key="depthTopic">/pepper_robot/sink/depth/image_raw/toggle</Option>
        </Options>
14:14:31 DEBUG XmlConfigurationParser: Possible Option: <Option key="colorTopic">/pepper_robot/sink/front/image_raw/toggle</Option>
14:14:31 DEBUG XmlConfigurationParser: Possible Option: <Option key="depthTopic">/pepper_robot/sink/depth/image_raw/toggle</Option>
14:14:31 DEBUG XmlConfigurationParser: Possible Actuator: <Actuator key="TrackingActuator" factoryClass="de.unibi.citec.clf.bonsai.ros.RosFactory" actuatorClass="de.unibi.citec.clf.bonsai.ros.actuators.RosTrackingActuator" actuatorInterface="de.unibi.citec.clf.bonsai.actuators.TrackingActuator">
        <Options>
            <Option key="topic">/cftld/toggle</Option>
        </Options>
    </Actuator>
14:14:31 DEBUG XmlConfigurationParser: Parsing options in root: <Options>
            <Option key="topic">/cftld/toggle</Option>
        </Options>
14:14:31 DEBUG XmlConfigurationParser: Possible Option: <Option key="topic">/cftld/toggle</Option>
14:14:31 DEBUG XmlConfigurationParser: Possible Actuator: <Actuator key="LearnPersonActuator" factoryClass="de.unibi.citec.clf.bonsai.ros.RosFactory" actuatorClass="de.unibi.citec.clf.bonsai.ros.actuators.RosLearnPersonActuator" actuatorInterface="de.unibi.citec.clf.bonsai.actuators.LearnPersonActuator">
        <Options>
            <Option key="topicLearn">/open_pose/learn_face</Option>
            <Option key="topicRecognize">/clf_face_identification_know_uuid</Option>
        </Options>
    </Actuator>
14:14:31 DEBUG XmlConfigurationParser: Parsing options in root: <Options>
            <Option key="topicLearn">/open_pose/learn_face</Option>
            <Option key="topicRecognize">/clf_face_identification_know_uuid</Option>
        </Options>
14:14:31 DEBUG XmlConfigurationParser: Possible Option: <Option key="topicLearn">/open_pose/learn_face</Option>
14:14:31 DEBUG XmlConfigurationParser: Possible Option: <Option key="topicRecognize">/clf_face_identification_know_uuid</Option>
14:14:31 DEBUG XmlConfigurationParser: Possible Actuator: <Actuator key="BimanualGraspActuator" factoryClass="de.unibi.citec.clf.bonsai.ros.RosFactory" actuatorClass="de.unibi.citec.clf.bonsai.ros.actuators.RosNaoQiBimanualGraspActuator" actuatorInterface="de.unibi.citec.clf.bonsai.actuators.BimanualGraspActuator">
        <Options>
            <Option key="executeServiceTopic">/pepper_grasping/exec</Option>
            <Option key="visualizeServiceTopic">/pepper_grasping/viz</Option>
            <Option key="planningServiceTopic">/pepper_grasping</Option>
        </Options>
    </Actuator>
14:14:31 DEBUG XmlConfigurationParser: Parsing options in root: <Options>
            <Option key="executeServiceTopic">/pepper_grasping/exec</Option>
            <Option key="visualizeServiceTopic">/pepper_grasping/viz</Option>
            <Option key="planningServiceTopic">/pepper_grasping</Option>
        </Options>
14:14:31 DEBUG XmlConfigurationParser: Possible Option: <Option key="executeServiceTopic">/pepper_grasping/exec</Option>
14:14:31 DEBUG XmlConfigurationParser: Possible Option: <Option key="visualizeServiceTopic">/pepper_grasping/viz</Option>
14:14:31 DEBUG XmlConfigurationParser: Possible Option: <Option key="planningServiceTopic">/pepper_grasping</Option>
14:14:31 DEBUG XmlConfigurationParser: Possible Actuator: <Actuator key="SegmentationActuator" factoryClass="de.unibi.citec.clf.bonsai.ros.RosFactory" actuatorClass="de.unibi.citec.clf.bonsai.ros.actuators.RosSegmentationActuator" actuatorInterface="de.unibi.citec.clf.bonsai.actuators.SegmentationActuator">
        <Options>
            <Option key="topic">/segment</Option>
        </Options>
    </Actuator>
14:14:31 DEBUG XmlConfigurationParser: Parsing options in root: <Options>
            <Option key="topic">/segment</Option>
        </Options>
14:14:31 DEBUG XmlConfigurationParser: Possible Option: <Option key="topic">/segment</Option>
14:14:31 DEBUG XmlConfigurationParser: Possible Actuator: <Actuator key="Guiding" factoryClass="de.unibi.citec.clf.bonsai.ros.RosFactory" actuatorInterface="de.unibi.citec.clf.bonsai.actuators.GuidingActuator" actuatorClass="de.unibi.citec.clf.bonsai.ros.actuators.RosGuidingActuator">
        <Options>
            <Option key="topic">/force_guiding</Option>
        </Options>
    </Actuator>
14:14:31 DEBUG XmlConfigurationParser: Parsing options in root: <Options>
            <Option key="topic">/force_guiding</Option>
        </Options>
14:14:31 DEBUG XmlConfigurationParser: Possible Option: <Option key="topic">/force_guiding</Option>
14:14:31 DEBUG XmlConfigurationParser: Possible Actuator: <Actuator key="MotionControlActuator" factoryClass="de.unibi.citec.clf.bonsai.ros.RosFactory" actuatorClass="de.unibi.citec.clf.bonsai.ros.actuators.RosNaoQiMotionControlActuator" actuatorInterface="de.unibi.citec.clf.bonsai.actuators.MotionControlActuator">
        <Options>
            <Option key="topic">/pepper_robot/motion_control/set_stiffness</Option>
        </Options>
    </Actuator>
14:14:31 DEBUG XmlConfigurationParser: Parsing options in root: <Options>
            <Option key="topic">/pepper_robot/motion_control/set_stiffness</Option>
        </Options>
14:14:31 DEBUG XmlConfigurationParser: Possible Option: <Option key="topic">/pepper_robot/motion_control/set_stiffness</Option>
14:14:31 DEBUG XmlConfigurationParser: Parsing working memory settings
14:14:31 DEBUG XmlConfigurationParser: Possible WorkingMemory: <WorkingMemory key="WorkingMemory" factoryClass="de.unibi.citec.clf.bonsai.memory.MemoryFactory" workingMemoryClass="de.unibi.citec.clf.bonsai.memory.DefaultMemory">
    </WorkingMemory>
14:14:31 DEBUG XmlConfigurationParser: Parsing coordinate transformer settings
14:14:31 DEBUG XmlConfigurationParser: Possible CoordinateTransformer: <CoordinateTransformer factoryClass="de.unibi.citec.clf.bonsai.ros.RosFactory" coordinateTransformerClass="de.unibi.citec.clf.bonsai.ros.TFTransformer" />
14:14:31 INFO  BonsaiManager: Creating factories
14:14:31 DEBUG BonsaiManager: Creating factories: [de.unibi.citec.clf.bonsai.core.configuration.data.FactoryData@3a305c74, de.unibi.citec.clf.bonsai.core.configuration.data.FactoryData@10250e26]
14:14:31 DEBUG BonsaiManager: configured: de.unibi.citec.clf.bonsai.memory.MemoryFactory
14:14:31 INFO  RosFactory: using ros master: http://pepper-robot:11311
14:14:31 INFO  RosFactory: set init timeout to 8000
14:14:31 WARN  ReflectionServiceDiscovery: discoverServicesByInterface is using 'de.unibi.citec.clf.bonsai.ros.actuators' package
14:14:31 WARN  ReflectionServiceDiscovery: discoverServicesByInterface is using 'de.unibi.citec.clf.bonsai.ros.sensors' package
14:14:31 DEBUG RosFactory: Ros factory initialize
14:14:31 TRACE RosFactory: found 38 actuators:
14:14:31 DEBUG RosFactory: found class de.unibi.citec.clf.bonsai.ros.actuators.RosNaoQiSSLActuator
14:14:31 DEBUG RosFactory: found class de.unibi.citec.clf.bonsai.ros.actuators.RosWaitForTouchEventActuator
14:14:31 DEBUG RosFactory: found class de.unibi.citec.clf.bonsai.ros.actuators.RosKBaseActuator
14:14:31 DEBUG RosFactory: found class de.unibi.citec.clf.bonsai.ros.actuators.RosDetectPeopleActuator
14:14:31 DEBUG RosFactory: found class de.unibi.citec.clf.bonsai.ros.actuators.RosPostureExecutionActuator
14:14:31 DEBUG RosFactory: found class de.unibi.citec.clf.bonsai.ros.actuators.RosTriggerActuator
14:14:31 DEBUG RosFactory: found class de.unibi.citec.clf.bonsai.ros.actuators.ClfMoveBaseNavigationActuator
14:14:31 DEBUG RosFactory: found class de.unibi.citec.clf.bonsai.ros.actuators.RosNaoQiCameraStreamActuator
14:14:31 DEBUG RosFactory: found class de.unibi.citec.clf.bonsai.ros.actuators.RosNaoQiPostureActuator
14:14:31 DEBUG RosFactory: found class de.unibi.citec.clf.bonsai.ros.actuators.RosSegmentationActuator
14:14:31 DEBUG RosFactory: found class de.unibi.citec.clf.bonsai.ros.actuators.RosEnableGoogleSpeechRecAndSimpleNPLActuator
14:14:31 DEBUG RosFactory: found class de.unibi.citec.clf.bonsai.ros.actuators.RosTrackingActuator
14:14:31 DEBUG RosFactory: found class de.unibi.citec.clf.bonsai.ros.actuators.RosGazeActuator
14:14:31 DEBUG RosFactory: found class de.unibi.citec.clf.bonsai.ros.actuators.RosDetectPlanesActuator
14:14:31 DEBUG RosFactory: found class de.unibi.citec.clf.bonsai.ros.actuators.RosGetCrowdAttributesActuator
14:14:31 DEBUG RosFactory: found class de.unibi.citec.clf.bonsai.ros.actuators.RosLanguageActuator
14:14:31 DEBUG RosFactory: found class de.unibi.citec.clf.bonsai.ros.actuators.RosGetPersonAttributesActuator
14:14:31 DEBUG RosFactory: found class de.unibi.citec.clf.bonsai.ros.actuators.RosMoveBaseNavigationActuator
14:14:31 DEBUG RosFactory: found class de.unibi.citec.clf.bonsai.ros.actuators.RosRecognizeObjectsActuator
14:14:31 DEBUG RosFactory: found class de.unibi.citec.clf.bonsai.ros.actuators.RosNLPActuator
14:14:31 DEBUG RosFactory: found class de.unibi.citec.clf.bonsai.ros.actuators.RosPicknPlaceActuator
14:14:31 DEBUG RosFactory: found class de.unibi.citec.clf.bonsai.ros.actuators.RosNaoQiSpeechActuator
14:14:31 DEBUG RosFactory: found class de.unibi.citec.clf.bonsai.ros.actuators.RosStringActuator
14:14:31 DEBUG RosFactory: found class de.unibi.citec.clf.bonsai.ros.actuators.RosTranslationActuator
14:14:31 DEBUG RosFactory: found class de.unibi.citec.clf.bonsai.ros.actuators.RosTWMActuator
14:14:31 DEBUG RosFactory: found class de.unibi.citec.clf.bonsai.ros.actuators.RosPlanningSceneActuator
14:14:31 DEBUG RosFactory: found class de.unibi.citec.clf.bonsai.ros.actuators.RosSpeechRecActuator
14:14:31 DEBUG RosFactory: found class de.unibi.citec.clf.bonsai.ros.actuators.RosGuidingActuator
14:14:31 DEBUG RosFactory: found class de.unibi.citec.clf.bonsai.ros.actuators.RosFollowPeopleActuator
14:14:31 DEBUG RosFactory: found class de.unibi.citec.clf.bonsai.ros.actuators.RosHandOverActuator
14:14:31 DEBUG RosFactory: found class de.unibi.citec.clf.bonsai.ros.actuators.RosDisplayActuator
14:14:31 DEBUG RosFactory: found class de.unibi.citec.clf.bonsai.ros.actuators.RosMultiLangFreeSpeechRecActuator
14:14:31 DEBUG RosFactory: found class de.unibi.citec.clf.bonsai.ros.actuators.RosDetectObjectsActuator
14:14:31 DEBUG RosFactory: found class de.unibi.citec.clf.bonsai.ros.actuators.RosSoundPlayActuator
14:14:31 DEBUG RosFactory: found class de.unibi.citec.clf.bonsai.ros.actuators.RosLearnPersonActuator
14:14:31 DEBUG RosFactory: found class de.unibi.citec.clf.bonsai.ros.actuators.RosHandShakeActuator
14:14:31 DEBUG RosFactory: found class de.unibi.citec.clf.bonsai.ros.actuators.RosNaoQiMotionControlActuator
14:14:31 DEBUG RosFactory: found class de.unibi.citec.clf.bonsai.ros.actuators.RosNaoQiBimanualGraspActuator
14:14:31 WARN  RosFactory: cleanup, may take some time...
14:14:31 DEBUG BonsaiManager: configured: de.unibi.citec.clf.bonsai.ros.RosFactory
14:14:31 INFO  BonsaiManager: Initializing coordinate transformer
14:14:31 DEBUG BonsaiManager: Mapping CoreObjectData to factories. Got 1 object(s) to map.
14:14:31 DEBUG BonsaiManager: de.unibi.citec.clf.bonsai.core.configuration.data.TransformerData@2a996313 belongs to de.unibi.citec.clf.bonsai.ros.RosFactory@6502105e
14:14:31 DEBUG BonsaiManager: Mapping of objects to factories:
   de.unibi.citec.clf.bonsai.ros.RosFactory@6502105e:
      CoordinateTransformerToConfigure [transformerClass=class de.unibi.citec.clf.bonsai.ros.TFTransformer, Options={}]

14:14:31 DEBUG BonsaiManager: Factory de.unibi.citec.clf.bonsai.ros.RosFactory@6502105e: [CoordinateTransformerToConfigure [transformerClass=class de.unibi.citec.clf.bonsai.ros.TFTransformer, Options={}]]
14:14:31 INFO  RosFactory: Configuring transformer: CoordinateTransformerToConfigure [transformerClass=class de.unibi.citec.clf.bonsai.ros.TFTransformer, Options={}]
14:14:31 INFO  BonsaiManager: Building map of initialized coordinate transformers
14:14:31 DEBUG BonsaiManager:    factory = de.unibi.citec.clf.bonsai.ros.RosFactory@6502105e
14:14:31 DEBUG BonsaiManager:       transformer = CoordinateTransformerToConfigure [transformerClass=class de.unibi.citec.clf.bonsai.ros.TFTransformer, Options={}]
14:14:31 INFO  BonsaiManager: Initializing working memories
14:14:31 DEBUG BonsaiManager: Mapping ConfiguredObject to factories. Got 1 object(s) to map.
14:14:31 DEBUG BonsaiManager: de.unibi.citec.clf.bonsai.core.configuration.data.MemoryData@77f5f67a belongs to de.unibi.citec.clf.bonsai.memory.MemoryFactory@75dab50e
14:14:31 DEBUG BonsaiManager: Mapping of objects to factories:
   de.unibi.citec.clf.bonsai.memory.MemoryFactory@75dab50e:
      WorkingMemoryToConfigure [memoryClass=class de.unibi.citec.clf.bonsai.memory.DefaultMemory, memoryOptions={}, slots=null, key=WorkingMemory]

14:14:31 DEBUG BonsaiManager: Factory de.unibi.citec.clf.bonsai.memory.MemoryFactory@75dab50e: [WorkingMemoryToConfigure [memoryClass=class de.unibi.citec.clf.bonsai.memory.DefaultMemory, memoryOptions={}, slots=null, key=WorkingMemory]]
14:14:31 INFO  BonsaiManager: Building map of initialized working memorys
14:14:31 DEBUG BonsaiManager:    factory = de.unibi.citec.clf.bonsai.memory.MemoryFactory@75dab50e
14:14:31 DEBUG BonsaiManager:       working memory = WorkingMemoryToConfigure [memoryClass=class de.unibi.citec.clf.bonsai.memory.DefaultMemory, memoryOptions={}, slots=null, key=WorkingMemory]
14:14:31 INFO  BonsaiManager: Initializing sensors per factory
14:14:31 DEBUG BonsaiManager: Mapping ConfiguredObject to factories. Got 2 object(s) to map.
14:14:31 DEBUG BonsaiManager: de.unibi.citec.clf.bonsai.core.configuration.data.SensorData@6252beea belongs to de.unibi.citec.clf.bonsai.ros.RosFactory@6502105e
14:14:31 DEBUG BonsaiManager: de.unibi.citec.clf.bonsai.core.configuration.data.SensorData@3dc9c6eb belongs to de.unibi.citec.clf.bonsai.ros.RosFactory@6502105e
14:14:31 DEBUG BonsaiManager: Mapping of objects to factories:
   de.unibi.citec.clf.bonsai.ros.RosFactory@6502105e:
      SensorToConfigure [key=PositionSensor, sensorClass=class de.unibi.citec.clf.bonsai.ros.sensors.RosBtlMsgSensor, dataTypeClass=class de.unibi.citec.clf.btl.data.navigation.PositionData, wireClass=interface geometry_msgs.PoseWithCovarianceStamped,  sensorOptions={keepLast=True, topic=/amcl_pose}]
      SensorToConfigure [key=SpeechSensor, sensorClass=class de.unibi.citec.clf.bonsai.ros.sensors.RosBtlMsgSensor, dataTypeClass=class de.unibi.citec.clf.btl.data.speechrec.Utterance, wireClass=interface std_msgs.String,  sensorOptions={topic=/speechrec/psa/speechRecognition}]

14:14:31 DEBUG BonsaiManager: Factory de.unibi.citec.clf.bonsai.ros.RosFactory@6502105e: [SensorToConfigure [key=PositionSensor, sensorClass=class de.unibi.citec.clf.bonsai.ros.sensors.RosBtlMsgSensor, dataTypeClass=class de.unibi.citec.clf.btl.data.navigation.PositionData, wireClass=interface geometry_msgs.PoseWithCovarianceStamped,  sensorOptions={keepLast=True, topic=/amcl_pose}], SensorToConfigure [key=SpeechSensor, sensorClass=class de.unibi.citec.clf.bonsai.ros.sensors.RosBtlMsgSensor, dataTypeClass=class de.unibi.citec.clf.btl.data.speechrec.Utterance, wireClass=interface std_msgs.String,  sensorOptions={topic=/speechrec/psa/speechRecognition}]]
14:14:31 INFO  RosFactory: Configuring sensors: [SensorToConfigure [key=PositionSensor, sensorClass=class de.unibi.citec.clf.bonsai.ros.sensors.RosBtlMsgSensor, dataTypeClass=class de.unibi.citec.clf.btl.data.navigation.PositionData, wireClass=interface geometry_msgs.PoseWithCovarianceStamped,  sensorOptions={keepLast=True, topic=/amcl_pose}], SensorToConfigure [key=SpeechSensor, sensorClass=class de.unibi.citec.clf.bonsai.ros.sensors.RosBtlMsgSensor, dataTypeClass=class de.unibi.citec.clf.btl.data.speechrec.Utterance, wireClass=interface std_msgs.String,  sensorOptions={topic=/speechrec/psa/speechRecognition}]]
14:14:31 DEBUG RosFactory: Processing sensor to configure: SensorToConfigure [key=PositionSensor, sensorClass=class de.unibi.citec.clf.bonsai.ros.sensors.RosBtlMsgSensor, dataTypeClass=class de.unibi.citec.clf.btl.data.navigation.PositionData, wireClass=interface geometry_msgs.PoseWithCovarianceStamped,  sensorOptions={keepLast=True, topic=/amcl_pose}]
14:14:31 DEBUG RosFactory: Checking if class class de.unibi.citec.clf.bonsai.ros.sensors.RosStringSensor satifies sensor SensorToConfigure [key=PositionSensor, sensorClass=class de.unibi.citec.clf.bonsai.ros.sensors.RosBtlMsgSensor, dataTypeClass=class de.unibi.citec.clf.btl.data.navigation.PositionData, wireClass=interface geometry_msgs.PoseWithCovarianceStamped,  sensorOptions={keepLast=True, topic=/amcl_pose}]
14:14:31 DEBUG RosFactory: Sensor class class de.unibi.citec.clf.bonsai.ros.sensors.RosStringSensor does not satify sensor SensorToConfigure [key=PositionSensor, sensorClass=class de.unibi.citec.clf.bonsai.ros.sensors.RosBtlMsgSensor, dataTypeClass=class de.unibi.citec.clf.btl.data.navigation.PositionData, wireClass=interface geometry_msgs.PoseWithCovarianceStamped,  sensorOptions={keepLast=True, topic=/amcl_pose}]
14:14:31 TRACE RosFactory: Sensor class: class de.unibi.citec.clf.bonsai.ros.sensors.RosStringSensor
14:14:31 TRACE RosFactory: Sensor needs: class de.unibi.citec.clf.bonsai.ros.sensors.RosBtlMsgSensor
14:14:31 TRACE RosFactory: Sensor class == false
14:14:31 TRACE RosFactory: Sensor wire true
14:14:31 DEBUG RosFactory: Checking if class class de.unibi.citec.clf.bonsai.ros.sensors.RosDoubleSensor satifies sensor SensorToConfigure [key=PositionSensor, sensorClass=class de.unibi.citec.clf.bonsai.ros.sensors.RosBtlMsgSensor, dataTypeClass=class de.unibi.citec.clf.btl.data.navigation.PositionData, wireClass=interface geometry_msgs.PoseWithCovarianceStamped,  sensorOptions={keepLast=True, topic=/amcl_pose}]
14:14:31 DEBUG RosFactory: Sensor class class de.unibi.citec.clf.bonsai.ros.sensors.RosDoubleSensor does not satify sensor SensorToConfigure [key=PositionSensor, sensorClass=class de.unibi.citec.clf.bonsai.ros.sensors.RosBtlMsgSensor, dataTypeClass=class de.unibi.citec.clf.btl.data.navigation.PositionData, wireClass=interface geometry_msgs.PoseWithCovarianceStamped,  sensorOptions={keepLast=True, topic=/amcl_pose}]
14:14:31 TRACE RosFactory: Sensor class: class de.unibi.citec.clf.bonsai.ros.sensors.RosDoubleSensor
14:14:31 TRACE RosFactory: Sensor needs: class de.unibi.citec.clf.bonsai.ros.sensors.RosBtlMsgSensor
14:14:31 TRACE RosFactory: Sensor class == false
14:14:31 TRACE RosFactory: Sensor wire true
14:14:31 DEBUG RosFactory: Checking if class class de.unibi.citec.clf.bonsai.ros.sensors.RosBtlMsgSensor satifies sensor SensorToConfigure [key=PositionSensor, sensorClass=class de.unibi.citec.clf.bonsai.ros.sensors.RosBtlMsgSensor, dataTypeClass=class de.unibi.citec.clf.btl.data.navigation.PositionData, wireClass=interface geometry_msgs.PoseWithCovarianceStamped,  sensorOptions={keepLast=True, topic=/amcl_pose}]
14:14:31 DEBUG RosFactory: Sensor class class de.unibi.citec.clf.bonsai.ros.sensors.RosBtlMsgSensor satisfies sensor SensorToConfigure [key=PositionSensor, sensorClass=class de.unibi.citec.clf.bonsai.ros.sensors.RosBtlMsgSensor, dataTypeClass=class de.unibi.citec.clf.btl.data.navigation.PositionData, wireClass=interface geometry_msgs.PoseWithCovarianceStamped,  sensorOptions={keepLast=True, topic=/amcl_pose}]
14:14:31 DEBUG RosFactory: Processing sensor to configure: SensorToConfigure [key=SpeechSensor, sensorClass=class de.unibi.citec.clf.bonsai.ros.sensors.RosBtlMsgSensor, dataTypeClass=class de.unibi.citec.clf.btl.data.speechrec.Utterance, wireClass=interface std_msgs.String,  sensorOptions={topic=/speechrec/psa/speechRecognition}]
14:14:31 DEBUG RosFactory: Checking if class class de.unibi.citec.clf.bonsai.ros.sensors.RosStringSensor satifies sensor SensorToConfigure [key=SpeechSensor, sensorClass=class de.unibi.citec.clf.bonsai.ros.sensors.RosBtlMsgSensor, dataTypeClass=class de.unibi.citec.clf.btl.data.speechrec.Utterance, wireClass=interface std_msgs.String,  sensorOptions={topic=/speechrec/psa/speechRecognition}]
14:14:31 DEBUG RosFactory: Sensor class class de.unibi.citec.clf.bonsai.ros.sensors.RosStringSensor does not satify sensor SensorToConfigure [key=SpeechSensor, sensorClass=class de.unibi.citec.clf.bonsai.ros.sensors.RosBtlMsgSensor, dataTypeClass=class de.unibi.citec.clf.btl.data.speechrec.Utterance, wireClass=interface std_msgs.String,  sensorOptions={topic=/speechrec/psa/speechRecognition}]
14:14:31 TRACE RosFactory: Sensor class: class de.unibi.citec.clf.bonsai.ros.sensors.RosStringSensor
14:14:31 TRACE RosFactory: Sensor needs: class de.unibi.citec.clf.bonsai.ros.sensors.RosBtlMsgSensor
14:14:31 TRACE RosFactory: Sensor class == false
14:14:31 TRACE RosFactory: Sensor wire true
14:14:31 DEBUG RosFactory: Checking if class class de.unibi.citec.clf.bonsai.ros.sensors.RosDoubleSensor satifies sensor SensorToConfigure [key=SpeechSensor, sensorClass=class de.unibi.citec.clf.bonsai.ros.sensors.RosBtlMsgSensor, dataTypeClass=class de.unibi.citec.clf.btl.data.speechrec.Utterance, wireClass=interface std_msgs.String,  sensorOptions={topic=/speechrec/psa/speechRecognition}]
14:14:31 DEBUG RosFactory: Sensor class class de.unibi.citec.clf.bonsai.ros.sensors.RosDoubleSensor does not satify sensor SensorToConfigure [key=SpeechSensor, sensorClass=class de.unibi.citec.clf.bonsai.ros.sensors.RosBtlMsgSensor, dataTypeClass=class de.unibi.citec.clf.btl.data.speechrec.Utterance, wireClass=interface std_msgs.String,  sensorOptions={topic=/speechrec/psa/speechRecognition}]
14:14:31 TRACE RosFactory: Sensor class: class de.unibi.citec.clf.bonsai.ros.sensors.RosDoubleSensor
14:14:31 TRACE RosFactory: Sensor needs: class de.unibi.citec.clf.bonsai.ros.sensors.RosBtlMsgSensor
14:14:31 TRACE RosFactory: Sensor class == false
14:14:31 TRACE RosFactory: Sensor wire true
14:14:31 DEBUG RosFactory: Checking if class class de.unibi.citec.clf.bonsai.ros.sensors.RosBtlMsgSensor satifies sensor SensorToConfigure [key=SpeechSensor, sensorClass=class de.unibi.citec.clf.bonsai.ros.sensors.RosBtlMsgSensor, dataTypeClass=class de.unibi.citec.clf.btl.data.speechrec.Utterance, wireClass=interface std_msgs.String,  sensorOptions={topic=/speechrec/psa/speechRecognition}]
14:14:31 DEBUG RosFactory: Sensor class class de.unibi.citec.clf.bonsai.ros.sensors.RosBtlMsgSensor satisfies sensor SensorToConfigure [key=SpeechSensor, sensorClass=class de.unibi.citec.clf.bonsai.ros.sensors.RosBtlMsgSensor, dataTypeClass=class de.unibi.citec.clf.btl.data.speechrec.Utterance, wireClass=interface std_msgs.String,  sensorOptions={topic=/speechrec/psa/speechRecognition}]
14:14:31 INFO  BonsaiManager: Building map of initialized sensors
14:14:31 DEBUG BonsaiManager:    factory = de.unibi.citec.clf.bonsai.ros.RosFactory@6502105e
14:14:31 DEBUG BonsaiManager:       sensor = SensorToConfigure [key=PositionSensor, sensorClass=class de.unibi.citec.clf.bonsai.ros.sensors.RosBtlMsgSensor, dataTypeClass=class de.unibi.citec.clf.btl.data.navigation.PositionData, wireClass=interface geometry_msgs.PoseWithCovarianceStamped,  sensorOptions={keepLast=True, topic=/amcl_pose}]
14:14:31 DEBUG BonsaiManager:       sensor = SensorToConfigure [key=SpeechSensor, sensorClass=class de.unibi.citec.clf.bonsai.ros.sensors.RosBtlMsgSensor, dataTypeClass=class de.unibi.citec.clf.btl.data.speechrec.Utterance, wireClass=interface std_msgs.String,  sensorOptions={topic=/speechrec/psa/speechRecognition}]
14:14:31 INFO  BonsaiManager: Initializing actuators per factory
14:14:31 DEBUG BonsaiManager: Mapping ConfiguredObject to factories. Got 7 object(s) to map.
14:14:31 DEBUG BonsaiManager: de.unibi.citec.clf.bonsai.core.configuration.data.ActuatorData@52c9d0c9 belongs to de.unibi.citec.clf.bonsai.ros.RosFactory@6502105e
14:14:31 DEBUG BonsaiManager: de.unibi.citec.clf.bonsai.core.configuration.data.ActuatorData@3c2794cb belongs to de.unibi.citec.clf.bonsai.ros.RosFactory@6502105e
14:14:31 DEBUG BonsaiManager: de.unibi.citec.clf.bonsai.core.configuration.data.ActuatorData@56a00c32 belongs to de.unibi.citec.clf.bonsai.ros.RosFactory@6502105e
14:14:31 DEBUG BonsaiManager: de.unibi.citec.clf.bonsai.core.configuration.data.ActuatorData@546b7e8f belongs to de.unibi.citec.clf.bonsai.ros.RosFactory@6502105e
14:14:31 DEBUG BonsaiManager: de.unibi.citec.clf.bonsai.core.configuration.data.ActuatorData@1772e4b2 belongs to de.unibi.citec.clf.bonsai.ros.RosFactory@6502105e
14:14:31 DEBUG BonsaiManager: de.unibi.citec.clf.bonsai.core.configuration.data.ActuatorData@1d454e0b belongs to de.unibi.citec.clf.bonsai.ros.RosFactory@6502105e
14:14:31 DEBUG BonsaiManager: de.unibi.citec.clf.bonsai.core.configuration.data.ActuatorData@7192bd5c belongs to de.unibi.citec.clf.bonsai.ros.RosFactory@6502105e
14:14:31 DEBUG BonsaiManager: Mapping of objects to factories:
   de.unibi.citec.clf.bonsai.ros.RosFactory@6502105e:
      ActuatorToConfigure [actuatorClass=class de.unibi.citec.clf.bonsai.ros.actuators.ClfMoveBaseNavigationActuator, actuatorOptions={makePlanTopic=/move_base/NavfnROS/make_plan, topic=/move_base, costmapTopic=/move_base/clear_costmaps, driveDirectTopic=/pepper_robot/drivedirect}, interfaceClass=interface de.unibi.citec.clf.bonsai.actuators.NavigationActuator, key=NavigationActuator]
      ActuatorToConfigure [actuatorClass=class de.unibi.citec.clf.bonsai.ros.actuators.RosNaoQiPostureActuator, actuatorOptions={topic=/pepper_robot/motion_control/animation_player}, interfaceClass=interface de.unibi.citec.clf.bonsai.actuators.PostureActuator, key=PostureActuator]
      ActuatorToConfigure [actuatorClass=class de.unibi.citec.clf.bonsai.ros.actuators.RosGazeActuator, actuatorOptions={actionTopic=/pepper_robot/motion_control/trajectory_action, minPitch=-0.7068, maxYaw=2.0857, maxPitch=0.6371, minYaw=-2.0857, topic=/pepper_robot/motion_control/set_joint_angles}, interfaceClass=interface de.unibi.citec.clf.bonsai.actuators.GazeActuator, key=GazeActuator]
      ActuatorToConfigure [actuatorClass=class de.unibi.citec.clf.bonsai.ros.actuators.RosDetectPeopleActuator, actuatorOptions={followRoiTopic=/open_pose/shirt_roi, topic=/open_pose/get_crowd_attributes}, interfaceClass=interface de.unibi.citec.clf.bonsai.actuators.DetectPeopleActuator, key=PeopleActuator]
      ActuatorToConfigure [actuatorClass=class de.unibi.citec.clf.bonsai.ros.actuators.RosKBaseActuator, actuatorOptions={queryTopic=/KBase/query, dataTopic=/KBase/data}, interfaceClass=interface de.unibi.citec.clf.bonsai.actuators.KBaseActuator, key=KBaseActuator]
      ActuatorToConfigure [actuatorClass=class de.unibi.citec.clf.bonsai.ros.actuators.RosNaoQiSpeechActuator, actuatorOptions={topic=/naoqi_tts_feedback}, interfaceClass=interface de.unibi.citec.clf.bonsai.actuators.SpeechActuator, key=SpeechActuator]
      ActuatorToConfigure [actuatorClass=class de.unibi.citec.clf.bonsai.ros.actuators.RosNaoQiSSLActuator, actuatorOptions={topic=/pepper_ssl_service}, interfaceClass=interface de.unibi.citec.clf.bonsai.actuators.SSLActuator, key=SSLActuator]

14:14:31 DEBUG BonsaiManager: Factory de.unibi.citec.clf.bonsai.ros.RosFactory@6502105e: [ActuatorToConfigure [actuatorClass=class de.unibi.citec.clf.bonsai.ros.actuators.ClfMoveBaseNavigationActuator, actuatorOptions={makePlanTopic=/move_base/NavfnROS/make_plan, topic=/move_base, costmapTopic=/move_base/clear_costmaps, driveDirectTopic=/pepper_robot/drivedirect}, interfaceClass=interface de.unibi.citec.clf.bonsai.actuators.NavigationActuator, key=NavigationActuator], ActuatorToConfigure [actuatorClass=class de.unibi.citec.clf.bonsai.ros.actuators.RosNaoQiPostureActuator, actuatorOptions={topic=/pepper_robot/motion_control/animation_player}, interfaceClass=interface de.unibi.citec.clf.bonsai.actuators.PostureActuator, key=PostureActuator], ActuatorToConfigure [actuatorClass=class de.unibi.citec.clf.bonsai.ros.actuators.RosGazeActuator, actuatorOptions={actionTopic=/pepper_robot/motion_control/trajectory_action, minPitch=-0.7068, maxYaw=2.0857, maxPitch=0.6371, minYaw=-2.0857, topic=/pepper_robot/motion_control/set_joint_angles}, interfaceClass=interface de.unibi.citec.clf.bonsai.actuators.GazeActuator, key=GazeActuator], ActuatorToConfigure [actuatorClass=class de.unibi.citec.clf.bonsai.ros.actuators.RosDetectPeopleActuator, actuatorOptions={followRoiTopic=/open_pose/shirt_roi, topic=/open_pose/get_crowd_attributes}, interfaceClass=interface de.unibi.citec.clf.bonsai.actuators.DetectPeopleActuator, key=PeopleActuator], ActuatorToConfigure [actuatorClass=class de.unibi.citec.clf.bonsai.ros.actuators.RosKBaseActuator, actuatorOptions={queryTopic=/KBase/query, dataTopic=/KBase/data}, interfaceClass=interface de.unibi.citec.clf.bonsai.actuators.KBaseActuator, key=KBaseActuator], ActuatorToConfigure [actuatorClass=class de.unibi.citec.clf.bonsai.ros.actuators.RosNaoQiSpeechActuator, actuatorOptions={topic=/naoqi_tts_feedback}, interfaceClass=interface de.unibi.citec.clf.bonsai.actuators.SpeechActuator, key=SpeechActuator], ActuatorToConfigure [actuatorClass=class de.unibi.citec.clf.bonsai.ros.actuators.RosNaoQiSSLActuator, actuatorOptions={topic=/pepper_ssl_service}, interfaceClass=interface de.unibi.citec.clf.bonsai.actuators.SSLActuator, key=SSLActuator]]
14:14:31 INFO  RosFactory: Configuring actuators: [ActuatorToConfigure [actuatorClass=class de.unibi.citec.clf.bonsai.ros.actuators.ClfMoveBaseNavigationActuator, actuatorOptions={makePlanTopic=/move_base/NavfnROS/make_plan, topic=/move_base, costmapTopic=/move_base/clear_costmaps, driveDirectTopic=/pepper_robot/drivedirect}, interfaceClass=interface de.unibi.citec.clf.bonsai.actuators.NavigationActuator, key=NavigationActuator], ActuatorToConfigure [actuatorClass=class de.unibi.citec.clf.bonsai.ros.actuators.RosNaoQiPostureActuator, actuatorOptions={topic=/pepper_robot/motion_control/animation_player}, interfaceClass=interface de.unibi.citec.clf.bonsai.actuators.PostureActuator, key=PostureActuator], ActuatorToConfigure [actuatorClass=class de.unibi.citec.clf.bonsai.ros.actuators.RosGazeActuator, actuatorOptions={actionTopic=/pepper_robot/motion_control/trajectory_action, minPitch=-0.7068, maxYaw=2.0857, maxPitch=0.6371, minYaw=-2.0857, topic=/pepper_robot/motion_control/set_joint_angles}, interfaceClass=interface de.unibi.citec.clf.bonsai.actuators.GazeActuator, key=GazeActuator], ActuatorToConfigure [actuatorClass=class de.unibi.citec.clf.bonsai.ros.actuators.RosDetectPeopleActuator, actuatorOptions={followRoiTopic=/open_pose/shirt_roi, topic=/open_pose/get_crowd_attributes}, interfaceClass=interface de.unibi.citec.clf.bonsai.actuators.DetectPeopleActuator, key=PeopleActuator], ActuatorToConfigure [actuatorClass=class de.unibi.citec.clf.bonsai.ros.actuators.RosKBaseActuator, actuatorOptions={queryTopic=/KBase/query, dataTopic=/KBase/data}, interfaceClass=interface de.unibi.citec.clf.bonsai.actuators.KBaseActuator, key=KBaseActuator], ActuatorToConfigure [actuatorClass=class de.unibi.citec.clf.bonsai.ros.actuators.RosNaoQiSpeechActuator, actuatorOptions={topic=/naoqi_tts_feedback}, interfaceClass=interface de.unibi.citec.clf.bonsai.actuators.SpeechActuator, key=SpeechActuator], ActuatorToConfigure [actuatorClass=class de.unibi.citec.clf.bonsai.ros.actuators.RosNaoQiSSLActuator, actuatorOptions={topic=/pepper_ssl_service}, interfaceClass=interface de.unibi.citec.clf.bonsai.actuators.SSLActuator, key=SSLActuator]]
14:14:31 DEBUG RosFactory: Processing actuator to configure: ActuatorToConfigure [actuatorClass=class de.unibi.citec.clf.bonsai.ros.actuators.ClfMoveBaseNavigationActuator, actuatorOptions={makePlanTopic=/move_base/NavfnROS/make_plan, topic=/move_base, costmapTopic=/move_base/clear_costmaps, driveDirectTopic=/pepper_robot/drivedirect}, interfaceClass=interface de.unibi.citec.clf.bonsai.actuators.NavigationActuator, key=NavigationActuator]
14:14:31 DEBUG RosFactory: Checking if class class de.unibi.citec.clf.bonsai.ros.actuators.RosNaoQiSSLActuator satifies actuator ActuatorToConfigure [actuatorClass=class de.unibi.citec.clf.bonsai.ros.actuators.ClfMoveBaseNavigationActuator, actuatorOptions={makePlanTopic=/move_base/NavfnROS/make_plan, topic=/move_base, costmapTopic=/move_base/clear_costmaps, driveDirectTopic=/pepper_robot/drivedirect}, interfaceClass=interface de.unibi.citec.clf.bonsai.actuators.NavigationActuator, key=NavigationActuator]
14:14:31 DEBUG RosFactory: Actuator class class de.unibi.citec.clf.bonsai.ros.actuators.RosNaoQiSSLActuator does not satify actuator ActuatorToConfigure [actuatorClass=class de.unibi.citec.clf.bonsai.ros.actuators.ClfMoveBaseNavigationActuator, actuatorOptions={makePlanTopic=/move_base/NavfnROS/make_plan, topic=/move_base, costmapTopic=/move_base/clear_costmaps, driveDirectTopic=/pepper_robot/drivedirect}, interfaceClass=interface de.unibi.citec.clf.bonsai.actuators.NavigationActuator, key=NavigationActuator]
14:14:31 TRACE RosFactory: actuator class: class de.unibi.citec.clf.bonsai.ros.actuators.RosNaoQiSSLActuator
14:14:31 TRACE RosFactory: actuator needs: class de.unibi.citec.clf.bonsai.ros.actuators.ClfMoveBaseNavigationActuator
14:14:31 TRACE RosFactory: actuator class == false
14:14:31 TRACE RosFactory: actuator impl false
14:14:31 DEBUG RosFactory: Checking if class class de.unibi.citec.clf.bonsai.ros.actuators.RosWaitForTouchEventActuator satifies actuator ActuatorToConfigure [actuatorClass=class de.unibi.citec.clf.bonsai.ros.actuators.ClfMoveBaseNavigationActuator, actuatorOptions={makePlanTopic=/move_base/NavfnROS/make_plan, topic=/move_base, costmapTopic=/move_base/clear_costmaps, driveDirectTopic=/pepper_robot/drivedirect}, interfaceClass=interface de.unibi.citec.clf.bonsai.actuators.NavigationActuator, key=NavigationActuator]
14:14:31 DEBUG RosFactory: Actuator class class de.unibi.citec.clf.bonsai.ros.actuators.RosWaitForTouchEventActuator does not satify actuator ActuatorToConfigure [actuatorClass=class de.unibi.citec.clf.bonsai.ros.actuators.ClfMoveBaseNavigationActuator, actuatorOptions={makePlanTopic=/move_base/NavfnROS/make_plan, topic=/move_base, costmapTopic=/move_base/clear_costmaps, driveDirectTopic=/pepper_robot/drivedirect}, interfaceClass=interface de.unibi.citec.clf.bonsai.actuators.NavigationActuator, key=NavigationActuator]
14:14:31 TRACE RosFactory: actuator class: class de.unibi.citec.clf.bonsai.ros.actuators.RosWaitForTouchEventActuator
14:14:31 TRACE RosFactory: actuator needs: class de.unibi.citec.clf.bonsai.ros.actuators.ClfMoveBaseNavigationActuator
14:14:31 TRACE RosFactory: actuator class == false
14:14:31 TRACE RosFactory: actuator impl false
14:14:31 DEBUG RosFactory: Checking if class class de.unibi.citec.clf.bonsai.ros.actuators.RosKBaseActuator satifies actuator ActuatorToConfigure [actuatorClass=class de.unibi.citec.clf.bonsai.ros.actuators.ClfMoveBaseNavigationActuator, actuatorOptions={makePlanTopic=/move_base/NavfnROS/make_plan, topic=/move_base, costmapTopic=/move_base/clear_costmaps, driveDirectTopic=/pepper_robot/drivedirect}, interfaceClass=interface de.unibi.citec.clf.bonsai.actuators.NavigationActuator, key=NavigationActuator]
14:14:31 DEBUG RosFactory: Actuator class class de.unibi.citec.clf.bonsai.ros.actuators.RosKBaseActuator does not satify actuator ActuatorToConfigure [actuatorClass=class de.unibi.citec.clf.bonsai.ros.actuators.ClfMoveBaseNavigationActuator, actuatorOptions={makePlanTopic=/move_base/NavfnROS/make_plan, topic=/move_base, costmapTopic=/move_base/clear_costmaps, driveDirectTopic=/pepper_robot/drivedirect}, interfaceClass=interface de.unibi.citec.clf.bonsai.actuators.NavigationActuator, key=NavigationActuator]
14:14:31 TRACE RosFactory: actuator class: class de.unibi.citec.clf.bonsai.ros.actuators.RosKBaseActuator
14:14:31 TRACE RosFactory: actuator needs: class de.unibi.citec.clf.bonsai.ros.actuators.ClfMoveBaseNavigationActuator
14:14:31 TRACE RosFactory: actuator class == false
14:14:31 TRACE RosFactory: actuator impl false
14:14:31 DEBUG RosFactory: Checking if class class de.unibi.citec.clf.bonsai.ros.actuators.RosDetectPeopleActuator satifies actuator ActuatorToConfigure [actuatorClass=class de.unibi.citec.clf.bonsai.ros.actuators.ClfMoveBaseNavigationActuator, actuatorOptions={makePlanTopic=/move_base/NavfnROS/make_plan, topic=/move_base, costmapTopic=/move_base/clear_costmaps, driveDirectTopic=/pepper_robot/drivedirect}, interfaceClass=interface de.unibi.citec.clf.bonsai.actuators.NavigationActuator, key=NavigationActuator]
14:14:31 DEBUG RosFactory: Actuator class class de.unibi.citec.clf.bonsai.ros.actuators.RosDetectPeopleActuator does not satify actuator ActuatorToConfigure [actuatorClass=class de.unibi.citec.clf.bonsai.ros.actuators.ClfMoveBaseNavigationActuator, actuatorOptions={makePlanTopic=/move_base/NavfnROS/make_plan, topic=/move_base, costmapTopic=/move_base/clear_costmaps, driveDirectTopic=/pepper_robot/drivedirect}, interfaceClass=interface de.unibi.citec.clf.bonsai.actuators.NavigationActuator, key=NavigationActuator]
14:14:31 TRACE RosFactory: actuator class: class de.unibi.citec.clf.bonsai.ros.actuators.RosDetectPeopleActuator
14:14:31 TRACE RosFactory: actuator needs: class de.unibi.citec.clf.bonsai.ros.actuators.ClfMoveBaseNavigationActuator
14:14:31 TRACE RosFactory: actuator class == false
14:14:31 TRACE RosFactory: actuator impl false
14:14:31 DEBUG RosFactory: Checking if class class de.unibi.citec.clf.bonsai.ros.actuators.RosPostureExecutionActuator satifies actuator ActuatorToConfigure [actuatorClass=class de.unibi.citec.clf.bonsai.ros.actuators.ClfMoveBaseNavigationActuator, actuatorOptions={makePlanTopic=/move_base/NavfnROS/make_plan, topic=/move_base, costmapTopic=/move_base/clear_costmaps, driveDirectTopic=/pepper_robot/drivedirect}, interfaceClass=interface de.unibi.citec.clf.bonsai.actuators.NavigationActuator, key=NavigationActuator]
14:14:31 DEBUG RosFactory: Actuator class class de.unibi.citec.clf.bonsai.ros.actuators.RosPostureExecutionActuator does not satify actuator ActuatorToConfigure [actuatorClass=class de.unibi.citec.clf.bonsai.ros.actuators.ClfMoveBaseNavigationActuator, actuatorOptions={makePlanTopic=/move_base/NavfnROS/make_plan, topic=/move_base, costmapTopic=/move_base/clear_costmaps, driveDirectTopic=/pepper_robot/drivedirect}, interfaceClass=interface de.unibi.citec.clf.bonsai.actuators.NavigationActuator, key=NavigationActuator]
14:14:31 TRACE RosFactory: actuator class: class de.unibi.citec.clf.bonsai.ros.actuators.RosPostureExecutionActuator
14:14:31 TRACE RosFactory: actuator needs: class de.unibi.citec.clf.bonsai.ros.actuators.ClfMoveBaseNavigationActuator
14:14:31 TRACE RosFactory: actuator class == false
14:14:31 TRACE RosFactory: actuator impl false
14:14:31 DEBUG RosFactory: Checking if class class de.unibi.citec.clf.bonsai.ros.actuators.RosTriggerActuator satifies actuator ActuatorToConfigure [actuatorClass=class de.unibi.citec.clf.bonsai.ros.actuators.ClfMoveBaseNavigationActuator, actuatorOptions={makePlanTopic=/move_base/NavfnROS/make_plan, topic=/move_base, costmapTopic=/move_base/clear_costmaps, driveDirectTopic=/pepper_robot/drivedirect}, interfaceClass=interface de.unibi.citec.clf.bonsai.actuators.NavigationActuator, key=NavigationActuator]
14:14:31 DEBUG RosFactory: Actuator class class de.unibi.citec.clf.bonsai.ros.actuators.RosTriggerActuator does not satify actuator ActuatorToConfigure [actuatorClass=class de.unibi.citec.clf.bonsai.ros.actuators.ClfMoveBaseNavigationActuator, actuatorOptions={makePlanTopic=/move_base/NavfnROS/make_plan, topic=/move_base, costmapTopic=/move_base/clear_costmaps, driveDirectTopic=/pepper_robot/drivedirect}, interfaceClass=interface de.unibi.citec.clf.bonsai.actuators.NavigationActuator, key=NavigationActuator]
14:14:31 TRACE RosFactory: actuator class: class de.unibi.citec.clf.bonsai.ros.actuators.RosTriggerActuator
14:14:31 TRACE RosFactory: actuator needs: class de.unibi.citec.clf.bonsai.ros.actuators.ClfMoveBaseNavigationActuator
14:14:31 TRACE RosFactory: actuator class == false
14:14:31 TRACE RosFactory: actuator impl false
14:14:31 DEBUG RosFactory: Checking if class class de.unibi.citec.clf.bonsai.ros.actuators.ClfMoveBaseNavigationActuator satifies actuator ActuatorToConfigure [actuatorClass=class de.unibi.citec.clf.bonsai.ros.actuators.ClfMoveBaseNavigationActuator, actuatorOptions={makePlanTopic=/move_base/NavfnROS/make_plan, topic=/move_base, costmapTopic=/move_base/clear_costmaps, driveDirectTopic=/pepper_robot/drivedirect}, interfaceClass=interface de.unibi.citec.clf.bonsai.actuators.NavigationActuator, key=NavigationActuator]
14:14:31 DEBUG RosFactory: Actuator class class de.unibi.citec.clf.bonsai.ros.actuators.ClfMoveBaseNavigationActuator satisfies actuator ActuatorToConfigure [actuatorClass=class de.unibi.citec.clf.bonsai.ros.actuators.ClfMoveBaseNavigationActuator, actuatorOptions={makePlanTopic=/move_base/NavfnROS/make_plan, topic=/move_base, costmapTopic=/move_base/clear_costmaps, driveDirectTopic=/pepper_robot/drivedirect}, interfaceClass=interface de.unibi.citec.clf.bonsai.actuators.NavigationActuator, key=NavigationActuator]
14:14:31 DEBUG RosFactory: Processing actuator to configure: ActuatorToConfigure [actuatorClass=class de.unibi.citec.clf.bonsai.ros.actuators.RosNaoQiPostureActuator, actuatorOptions={topic=/pepper_robot/motion_control/animation_player}, interfaceClass=interface de.unibi.citec.clf.bonsai.actuators.PostureActuator, key=PostureActuator]
14:14:31 DEBUG RosFactory: Checking if class class de.unibi.citec.clf.bonsai.ros.actuators.RosNaoQiSSLActuator satifies actuator ActuatorToConfigure [actuatorClass=class de.unibi.citec.clf.bonsai.ros.actuators.RosNaoQiPostureActuator, actuatorOptions={topic=/pepper_robot/motion_control/animation_player}, interfaceClass=interface de.unibi.citec.clf.bonsai.actuators.PostureActuator, key=PostureActuator]
14:14:31 DEBUG RosFactory: Actuator class class de.unibi.citec.clf.bonsai.ros.actuators.RosNaoQiSSLActuator does not satify actuator ActuatorToConfigure [actuatorClass=class de.unibi.citec.clf.bonsai.ros.actuators.RosNaoQiPostureActuator, actuatorOptions={topic=/pepper_robot/motion_control/animation_player}, interfaceClass=interface de.unibi.citec.clf.bonsai.actuators.PostureActuator, key=PostureActuator]
14:14:31 TRACE RosFactory: actuator class: class de.unibi.citec.clf.bonsai.ros.actuators.RosNaoQiSSLActuator
14:14:31 TRACE RosFactory: actuator needs: class de.unibi.citec.clf.bonsai.ros.actuators.RosNaoQiPostureActuator
14:14:31 TRACE RosFactory: actuator class == false
14:14:31 TRACE RosFactory: actuator impl false
14:14:31 DEBUG RosFactory: Checking if class class de.unibi.citec.clf.bonsai.ros.actuators.RosWaitForTouchEventActuator satifies actuator ActuatorToConfigure [actuatorClass=class de.unibi.citec.clf.bonsai.ros.actuators.RosNaoQiPostureActuator, actuatorOptions={topic=/pepper_robot/motion_control/animation_player}, interfaceClass=interface de.unibi.citec.clf.bonsai.actuators.PostureActuator, key=PostureActuator]
14:14:31 DEBUG RosFactory: Actuator class class de.unibi.citec.clf.bonsai.ros.actuators.RosWaitForTouchEventActuator does not satify actuator ActuatorToConfigure [actuatorClass=class de.unibi.citec.clf.bonsai.ros.actuators.RosNaoQiPostureActuator, actuatorOptions={topic=/pepper_robot/motion_control/animation_player}, interfaceClass=interface de.unibi.citec.clf.bonsai.actuators.PostureActuator, key=PostureActuator]
14:14:31 TRACE RosFactory: actuator class: class de.unibi.citec.clf.bonsai.ros.actuators.RosWaitForTouchEventActuator
14:14:31 TRACE RosFactory: actuator needs: class de.unibi.citec.clf.bonsai.ros.actuators.RosNaoQiPostureActuator
14:14:31 TRACE RosFactory: actuator class == false
14:14:31 TRACE RosFactory: actuator impl false
14:14:31 DEBUG RosFactory: Checking if class class de.unibi.citec.clf.bonsai.ros.actuators.RosKBaseActuator satifies actuator ActuatorToConfigure [actuatorClass=class de.unibi.citec.clf.bonsai.ros.actuators.RosNaoQiPostureActuator, actuatorOptions={topic=/pepper_robot/motion_control/animation_player}, interfaceClass=interface de.unibi.citec.clf.bonsai.actuators.PostureActuator, key=PostureActuator]
14:14:31 DEBUG RosFactory: Actuator class class de.unibi.citec.clf.bonsai.ros.actuators.RosKBaseActuator does not satify actuator ActuatorToConfigure [actuatorClass=class de.unibi.citec.clf.bonsai.ros.actuators.RosNaoQiPostureActuator, actuatorOptions={topic=/pepper_robot/motion_control/animation_player}, interfaceClass=interface de.unibi.citec.clf.bonsai.actuators.PostureActuator, key=PostureActuator]
14:14:31 TRACE RosFactory: actuator class: class de.unibi.citec.clf.bonsai.ros.actuators.RosKBaseActuator
14:14:31 TRACE RosFactory: actuator needs: class de.unibi.citec.clf.bonsai.ros.actuators.RosNaoQiPostureActuator
14:14:31 TRACE RosFactory: actuator class == false
14:14:31 TRACE RosFactory: actuator impl false
14:14:31 DEBUG RosFactory: Checking if class class de.unibi.citec.clf.bonsai.ros.actuators.RosDetectPeopleActuator satifies actuator ActuatorToConfigure [actuatorClass=class de.unibi.citec.clf.bonsai.ros.actuators.RosNaoQiPostureActuator, actuatorOptions={topic=/pepper_robot/motion_control/animation_player}, interfaceClass=interface de.unibi.citec.clf.bonsai.actuators.PostureActuator, key=PostureActuator]
14:14:31 DEBUG RosFactory: Actuator class class de.unibi.citec.clf.bonsai.ros.actuators.RosDetectPeopleActuator does not satify actuator ActuatorToConfigure [actuatorClass=class de.unibi.citec.clf.bonsai.ros.actuators.RosNaoQiPostureActuator, actuatorOptions={topic=/pepper_robot/motion_control/animation_player}, interfaceClass=interface de.unibi.citec.clf.bonsai.actuators.PostureActuator, key=PostureActuator]
14:14:31 TRACE RosFactory: actuator class: class de.unibi.citec.clf.bonsai.ros.actuators.RosDetectPeopleActuator
14:14:31 TRACE RosFactory: actuator needs: class de.unibi.citec.clf.bonsai.ros.actuators.RosNaoQiPostureActuator
14:14:31 TRACE RosFactory: actuator class == false
14:14:31 TRACE RosFactory: actuator impl false
14:14:31 DEBUG RosFactory: Checking if class class de.unibi.citec.clf.bonsai.ros.actuators.RosPostureExecutionActuator satifies actuator ActuatorToConfigure [actuatorClass=class de.unibi.citec.clf.bonsai.ros.actuators.RosNaoQiPostureActuator, actuatorOptions={topic=/pepper_robot/motion_control/animation_player}, interfaceClass=interface de.unibi.citec.clf.bonsai.actuators.PostureActuator, key=PostureActuator]
14:14:31 DEBUG RosFactory: Actuator class class de.unibi.citec.clf.bonsai.ros.actuators.RosPostureExecutionActuator does not satify actuator ActuatorToConfigure [actuatorClass=class de.unibi.citec.clf.bonsai.ros.actuators.RosNaoQiPostureActuator, actuatorOptions={topic=/pepper_robot/motion_control/animation_player}, interfaceClass=interface de.unibi.citec.clf.bonsai.actuators.PostureActuator, key=PostureActuator]
14:14:31 TRACE RosFactory: actuator class: class de.unibi.citec.clf.bonsai.ros.actuators.RosPostureExecutionActuator
14:14:31 TRACE RosFactory: actuator needs: class de.unibi.citec.clf.bonsai.ros.actuators.RosNaoQiPostureActuator
14:14:31 TRACE RosFactory: actuator class == false
14:14:31 TRACE RosFactory: actuator impl true
14:14:31 DEBUG RosFactory: Checking if class class de.unibi.citec.clf.bonsai.ros.actuators.RosTriggerActuator satifies actuator ActuatorToConfigure [actuatorClass=class de.unibi.citec.clf.bonsai.ros.actuators.RosNaoQiPostureActuator, actuatorOptions={topic=/pepper_robot/motion_control/animation_player}, interfaceClass=interface de.unibi.citec.clf.bonsai.actuators.PostureActuator, key=PostureActuator]
14:14:31 DEBUG RosFactory: Actuator class class de.unibi.citec.clf.bonsai.ros.actuators.RosTriggerActuator does not satify actuator ActuatorToConfigure [actuatorClass=class de.unibi.citec.clf.bonsai.ros.actuators.RosNaoQiPostureActuator, actuatorOptions={topic=/pepper_robot/motion_control/animation_player}, interfaceClass=interface de.unibi.citec.clf.bonsai.actuators.PostureActuator, key=PostureActuator]
14:14:31 TRACE RosFactory: actuator class: class de.unibi.citec.clf.bonsai.ros.actuators.RosTriggerActuator
14:14:31 TRACE RosFactory: actuator needs: class de.unibi.citec.clf.bonsai.ros.actuators.RosNaoQiPostureActuator
14:14:31 TRACE RosFactory: actuator class == false
14:14:31 TRACE RosFactory: actuator impl false
14:14:31 DEBUG RosFactory: Checking if class class de.unibi.citec.clf.bonsai.ros.actuators.ClfMoveBaseNavigationActuator satifies actuator ActuatorToConfigure [actuatorClass=class de.unibi.citec.clf.bonsai.ros.actuators.RosNaoQiPostureActuator, actuatorOptions={topic=/pepper_robot/motion_control/animation_player}, interfaceClass=interface de.unibi.citec.clf.bonsai.actuators.PostureActuator, key=PostureActuator]
14:14:31 DEBUG RosFactory: Actuator class class de.unibi.citec.clf.bonsai.ros.actuators.ClfMoveBaseNavigationActuator does not satify actuator ActuatorToConfigure [actuatorClass=class de.unibi.citec.clf.bonsai.ros.actuators.RosNaoQiPostureActuator, actuatorOptions={topic=/pepper_robot/motion_control/animation_player}, interfaceClass=interface de.unibi.citec.clf.bonsai.actuators.PostureActuator, key=PostureActuator]
14:14:31 TRACE RosFactory: actuator class: class de.unibi.citec.clf.bonsai.ros.actuators.ClfMoveBaseNavigationActuator
14:14:31 TRACE RosFactory: actuator needs: class de.unibi.citec.clf.bonsai.ros.actuators.RosNaoQiPostureActuator
14:14:31 TRACE RosFactory: actuator class == false
14:14:31 TRACE RosFactory: actuator impl false
14:14:31 DEBUG RosFactory: Checking if class class de.unibi.citec.clf.bonsai.ros.actuators.RosNaoQiCameraStreamActuator satifies actuator ActuatorToConfigure [actuatorClass=class de.unibi.citec.clf.bonsai.ros.actuators.RosNaoQiPostureActuator, actuatorOptions={topic=/pepper_robot/motion_control/animation_player}, interfaceClass=interface de.unibi.citec.clf.bonsai.actuators.PostureActuator, key=PostureActuator]
14:14:31 DEBUG RosFactory: Actuator class class de.unibi.citec.clf.bonsai.ros.actuators.RosNaoQiCameraStreamActuator does not satify actuator ActuatorToConfigure [actuatorClass=class de.unibi.citec.clf.bonsai.ros.actuators.RosNaoQiPostureActuator, actuatorOptions={topic=/pepper_robot/motion_control/animation_player}, interfaceClass=interface de.unibi.citec.clf.bonsai.actuators.PostureActuator, key=PostureActuator]
14:14:31 TRACE RosFactory: actuator class: class de.unibi.citec.clf.bonsai.ros.actuators.RosNaoQiCameraStreamActuator
14:14:31 TRACE RosFactory: actuator needs: class de.unibi.citec.clf.bonsai.ros.actuators.RosNaoQiPostureActuator
14:14:31 TRACE RosFactory: actuator class == false
14:14:31 TRACE RosFactory: actuator impl false
14:14:31 DEBUG RosFactory: Checking if class class de.unibi.citec.clf.bonsai.ros.actuators.RosNaoQiPostureActuator satifies actuator ActuatorToConfigure [actuatorClass=class de.unibi.citec.clf.bonsai.ros.actuators.RosNaoQiPostureActuator, actuatorOptions={topic=/pepper_robot/motion_control/animation_player}, interfaceClass=interface de.unibi.citec.clf.bonsai.actuators.PostureActuator, key=PostureActuator]
14:14:31 DEBUG RosFactory: Actuator class class de.unibi.citec.clf.bonsai.ros.actuators.RosNaoQiPostureActuator satisfies actuator ActuatorToConfigure [actuatorClass=class de.unibi.citec.clf.bonsai.ros.actuators.RosNaoQiPostureActuator, actuatorOptions={topic=/pepper_robot/motion_control/animation_player}, interfaceClass=interface de.unibi.citec.clf.bonsai.actuators.PostureActuator, key=PostureActuator]
14:14:31 DEBUG RosFactory: Processing actuator to configure: ActuatorToConfigure [actuatorClass=class de.unibi.citec.clf.bonsai.ros.actuators.RosGazeActuator, actuatorOptions={actionTopic=/pepper_robot/motion_control/trajectory_action, minPitch=-0.7068, maxYaw=2.0857, maxPitch=0.6371, minYaw=-2.0857, topic=/pepper_robot/motion_control/set_joint_angles}, interfaceClass=interface de.unibi.citec.clf.bonsai.actuators.GazeActuator, key=GazeActuator]
14:14:31 DEBUG RosFactory: Checking if class class de.unibi.citec.clf.bonsai.ros.actuators.RosNaoQiSSLActuator satifies actuator ActuatorToConfigure [actuatorClass=class de.unibi.citec.clf.bonsai.ros.actuators.RosGazeActuator, actuatorOptions={actionTopic=/pepper_robot/motion_control/trajectory_action, minPitch=-0.7068, maxYaw=2.0857, maxPitch=0.6371, minYaw=-2.0857, topic=/pepper_robot/motion_control/set_joint_angles}, interfaceClass=interface de.unibi.citec.clf.bonsai.actuators.GazeActuator, key=GazeActuator]
14:14:31 DEBUG RosFactory: Actuator class class de.unibi.citec.clf.bonsai.ros.actuators.RosNaoQiSSLActuator does not satify actuator ActuatorToConfigure [actuatorClass=class de.unibi.citec.clf.bonsai.ros.actuators.RosGazeActuator, actuatorOptions={actionTopic=/pepper_robot/motion_control/trajectory_action, minPitch=-0.7068, maxYaw=2.0857, maxPitch=0.6371, minYaw=-2.0857, topic=/pepper_robot/motion_control/set_joint_angles}, interfaceClass=interface de.unibi.citec.clf.bonsai.actuators.GazeActuator, key=GazeActuator]
14:14:31 TRACE RosFactory: actuator class: class de.unibi.citec.clf.bonsai.ros.actuators.RosNaoQiSSLActuator
14:14:31 TRACE RosFactory: actuator needs: class de.unibi.citec.clf.bonsai.ros.actuators.RosGazeActuator
14:14:31 TRACE RosFactory: actuator class == false
14:14:31 TRACE RosFactory: actuator impl false
14:14:31 DEBUG RosFactory: Checking if class class de.unibi.citec.clf.bonsai.ros.actuators.RosWaitForTouchEventActuator satifies actuator ActuatorToConfigure [actuatorClass=class de.unibi.citec.clf.bonsai.ros.actuators.RosGazeActuator, actuatorOptions={actionTopic=/pepper_robot/motion_control/trajectory_action, minPitch=-0.7068, maxYaw=2.0857, maxPitch=0.6371, minYaw=-2.0857, topic=/pepper_robot/motion_control/set_joint_angles}, interfaceClass=interface de.unibi.citec.clf.bonsai.actuators.GazeActuator, key=GazeActuator]
14:14:31 DEBUG RosFactory: Actuator class class de.unibi.citec.clf.bonsai.ros.actuators.RosWaitForTouchEventActuator does not satify actuator ActuatorToConfigure [actuatorClass=class de.unibi.citec.clf.bonsai.ros.actuators.RosGazeActuator, actuatorOptions={actionTopic=/pepper_robot/motion_control/trajectory_action, minPitch=-0.7068, maxYaw=2.0857, maxPitch=0.6371, minYaw=-2.0857, topic=/pepper_robot/motion_control/set_joint_angles}, interfaceClass=interface de.unibi.citec.clf.bonsai.actuators.GazeActuator, key=GazeActuator]
14:14:31 TRACE RosFactory: actuator class: class de.unibi.citec.clf.bonsai.ros.actuators.RosWaitForTouchEventActuator
14:14:31 TRACE RosFactory: actuator needs: class de.unibi.citec.clf.bonsai.ros.actuators.RosGazeActuator
14:14:31 TRACE RosFactory: actuator class == false
14:14:31 TRACE RosFactory: actuator impl false
14:14:31 DEBUG RosFactory: Checking if class class de.unibi.citec.clf.bonsai.ros.actuators.RosKBaseActuator satifies actuator ActuatorToConfigure [actuatorClass=class de.unibi.citec.clf.bonsai.ros.actuators.RosGazeActuator, actuatorOptions={actionTopic=/pepper_robot/motion_control/trajectory_action, minPitch=-0.7068, maxYaw=2.0857, maxPitch=0.6371, minYaw=-2.0857, topic=/pepper_robot/motion_control/set_joint_angles}, interfaceClass=interface de.unibi.citec.clf.bonsai.actuators.GazeActuator, key=GazeActuator]
14:14:31 DEBUG RosFactory: Actuator class class de.unibi.citec.clf.bonsai.ros.actuators.RosKBaseActuator does not satify actuator ActuatorToConfigure [actuatorClass=class de.unibi.citec.clf.bonsai.ros.actuators.RosGazeActuator, actuatorOptions={actionTopic=/pepper_robot/motion_control/trajectory_action, minPitch=-0.7068, maxYaw=2.0857, maxPitch=0.6371, minYaw=-2.0857, topic=/pepper_robot/motion_control/set_joint_angles}, interfaceClass=interface de.unibi.citec.clf.bonsai.actuators.GazeActuator, key=GazeActuator]
14:14:31 TRACE RosFactory: actuator class: class de.unibi.citec.clf.bonsai.ros.actuators.RosKBaseActuator
14:14:31 TRACE RosFactory: actuator needs: class de.unibi.citec.clf.bonsai.ros.actuators.RosGazeActuator
14:14:31 TRACE RosFactory: actuator class == false
14:14:31 TRACE RosFactory: actuator impl false
14:14:31 DEBUG RosFactory: Checking if class class de.unibi.citec.clf.bonsai.ros.actuators.RosDetectPeopleActuator satifies actuator ActuatorToConfigure [actuatorClass=class de.unibi.citec.clf.bonsai.ros.actuators.RosGazeActuator, actuatorOptions={actionTopic=/pepper_robot/motion_control/trajectory_action, minPitch=-0.7068, maxYaw=2.0857, maxPitch=0.6371, minYaw=-2.0857, topic=/pepper_robot/motion_control/set_joint_angles}, interfaceClass=interface de.unibi.citec.clf.bonsai.actuators.GazeActuator, key=GazeActuator]
14:14:31 DEBUG RosFactory: Actuator class class de.unibi.citec.clf.bonsai.ros.actuators.RosDetectPeopleActuator does not satify actuator ActuatorToConfigure [actuatorClass=class de.unibi.citec.clf.bonsai.ros.actuators.RosGazeActuator, actuatorOptions={actionTopic=/pepper_robot/motion_control/trajectory_action, minPitch=-0.7068, maxYaw=2.0857, maxPitch=0.6371, minYaw=-2.0857, topic=/pepper_robot/motion_control/set_joint_angles}, interfaceClass=interface de.unibi.citec.clf.bonsai.actuators.GazeActuator, key=GazeActuator]
14:14:31 TRACE RosFactory: actuator class: class de.unibi.citec.clf.bonsai.ros.actuators.RosDetectPeopleActuator
14:14:31 TRACE RosFactory: actuator needs: class de.unibi.citec.clf.bonsai.ros.actuators.RosGazeActuator
14:14:31 TRACE RosFactory: actuator class == false
14:14:31 TRACE RosFactory: actuator impl false
14:14:31 DEBUG RosFactory: Checking if class class de.unibi.citec.clf.bonsai.ros.actuators.RosPostureExecutionActuator satifies actuator ActuatorToConfigure [actuatorClass=class de.unibi.citec.clf.bonsai.ros.actuators.RosGazeActuator, actuatorOptions={actionTopic=/pepper_robot/motion_control/trajectory_action, minPitch=-0.7068, maxYaw=2.0857, maxPitch=0.6371, minYaw=-2.0857, topic=/pepper_robot/motion_control/set_joint_angles}, interfaceClass=interface de.unibi.citec.clf.bonsai.actuators.GazeActuator, key=GazeActuator]
14:14:31 DEBUG RosFactory: Actuator class class de.unibi.citec.clf.bonsai.ros.actuators.RosPostureExecutionActuator does not satify actuator ActuatorToConfigure [actuatorClass=class de.unibi.citec.clf.bonsai.ros.actuators.RosGazeActuator, actuatorOptions={actionTopic=/pepper_robot/motion_control/trajectory_action, minPitch=-0.7068, maxYaw=2.0857, maxPitch=0.6371, minYaw=-2.0857, topic=/pepper_robot/motion_control/set_joint_angles}, interfaceClass=interface de.unibi.citec.clf.bonsai.actuators.GazeActuator, key=GazeActuator]
14:14:31 TRACE RosFactory: actuator class: class de.unibi.citec.clf.bonsai.ros.actuators.RosPostureExecutionActuator
14:14:31 TRACE RosFactory: actuator needs: class de.unibi.citec.clf.bonsai.ros.actuators.RosGazeActuator
14:14:31 TRACE RosFactory: actuator class == false
14:14:31 TRACE RosFactory: actuator impl false
14:14:31 DEBUG RosFactory: Checking if class class de.unibi.citec.clf.bonsai.ros.actuators.RosTriggerActuator satifies actuator ActuatorToConfigure [actuatorClass=class de.unibi.citec.clf.bonsai.ros.actuators.RosGazeActuator, actuatorOptions={actionTopic=/pepper_robot/motion_control/trajectory_action, minPitch=-0.7068, maxYaw=2.0857, maxPitch=0.6371, minYaw=-2.0857, topic=/pepper_robot/motion_control/set_joint_angles}, interfaceClass=interface de.unibi.citec.clf.bonsai.actuators.GazeActuator, key=GazeActuator]
14:14:31 DEBUG RosFactory: Actuator class class de.unibi.citec.clf.bonsai.ros.actuators.RosTriggerActuator does not satify actuator ActuatorToConfigure [actuatorClass=class de.unibi.citec.clf.bonsai.ros.actuators.RosGazeActuator, actuatorOptions={actionTopic=/pepper_robot/motion_control/trajectory_action, minPitch=-0.7068, maxYaw=2.0857, maxPitch=0.6371, minYaw=-2.0857, topic=/pepper_robot/motion_control/set_joint_angles}, interfaceClass=interface de.unibi.citec.clf.bonsai.actuators.GazeActuator, key=GazeActuator]
14:14:31 TRACE RosFactory: actuator class: class de.unibi.citec.clf.bonsai.ros.actuators.RosTriggerActuator
14:14:31 TRACE RosFactory: actuator needs: class de.unibi.citec.clf.bonsai.ros.actuators.RosGazeActuator
14:14:31 TRACE RosFactory: actuator class == false
14:14:31 TRACE RosFactory: actuator impl false
14:14:31 DEBUG RosFactory: Checking if class class de.unibi.citec.clf.bonsai.ros.actuators.ClfMoveBaseNavigationActuator satifies actuator ActuatorToConfigure [actuatorClass=class de.unibi.citec.clf.bonsai.ros.actuators.RosGazeActuator, actuatorOptions={actionTopic=/pepper_robot/motion_control/trajectory_action, minPitch=-0.7068, maxYaw=2.0857, maxPitch=0.6371, minYaw=-2.0857, topic=/pepper_robot/motion_control/set_joint_angles}, interfaceClass=interface de.unibi.citec.clf.bonsai.actuators.GazeActuator, key=GazeActuator]
14:14:31 DEBUG RosFactory: Actuator class class de.unibi.citec.clf.bonsai.ros.actuators.ClfMoveBaseNavigationActuator does not satify actuator ActuatorToConfigure [actuatorClass=class de.unibi.citec.clf.bonsai.ros.actuators.RosGazeActuator, actuatorOptions={actionTopic=/pepper_robot/motion_control/trajectory_action, minPitch=-0.7068, maxYaw=2.0857, maxPitch=0.6371, minYaw=-2.0857, topic=/pepper_robot/motion_control/set_joint_angles}, interfaceClass=interface de.unibi.citec.clf.bonsai.actuators.GazeActuator, key=GazeActuator]
14:14:31 TRACE RosFactory: actuator class: class de.unibi.citec.clf.bonsai.ros.actuators.ClfMoveBaseNavigationActuator
14:14:31 TRACE RosFactory: actuator needs: class de.unibi.citec.clf.bonsai.ros.actuators.RosGazeActuator
14:14:31 TRACE RosFactory: actuator class == false
14:14:31 TRACE RosFactory: actuator impl false
14:14:31 DEBUG RosFactory: Checking if class class de.unibi.citec.clf.bonsai.ros.actuators.RosNaoQiCameraStreamActuator satifies actuator ActuatorToConfigure [actuatorClass=class de.unibi.citec.clf.bonsai.ros.actuators.RosGazeActuator, actuatorOptions={actionTopic=/pepper_robot/motion_control/trajectory_action, minPitch=-0.7068, maxYaw=2.0857, maxPitch=0.6371, minYaw=-2.0857, topic=/pepper_robot/motion_control/set_joint_angles}, interfaceClass=interface de.unibi.citec.clf.bonsai.actuators.GazeActuator, key=GazeActuator]
14:14:31 DEBUG RosFactory: Actuator class class de.unibi.citec.clf.bonsai.ros.actuators.RosNaoQiCameraStreamActuator does not satify actuator ActuatorToConfigure [actuatorClass=class de.unibi.citec.clf.bonsai.ros.actuators.RosGazeActuator, actuatorOptions={actionTopic=/pepper_robot/motion_control/trajectory_action, minPitch=-0.7068, maxYaw=2.0857, maxPitch=0.6371, minYaw=-2.0857, topic=/pepper_robot/motion_control/set_joint_angles}, interfaceClass=interface de.unibi.citec.clf.bonsai.actuators.GazeActuator, key=GazeActuator]
14:14:31 TRACE RosFactory: actuator class: class de.unibi.citec.clf.bonsai.ros.actuators.RosNaoQiCameraStreamActuator
14:14:31 TRACE RosFactory: actuator needs: class de.unibi.citec.clf.bonsai.ros.actuators.RosGazeActuator
14:14:31 TRACE RosFactory: actuator class == false
14:14:31 TRACE RosFactory: actuator impl false
14:14:31 DEBUG RosFactory: Checking if class class de.unibi.citec.clf.bonsai.ros.actuators.RosNaoQiPostureActuator satifies actuator ActuatorToConfigure [actuatorClass=class de.unibi.citec.clf.bonsai.ros.actuators.RosGazeActuator, actuatorOptions={actionTopic=/pepper_robot/motion_control/trajectory_action, minPitch=-0.7068, maxYaw=2.0857, maxPitch=0.6371, minYaw=-2.0857, topic=/pepper_robot/motion_control/set_joint_angles}, interfaceClass=interface de.unibi.citec.clf.bonsai.actuators.GazeActuator, key=GazeActuator]
14:14:31 DEBUG RosFactory: Actuator class class de.unibi.citec.clf.bonsai.ros.actuators.RosNaoQiPostureActuator does not satify actuator ActuatorToConfigure [actuatorClass=class de.unibi.citec.clf.bonsai.ros.actuators.RosGazeActuator, actuatorOptions={actionTopic=/pepper_robot/motion_control/trajectory_action, minPitch=-0.7068, maxYaw=2.0857, maxPitch=0.6371, minYaw=-2.0857, topic=/pepper_robot/motion_control/set_joint_angles}, interfaceClass=interface de.unibi.citec.clf.bonsai.actuators.GazeActuator, key=GazeActuator]
14:14:31 TRACE RosFactory: actuator class: class de.unibi.citec.clf.bonsai.ros.actuators.RosNaoQiPostureActuator
14:14:31 TRACE RosFactory: actuator needs: class de.unibi.citec.clf.bonsai.ros.actuators.RosGazeActuator
14:14:31 TRACE RosFactory: actuator class == false
14:14:31 TRACE RosFactory: actuator impl false
14:14:31 DEBUG RosFactory: Checking if class class de.unibi.citec.clf.bonsai.ros.actuators.RosSegmentationActuator satifies actuator ActuatorToConfigure [actuatorClass=class de.unibi.citec.clf.bonsai.ros.actuators.RosGazeActuator, actuatorOptions={actionTopic=/pepper_robot/motion_control/trajectory_action, minPitch=-0.7068, maxYaw=2.0857, maxPitch=0.6371, minYaw=-2.0857, topic=/pepper_robot/motion_control/set_joint_angles}, interfaceClass=interface de.unibi.citec.clf.bonsai.actuators.GazeActuator, key=GazeActuator]
14:14:31 DEBUG RosFactory: Actuator class class de.unibi.citec.clf.bonsai.ros.actuators.RosSegmentationActuator does not satify actuator ActuatorToConfigure [actuatorClass=class de.unibi.citec.clf.bonsai.ros.actuators.RosGazeActuator, actuatorOptions={actionTopic=/pepper_robot/motion_control/trajectory_action, minPitch=-0.7068, maxYaw=2.0857, maxPitch=0.6371, minYaw=-2.0857, topic=/pepper_robot/motion_control/set_joint_angles}, interfaceClass=interface de.unibi.citec.clf.bonsai.actuators.GazeActuator, key=GazeActuator]
14:14:31 TRACE RosFactory: actuator class: class de.unibi.citec.clf.bonsai.ros.actuators.RosSegmentationActuator
14:14:31 TRACE RosFactory: actuator needs: class de.unibi.citec.clf.bonsai.ros.actuators.RosGazeActuator
14:14:31 TRACE RosFactory: actuator class == false
14:14:31 TRACE RosFactory: actuator impl false
14:14:31 DEBUG RosFactory: Checking if class class de.unibi.citec.clf.bonsai.ros.actuators.RosEnableGoogleSpeechRecAndSimpleNPLActuator satifies actuator ActuatorToConfigure [actuatorClass=class de.unibi.citec.clf.bonsai.ros.actuators.RosGazeActuator, actuatorOptions={actionTopic=/pepper_robot/motion_control/trajectory_action, minPitch=-0.7068, maxYaw=2.0857, maxPitch=0.6371, minYaw=-2.0857, topic=/pepper_robot/motion_control/set_joint_angles}, interfaceClass=interface de.unibi.citec.clf.bonsai.actuators.GazeActuator, key=GazeActuator]
14:14:31 DEBUG RosFactory: Actuator class class de.unibi.citec.clf.bonsai.ros.actuators.RosEnableGoogleSpeechRecAndSimpleNPLActuator does not satify actuator ActuatorToConfigure [actuatorClass=class de.unibi.citec.clf.bonsai.ros.actuators.RosGazeActuator, actuatorOptions={actionTopic=/pepper_robot/motion_control/trajectory_action, minPitch=-0.7068, maxYaw=2.0857, maxPitch=0.6371, minYaw=-2.0857, topic=/pepper_robot/motion_control/set_joint_angles}, interfaceClass=interface de.unibi.citec.clf.bonsai.actuators.GazeActuator, key=GazeActuator]
14:14:31 TRACE RosFactory: actuator class: class de.unibi.citec.clf.bonsai.ros.actuators.RosEnableGoogleSpeechRecAndSimpleNPLActuator
14:14:31 TRACE RosFactory: actuator needs: class de.unibi.citec.clf.bonsai.ros.actuators.RosGazeActuator
14:14:31 TRACE RosFactory: actuator class == false
14:14:31 TRACE RosFactory: actuator impl false
14:14:31 DEBUG RosFactory: Checking if class class de.unibi.citec.clf.bonsai.ros.actuators.RosTrackingActuator satifies actuator ActuatorToConfigure [actuatorClass=class de.unibi.citec.clf.bonsai.ros.actuators.RosGazeActuator, actuatorOptions={actionTopic=/pepper_robot/motion_control/trajectory_action, minPitch=-0.7068, maxYaw=2.0857, maxPitch=0.6371, minYaw=-2.0857, topic=/pepper_robot/motion_control/set_joint_angles}, interfaceClass=interface de.unibi.citec.clf.bonsai.actuators.GazeActuator, key=GazeActuator]
14:14:31 DEBUG RosFactory: Actuator class class de.unibi.citec.clf.bonsai.ros.actuators.RosTrackingActuator does not satify actuator ActuatorToConfigure [actuatorClass=class de.unibi.citec.clf.bonsai.ros.actuators.RosGazeActuator, actuatorOptions={actionTopic=/pepper_robot/motion_control/trajectory_action, minPitch=-0.7068, maxYaw=2.0857, maxPitch=0.6371, minYaw=-2.0857, topic=/pepper_robot/motion_control/set_joint_angles}, interfaceClass=interface de.unibi.citec.clf.bonsai.actuators.GazeActuator, key=GazeActuator]
14:14:31 TRACE RosFactory: actuator class: class de.unibi.citec.clf.bonsai.ros.actuators.RosTrackingActuator
14:14:31 TRACE RosFactory: actuator needs: class de.unibi.citec.clf.bonsai.ros.actuators.RosGazeActuator
14:14:31 TRACE RosFactory: actuator class == false
14:14:31 TRACE RosFactory: actuator impl false
14:14:31 DEBUG RosFactory: Checking if class class de.unibi.citec.clf.bonsai.ros.actuators.RosGazeActuator satifies actuator ActuatorToConfigure [actuatorClass=class de.unibi.citec.clf.bonsai.ros.actuators.RosGazeActuator, actuatorOptions={actionTopic=/pepper_robot/motion_control/trajectory_action, minPitch=-0.7068, maxYaw=2.0857, maxPitch=0.6371, minYaw=-2.0857, topic=/pepper_robot/motion_control/set_joint_angles}, interfaceClass=interface de.unibi.citec.clf.bonsai.actuators.GazeActuator, key=GazeActuator]
14:14:31 DEBUG RosFactory: Actuator class class de.unibi.citec.clf.bonsai.ros.actuators.RosGazeActuator satisfies actuator ActuatorToConfigure [actuatorClass=class de.unibi.citec.clf.bonsai.ros.actuators.RosGazeActuator, actuatorOptions={actionTopic=/pepper_robot/motion_control/trajectory_action, minPitch=-0.7068, maxYaw=2.0857, maxPitch=0.6371, minYaw=-2.0857, topic=/pepper_robot/motion_control/set_joint_angles}, interfaceClass=interface de.unibi.citec.clf.bonsai.actuators.GazeActuator, key=GazeActuator]
14:14:31 DEBUG RosFactory: Processing actuator to configure: ActuatorToConfigure [actuatorClass=class de.unibi.citec.clf.bonsai.ros.actuators.RosDetectPeopleActuator, actuatorOptions={followRoiTopic=/open_pose/shirt_roi, topic=/open_pose/get_crowd_attributes}, interfaceClass=interface de.unibi.citec.clf.bonsai.actuators.DetectPeopleActuator, key=PeopleActuator]
14:14:31 DEBUG RosFactory: Checking if class class de.unibi.citec.clf.bonsai.ros.actuators.RosNaoQiSSLActuator satifies actuator ActuatorToConfigure [actuatorClass=class de.unibi.citec.clf.bonsai.ros.actuators.RosDetectPeopleActuator, actuatorOptions={followRoiTopic=/open_pose/shirt_roi, topic=/open_pose/get_crowd_attributes}, interfaceClass=interface de.unibi.citec.clf.bonsai.actuators.DetectPeopleActuator, key=PeopleActuator]
14:14:31 DEBUG RosFactory: Actuator class class de.unibi.citec.clf.bonsai.ros.actuators.RosNaoQiSSLActuator does not satify actuator ActuatorToConfigure [actuatorClass=class de.unibi.citec.clf.bonsai.ros.actuators.RosDetectPeopleActuator, actuatorOptions={followRoiTopic=/open_pose/shirt_roi, topic=/open_pose/get_crowd_attributes}, interfaceClass=interface de.unibi.citec.clf.bonsai.actuators.DetectPeopleActuator, key=PeopleActuator]
14:14:31 TRACE RosFactory: actuator class: class de.unibi.citec.clf.bonsai.ros.actuators.RosNaoQiSSLActuator
14:14:31 TRACE RosFactory: actuator needs: class de.unibi.citec.clf.bonsai.ros.actuators.RosDetectPeopleActuator
14:14:31 TRACE RosFactory: actuator class == false
14:14:31 TRACE RosFactory: actuator impl false
14:14:31 DEBUG RosFactory: Checking if class class de.unibi.citec.clf.bonsai.ros.actuators.RosWaitForTouchEventActuator satifies actuator ActuatorToConfigure [actuatorClass=class de.unibi.citec.clf.bonsai.ros.actuators.RosDetectPeopleActuator, actuatorOptions={followRoiTopic=/open_pose/shirt_roi, topic=/open_pose/get_crowd_attributes}, interfaceClass=interface de.unibi.citec.clf.bonsai.actuators.DetectPeopleActuator, key=PeopleActuator]
14:14:31 DEBUG RosFactory: Actuator class class de.unibi.citec.clf.bonsai.ros.actuators.RosWaitForTouchEventActuator does not satify actuator ActuatorToConfigure [actuatorClass=class de.unibi.citec.clf.bonsai.ros.actuators.RosDetectPeopleActuator, actuatorOptions={followRoiTopic=/open_pose/shirt_roi, topic=/open_pose/get_crowd_attributes}, interfaceClass=interface de.unibi.citec.clf.bonsai.actuators.DetectPeopleActuator, key=PeopleActuator]
14:14:31 TRACE RosFactory: actuator class: class de.unibi.citec.clf.bonsai.ros.actuators.RosWaitForTouchEventActuator
14:14:31 TRACE RosFactory: actuator needs: class de.unibi.citec.clf.bonsai.ros.actuators.RosDetectPeopleActuator
14:14:31 TRACE RosFactory: actuator class == false
14:14:31 TRACE RosFactory: actuator impl false
14:14:31 DEBUG RosFactory: Checking if class class de.unibi.citec.clf.bonsai.ros.actuators.RosKBaseActuator satifies actuator ActuatorToConfigure [actuatorClass=class de.unibi.citec.clf.bonsai.ros.actuators.RosDetectPeopleActuator, actuatorOptions={followRoiTopic=/open_pose/shirt_roi, topic=/open_pose/get_crowd_attributes}, interfaceClass=interface de.unibi.citec.clf.bonsai.actuators.DetectPeopleActuator, key=PeopleActuator]
14:14:31 DEBUG RosFactory: Actuator class class de.unibi.citec.clf.bonsai.ros.actuators.RosKBaseActuator does not satify actuator ActuatorToConfigure [actuatorClass=class de.unibi.citec.clf.bonsai.ros.actuators.RosDetectPeopleActuator, actuatorOptions={followRoiTopic=/open_pose/shirt_roi, topic=/open_pose/get_crowd_attributes}, interfaceClass=interface de.unibi.citec.clf.bonsai.actuators.DetectPeopleActuator, key=PeopleActuator]
14:14:31 TRACE RosFactory: actuator class: class de.unibi.citec.clf.bonsai.ros.actuators.RosKBaseActuator
14:14:31 TRACE RosFactory: actuator needs: class de.unibi.citec.clf.bonsai.ros.actuators.RosDetectPeopleActuator
14:14:31 TRACE RosFactory: actuator class == false
14:14:31 TRACE RosFactory: actuator impl false
14:14:31 DEBUG RosFactory: Checking if class class de.unibi.citec.clf.bonsai.ros.actuators.RosDetectPeopleActuator satifies actuator ActuatorToConfigure [actuatorClass=class de.unibi.citec.clf.bonsai.ros.actuators.RosDetectPeopleActuator, actuatorOptions={followRoiTopic=/open_pose/shirt_roi, topic=/open_pose/get_crowd_attributes}, interfaceClass=interface de.unibi.citec.clf.bonsai.actuators.DetectPeopleActuator, key=PeopleActuator]
14:14:31 DEBUG RosFactory: Actuator class class de.unibi.citec.clf.bonsai.ros.actuators.RosDetectPeopleActuator satisfies actuator ActuatorToConfigure [actuatorClass=class de.unibi.citec.clf.bonsai.ros.actuators.RosDetectPeopleActuator, actuatorOptions={followRoiTopic=/open_pose/shirt_roi, topic=/open_pose/get_crowd_attributes}, interfaceClass=interface de.unibi.citec.clf.bonsai.actuators.DetectPeopleActuator, key=PeopleActuator]
14:14:31 DEBUG RosFactory: Processing actuator to configure: ActuatorToConfigure [actuatorClass=class de.unibi.citec.clf.bonsai.ros.actuators.RosKBaseActuator, actuatorOptions={queryTopic=/KBase/query, dataTopic=/KBase/data}, interfaceClass=interface de.unibi.citec.clf.bonsai.actuators.KBaseActuator, key=KBaseActuator]
14:14:31 DEBUG RosFactory: Checking if class class de.unibi.citec.clf.bonsai.ros.actuators.RosNaoQiSSLActuator satifies actuator ActuatorToConfigure [actuatorClass=class de.unibi.citec.clf.bonsai.ros.actuators.RosKBaseActuator, actuatorOptions={queryTopic=/KBase/query, dataTopic=/KBase/data}, interfaceClass=interface de.unibi.citec.clf.bonsai.actuators.KBaseActuator, key=KBaseActuator]
14:14:31 DEBUG RosFactory: Actuator class class de.unibi.citec.clf.bonsai.ros.actuators.RosNaoQiSSLActuator does not satify actuator ActuatorToConfigure [actuatorClass=class de.unibi.citec.clf.bonsai.ros.actuators.RosKBaseActuator, actuatorOptions={queryTopic=/KBase/query, dataTopic=/KBase/data}, interfaceClass=interface de.unibi.citec.clf.bonsai.actuators.KBaseActuator, key=KBaseActuator]
14:14:31 TRACE RosFactory: actuator class: class de.unibi.citec.clf.bonsai.ros.actuators.RosNaoQiSSLActuator
14:14:31 TRACE RosFactory: actuator needs: class de.unibi.citec.clf.bonsai.ros.actuators.RosKBaseActuator
14:14:31 TRACE RosFactory: actuator class == false
14:14:31 TRACE RosFactory: actuator impl false
14:14:31 DEBUG RosFactory: Checking if class class de.unibi.citec.clf.bonsai.ros.actuators.RosWaitForTouchEventActuator satifies actuator ActuatorToConfigure [actuatorClass=class de.unibi.citec.clf.bonsai.ros.actuators.RosKBaseActuator, actuatorOptions={queryTopic=/KBase/query, dataTopic=/KBase/data}, interfaceClass=interface de.unibi.citec.clf.bonsai.actuators.KBaseActuator, key=KBaseActuator]
14:14:31 DEBUG RosFactory: Actuator class class de.unibi.citec.clf.bonsai.ros.actuators.RosWaitForTouchEventActuator does not satify actuator ActuatorToConfigure [actuatorClass=class de.unibi.citec.clf.bonsai.ros.actuators.RosKBaseActuator, actuatorOptions={queryTopic=/KBase/query, dataTopic=/KBase/data}, interfaceClass=interface de.unibi.citec.clf.bonsai.actuators.KBaseActuator, key=KBaseActuator]
14:14:31 TRACE RosFactory: actuator class: class de.unibi.citec.clf.bonsai.ros.actuators.RosWaitForTouchEventActuator
14:14:31 TRACE RosFactory: actuator needs: class de.unibi.citec.clf.bonsai.ros.actuators.RosKBaseActuator
14:14:31 TRACE RosFactory: actuator class == false
14:14:31 TRACE RosFactory: actuator impl false
14:14:31 DEBUG RosFactory: Checking if class class de.unibi.citec.clf.bonsai.ros.actuators.RosKBaseActuator satifies actuator ActuatorToConfigure [actuatorClass=class de.unibi.citec.clf.bonsai.ros.actuators.RosKBaseActuator, actuatorOptions={queryTopic=/KBase/query, dataTopic=/KBase/data}, interfaceClass=interface de.unibi.citec.clf.bonsai.actuators.KBaseActuator, key=KBaseActuator]
14:14:31 DEBUG RosFactory: Actuator class class de.unibi.citec.clf.bonsai.ros.actuators.RosKBaseActuator satisfies actuator ActuatorToConfigure [actuatorClass=class de.unibi.citec.clf.bonsai.ros.actuators.RosKBaseActuator, actuatorOptions={queryTopic=/KBase/query, dataTopic=/KBase/data}, interfaceClass=interface de.unibi.citec.clf.bonsai.actuators.KBaseActuator, key=KBaseActuator]
14:14:31 DEBUG RosFactory: Processing actuator to configure: ActuatorToConfigure [actuatorClass=class de.unibi.citec.clf.bonsai.ros.actuators.RosNaoQiSpeechActuator, actuatorOptions={topic=/naoqi_tts_feedback}, interfaceClass=interface de.unibi.citec.clf.bonsai.actuators.SpeechActuator, key=SpeechActuator]
14:14:31 DEBUG RosFactory: Checking if class class de.unibi.citec.clf.bonsai.ros.actuators.RosNaoQiSSLActuator satifies actuator ActuatorToConfigure [actuatorClass=class de.unibi.citec.clf.bonsai.ros.actuators.RosNaoQiSpeechActuator, actuatorOptions={topic=/naoqi_tts_feedback}, interfaceClass=interface de.unibi.citec.clf.bonsai.actuators.SpeechActuator, key=SpeechActuator]
14:14:31 DEBUG RosFactory: Actuator class class de.unibi.citec.clf.bonsai.ros.actuators.RosNaoQiSSLActuator does not satify actuator ActuatorToConfigure [actuatorClass=class de.unibi.citec.clf.bonsai.ros.actuators.RosNaoQiSpeechActuator, actuatorOptions={topic=/naoqi_tts_feedback}, interfaceClass=interface de.unibi.citec.clf.bonsai.actuators.SpeechActuator, key=SpeechActuator]
14:14:31 TRACE RosFactory: actuator class: class de.unibi.citec.clf.bonsai.ros.actuators.RosNaoQiSSLActuator
14:14:31 TRACE RosFactory: actuator needs: class de.unibi.citec.clf.bonsai.ros.actuators.RosNaoQiSpeechActuator
14:14:31 TRACE RosFactory: actuator class == false
14:14:31 TRACE RosFactory: actuator impl false
14:14:31 DEBUG RosFactory: Checking if class class de.unibi.citec.clf.bonsai.ros.actuators.RosWaitForTouchEventActuator satifies actuator ActuatorToConfigure [actuatorClass=class de.unibi.citec.clf.bonsai.ros.actuators.RosNaoQiSpeechActuator, actuatorOptions={topic=/naoqi_tts_feedback}, interfaceClass=interface de.unibi.citec.clf.bonsai.actuators.SpeechActuator, key=SpeechActuator]
14:14:31 DEBUG RosFactory: Actuator class class de.unibi.citec.clf.bonsai.ros.actuators.RosWaitForTouchEventActuator does not satify actuator ActuatorToConfigure [actuatorClass=class de.unibi.citec.clf.bonsai.ros.actuators.RosNaoQiSpeechActuator, actuatorOptions={topic=/naoqi_tts_feedback}, interfaceClass=interface de.unibi.citec.clf.bonsai.actuators.SpeechActuator, key=SpeechActuator]
14:14:31 TRACE RosFactory: actuator class: class de.unibi.citec.clf.bonsai.ros.actuators.RosWaitForTouchEventActuator
14:14:31 TRACE RosFactory: actuator needs: class de.unibi.citec.clf.bonsai.ros.actuators.RosNaoQiSpeechActuator
14:14:31 TRACE RosFactory: actuator class == false
14:14:31 TRACE RosFactory: actuator impl false
14:14:31 DEBUG RosFactory: Checking if class class de.unibi.citec.clf.bonsai.ros.actuators.RosKBaseActuator satifies actuator ActuatorToConfigure [actuatorClass=class de.unibi.citec.clf.bonsai.ros.actuators.RosNaoQiSpeechActuator, actuatorOptions={topic=/naoqi_tts_feedback}, interfaceClass=interface de.unibi.citec.clf.bonsai.actuators.SpeechActuator, key=SpeechActuator]
14:14:31 DEBUG RosFactory: Actuator class class de.unibi.citec.clf.bonsai.ros.actuators.RosKBaseActuator does not satify actuator ActuatorToConfigure [actuatorClass=class de.unibi.citec.clf.bonsai.ros.actuators.RosNaoQiSpeechActuator, actuatorOptions={topic=/naoqi_tts_feedback}, interfaceClass=interface de.unibi.citec.clf.bonsai.actuators.SpeechActuator, key=SpeechActuator]
14:14:31 TRACE RosFactory: actuator class: class de.unibi.citec.clf.bonsai.ros.actuators.RosKBaseActuator
14:14:31 TRACE RosFactory: actuator needs: class de.unibi.citec.clf.bonsai.ros.actuators.RosNaoQiSpeechActuator
14:14:31 TRACE RosFactory: actuator class == false
14:14:31 TRACE RosFactory: actuator impl false
14:14:31 DEBUG RosFactory: Checking if class class de.unibi.citec.clf.bonsai.ros.actuators.RosDetectPeopleActuator satifies actuator ActuatorToConfigure [actuatorClass=class de.unibi.citec.clf.bonsai.ros.actuators.RosNaoQiSpeechActuator, actuatorOptions={topic=/naoqi_tts_feedback}, interfaceClass=interface de.unibi.citec.clf.bonsai.actuators.SpeechActuator, key=SpeechActuator]
14:14:31 DEBUG RosFactory: Actuator class class de.unibi.citec.clf.bonsai.ros.actuators.RosDetectPeopleActuator does not satify actuator ActuatorToConfigure [actuatorClass=class de.unibi.citec.clf.bonsai.ros.actuators.RosNaoQiSpeechActuator, actuatorOptions={topic=/naoqi_tts_feedback}, interfaceClass=interface de.unibi.citec.clf.bonsai.actuators.SpeechActuator, key=SpeechActuator]
14:14:31 TRACE RosFactory: actuator class: class de.unibi.citec.clf.bonsai.ros.actuators.RosDetectPeopleActuator
14:14:31 TRACE RosFactory: actuator needs: class de.unibi.citec.clf.bonsai.ros.actuators.RosNaoQiSpeechActuator
14:14:31 TRACE RosFactory: actuator class == false
14:14:31 TRACE RosFactory: actuator impl false
14:14:31 DEBUG RosFactory: Checking if class class de.unibi.citec.clf.bonsai.ros.actuators.RosPostureExecutionActuator satifies actuator ActuatorToConfigure [actuatorClass=class de.unibi.citec.clf.bonsai.ros.actuators.RosNaoQiSpeechActuator, actuatorOptions={topic=/naoqi_tts_feedback}, interfaceClass=interface de.unibi.citec.clf.bonsai.actuators.SpeechActuator, key=SpeechActuator]
14:14:31 DEBUG RosFactory: Actuator class class de.unibi.citec.clf.bonsai.ros.actuators.RosPostureExecutionActuator does not satify actuator ActuatorToConfigure [actuatorClass=class de.unibi.citec.clf.bonsai.ros.actuators.RosNaoQiSpeechActuator, actuatorOptions={topic=/naoqi_tts_feedback}, interfaceClass=interface de.unibi.citec.clf.bonsai.actuators.SpeechActuator, key=SpeechActuator]
14:14:31 TRACE RosFactory: actuator class: class de.unibi.citec.clf.bonsai.ros.actuators.RosPostureExecutionActuator
14:14:31 TRACE RosFactory: actuator needs: class de.unibi.citec.clf.bonsai.ros.actuators.RosNaoQiSpeechActuator
14:14:31 TRACE RosFactory: actuator class == false
14:14:31 TRACE RosFactory: actuator impl false
14:14:31 DEBUG RosFactory: Checking if class class de.unibi.citec.clf.bonsai.ros.actuators.RosTriggerActuator satifies actuator ActuatorToConfigure [actuatorClass=class de.unibi.citec.clf.bonsai.ros.actuators.RosNaoQiSpeechActuator, actuatorOptions={topic=/naoqi_tts_feedback}, interfaceClass=interface de.unibi.citec.clf.bonsai.actuators.SpeechActuator, key=SpeechActuator]
14:14:31 DEBUG RosFactory: Actuator class class de.unibi.citec.clf.bonsai.ros.actuators.RosTriggerActuator does not satify actuator ActuatorToConfigure [actuatorClass=class de.unibi.citec.clf.bonsai.ros.actuators.RosNaoQiSpeechActuator, actuatorOptions={topic=/naoqi_tts_feedback}, interfaceClass=interface de.unibi.citec.clf.bonsai.actuators.SpeechActuator, key=SpeechActuator]
14:14:31 TRACE RosFactory: actuator class: class de.unibi.citec.clf.bonsai.ros.actuators.RosTriggerActuator
14:14:31 TRACE RosFactory: actuator needs: class de.unibi.citec.clf.bonsai.ros.actuators.RosNaoQiSpeechActuator
14:14:31 TRACE RosFactory: actuator class == false
14:14:31 TRACE RosFactory: actuator impl false
14:14:31 DEBUG RosFactory: Checking if class class de.unibi.citec.clf.bonsai.ros.actuators.ClfMoveBaseNavigationActuator satifies actuator ActuatorToConfigure [actuatorClass=class de.unibi.citec.clf.bonsai.ros.actuators.RosNaoQiSpeechActuator, actuatorOptions={topic=/naoqi_tts_feedback}, interfaceClass=interface de.unibi.citec.clf.bonsai.actuators.SpeechActuator, key=SpeechActuator]
14:14:31 DEBUG RosFactory: Actuator class class de.unibi.citec.clf.bonsai.ros.actuators.ClfMoveBaseNavigationActuator does not satify actuator ActuatorToConfigure [actuatorClass=class de.unibi.citec.clf.bonsai.ros.actuators.RosNaoQiSpeechActuator, actuatorOptions={topic=/naoqi_tts_feedback}, interfaceClass=interface de.unibi.citec.clf.bonsai.actuators.SpeechActuator, key=SpeechActuator]
14:14:31 TRACE RosFactory: actuator class: class de.unibi.citec.clf.bonsai.ros.actuators.ClfMoveBaseNavigationActuator
14:14:31 TRACE RosFactory: actuator needs: class de.unibi.citec.clf.bonsai.ros.actuators.RosNaoQiSpeechActuator
14:14:31 TRACE RosFactory: actuator class == false
14:14:31 TRACE RosFactory: actuator impl false
14:14:31 DEBUG RosFactory: Checking if class class de.unibi.citec.clf.bonsai.ros.actuators.RosNaoQiCameraStreamActuator satifies actuator ActuatorToConfigure [actuatorClass=class de.unibi.citec.clf.bonsai.ros.actuators.RosNaoQiSpeechActuator, actuatorOptions={topic=/naoqi_tts_feedback}, interfaceClass=interface de.unibi.citec.clf.bonsai.actuators.SpeechActuator, key=SpeechActuator]
14:14:31 DEBUG RosFactory: Actuator class class de.unibi.citec.clf.bonsai.ros.actuators.RosNaoQiCameraStreamActuator does not satify actuator ActuatorToConfigure [actuatorClass=class de.unibi.citec.clf.bonsai.ros.actuators.RosNaoQiSpeechActuator, actuatorOptions={topic=/naoqi_tts_feedback}, interfaceClass=interface de.unibi.citec.clf.bonsai.actuators.SpeechActuator, key=SpeechActuator]
14:14:31 TRACE RosFactory: actuator class: class de.unibi.citec.clf.bonsai.ros.actuators.RosNaoQiCameraStreamActuator
14:14:31 TRACE RosFactory: actuator needs: class de.unibi.citec.clf.bonsai.ros.actuators.RosNaoQiSpeechActuator
14:14:31 TRACE RosFactory: actuator class == false
14:14:31 TRACE RosFactory: actuator impl false
14:14:31 DEBUG RosFactory: Checking if class class de.unibi.citec.clf.bonsai.ros.actuators.RosNaoQiPostureActuator satifies actuator ActuatorToConfigure [actuatorClass=class de.unibi.citec.clf.bonsai.ros.actuators.RosNaoQiSpeechActuator, actuatorOptions={topic=/naoqi_tts_feedback}, interfaceClass=interface de.unibi.citec.clf.bonsai.actuators.SpeechActuator, key=SpeechActuator]
14:14:31 DEBUG RosFactory: Actuator class class de.unibi.citec.clf.bonsai.ros.actuators.RosNaoQiPostureActuator does not satify actuator ActuatorToConfigure [actuatorClass=class de.unibi.citec.clf.bonsai.ros.actuators.RosNaoQiSpeechActuator, actuatorOptions={topic=/naoqi_tts_feedback}, interfaceClass=interface de.unibi.citec.clf.bonsai.actuators.SpeechActuator, key=SpeechActuator]
14:14:31 TRACE RosFactory: actuator class: class de.unibi.citec.clf.bonsai.ros.actuators.RosNaoQiPostureActuator
14:14:31 TRACE RosFactory: actuator needs: class de.unibi.citec.clf.bonsai.ros.actuators.RosNaoQiSpeechActuator
14:14:31 TRACE RosFactory: actuator class == false
14:14:31 TRACE RosFactory: actuator impl false
14:14:31 DEBUG RosFactory: Checking if class class de.unibi.citec.clf.bonsai.ros.actuators.RosSegmentationActuator satifies actuator ActuatorToConfigure [actuatorClass=class de.unibi.citec.clf.bonsai.ros.actuators.RosNaoQiSpeechActuator, actuatorOptions={topic=/naoqi_tts_feedback}, interfaceClass=interface de.unibi.citec.clf.bonsai.actuators.SpeechActuator, key=SpeechActuator]
14:14:31 DEBUG RosFactory: Actuator class class de.unibi.citec.clf.bonsai.ros.actuators.RosSegmentationActuator does not satify actuator ActuatorToConfigure [actuatorClass=class de.unibi.citec.clf.bonsai.ros.actuators.RosNaoQiSpeechActuator, actuatorOptions={topic=/naoqi_tts_feedback}, interfaceClass=interface de.unibi.citec.clf.bonsai.actuators.SpeechActuator, key=SpeechActuator]
14:14:31 TRACE RosFactory: actuator class: class de.unibi.citec.clf.bonsai.ros.actuators.RosSegmentationActuator
14:14:31 TRACE RosFactory: actuator needs: class de.unibi.citec.clf.bonsai.ros.actuators.RosNaoQiSpeechActuator
14:14:31 TRACE RosFactory: actuator class == false
14:14:31 TRACE RosFactory: actuator impl false
14:14:31 DEBUG RosFactory: Checking if class class de.unibi.citec.clf.bonsai.ros.actuators.RosEnableGoogleSpeechRecAndSimpleNPLActuator satifies actuator ActuatorToConfigure [actuatorClass=class de.unibi.citec.clf.bonsai.ros.actuators.RosNaoQiSpeechActuator, actuatorOptions={topic=/naoqi_tts_feedback}, interfaceClass=interface de.unibi.citec.clf.bonsai.actuators.SpeechActuator, key=SpeechActuator]
14:14:31 DEBUG RosFactory: Actuator class class de.unibi.citec.clf.bonsai.ros.actuators.RosEnableGoogleSpeechRecAndSimpleNPLActuator does not satify actuator ActuatorToConfigure [actuatorClass=class de.unibi.citec.clf.bonsai.ros.actuators.RosNaoQiSpeechActuator, actuatorOptions={topic=/naoqi_tts_feedback}, interfaceClass=interface de.unibi.citec.clf.bonsai.actuators.SpeechActuator, key=SpeechActuator]
14:14:31 TRACE RosFactory: actuator class: class de.unibi.citec.clf.bonsai.ros.actuators.RosEnableGoogleSpeechRecAndSimpleNPLActuator
14:14:31 TRACE RosFactory: actuator needs: class de.unibi.citec.clf.bonsai.ros.actuators.RosNaoQiSpeechActuator
14:14:31 TRACE RosFactory: actuator class == false
14:14:31 TRACE RosFactory: actuator impl false
14:14:31 DEBUG RosFactory: Checking if class class de.unibi.citec.clf.bonsai.ros.actuators.RosTrackingActuator satifies actuator ActuatorToConfigure [actuatorClass=class de.unibi.citec.clf.bonsai.ros.actuators.RosNaoQiSpeechActuator, actuatorOptions={topic=/naoqi_tts_feedback}, interfaceClass=interface de.unibi.citec.clf.bonsai.actuators.SpeechActuator, key=SpeechActuator]
14:14:31 DEBUG RosFactory: Actuator class class de.unibi.citec.clf.bonsai.ros.actuators.RosTrackingActuator does not satify actuator ActuatorToConfigure [actuatorClass=class de.unibi.citec.clf.bonsai.ros.actuators.RosNaoQiSpeechActuator, actuatorOptions={topic=/naoqi_tts_feedback}, interfaceClass=interface de.unibi.citec.clf.bonsai.actuators.SpeechActuator, key=SpeechActuator]
14:14:31 TRACE RosFactory: actuator class: class de.unibi.citec.clf.bonsai.ros.actuators.RosTrackingActuator
14:14:31 TRACE RosFactory: actuator needs: class de.unibi.citec.clf.bonsai.ros.actuators.RosNaoQiSpeechActuator
14:14:31 TRACE RosFactory: actuator class == false
14:14:31 TRACE RosFactory: actuator impl false
14:14:31 DEBUG RosFactory: Checking if class class de.unibi.citec.clf.bonsai.ros.actuators.RosGazeActuator satifies actuator ActuatorToConfigure [actuatorClass=class de.unibi.citec.clf.bonsai.ros.actuators.RosNaoQiSpeechActuator, actuatorOptions={topic=/naoqi_tts_feedback}, interfaceClass=interface de.unibi.citec.clf.bonsai.actuators.SpeechActuator, key=SpeechActuator]
14:14:31 DEBUG RosFactory: Actuator class class de.unibi.citec.clf.bonsai.ros.actuators.RosGazeActuator does not satify actuator ActuatorToConfigure [actuatorClass=class de.unibi.citec.clf.bonsai.ros.actuators.RosNaoQiSpeechActuator, actuatorOptions={topic=/naoqi_tts_feedback}, interfaceClass=interface de.unibi.citec.clf.bonsai.actuators.SpeechActuator, key=SpeechActuator]
14:14:31 TRACE RosFactory: actuator class: class de.unibi.citec.clf.bonsai.ros.actuators.RosGazeActuator
14:14:31 TRACE RosFactory: actuator needs: class de.unibi.citec.clf.bonsai.ros.actuators.RosNaoQiSpeechActuator
14:14:31 TRACE RosFactory: actuator class == false
14:14:31 TRACE RosFactory: actuator impl false
14:14:31 DEBUG RosFactory: Checking if class class de.unibi.citec.clf.bonsai.ros.actuators.RosDetectPlanesActuator satifies actuator ActuatorToConfigure [actuatorClass=class de.unibi.citec.clf.bonsai.ros.actuators.RosNaoQiSpeechActuator, actuatorOptions={topic=/naoqi_tts_feedback}, interfaceClass=interface de.unibi.citec.clf.bonsai.actuators.SpeechActuator, key=SpeechActuator]
14:14:31 DEBUG RosFactory: Actuator class class de.unibi.citec.clf.bonsai.ros.actuators.RosDetectPlanesActuator does not satify actuator ActuatorToConfigure [actuatorClass=class de.unibi.citec.clf.bonsai.ros.actuators.RosNaoQiSpeechActuator, actuatorOptions={topic=/naoqi_tts_feedback}, interfaceClass=interface de.unibi.citec.clf.bonsai.actuators.SpeechActuator, key=SpeechActuator]
14:14:31 TRACE RosFactory: actuator class: class de.unibi.citec.clf.bonsai.ros.actuators.RosDetectPlanesActuator
14:14:31 TRACE RosFactory: actuator needs: class de.unibi.citec.clf.bonsai.ros.actuators.RosNaoQiSpeechActuator
14:14:31 TRACE RosFactory: actuator class == false
14:14:31 TRACE RosFactory: actuator impl false
14:14:31 DEBUG RosFactory: Checking if class class de.unibi.citec.clf.bonsai.ros.actuators.RosGetCrowdAttributesActuator satifies actuator ActuatorToConfigure [actuatorClass=class de.unibi.citec.clf.bonsai.ros.actuators.RosNaoQiSpeechActuator, actuatorOptions={topic=/naoqi_tts_feedback}, interfaceClass=interface de.unibi.citec.clf.bonsai.actuators.SpeechActuator, key=SpeechActuator]
14:14:31 DEBUG RosFactory: Actuator class class de.unibi.citec.clf.bonsai.ros.actuators.RosGetCrowdAttributesActuator does not satify actuator ActuatorToConfigure [actuatorClass=class de.unibi.citec.clf.bonsai.ros.actuators.RosNaoQiSpeechActuator, actuatorOptions={topic=/naoqi_tts_feedback}, interfaceClass=interface de.unibi.citec.clf.bonsai.actuators.SpeechActuator, key=SpeechActuator]
14:14:31 TRACE RosFactory: actuator class: class de.unibi.citec.clf.bonsai.ros.actuators.RosGetCrowdAttributesActuator
14:14:31 TRACE RosFactory: actuator needs: class de.unibi.citec.clf.bonsai.ros.actuators.RosNaoQiSpeechActuator
14:14:31 TRACE RosFactory: actuator class == false
14:14:31 TRACE RosFactory: actuator impl false
14:14:31 DEBUG RosFactory: Checking if class class de.unibi.citec.clf.bonsai.ros.actuators.RosLanguageActuator satifies actuator ActuatorToConfigure [actuatorClass=class de.unibi.citec.clf.bonsai.ros.actuators.RosNaoQiSpeechActuator, actuatorOptions={topic=/naoqi_tts_feedback}, interfaceClass=interface de.unibi.citec.clf.bonsai.actuators.SpeechActuator, key=SpeechActuator]
14:14:31 DEBUG RosFactory: Actuator class class de.unibi.citec.clf.bonsai.ros.actuators.RosLanguageActuator does not satify actuator ActuatorToConfigure [actuatorClass=class de.unibi.citec.clf.bonsai.ros.actuators.RosNaoQiSpeechActuator, actuatorOptions={topic=/naoqi_tts_feedback}, interfaceClass=interface de.unibi.citec.clf.bonsai.actuators.SpeechActuator, key=SpeechActuator]
14:14:31 TRACE RosFactory: actuator class: class de.unibi.citec.clf.bonsai.ros.actuators.RosLanguageActuator
14:14:31 TRACE RosFactory: actuator needs: class de.unibi.citec.clf.bonsai.ros.actuators.RosNaoQiSpeechActuator
14:14:31 TRACE RosFactory: actuator class == false
14:14:31 TRACE RosFactory: actuator impl false
14:14:31 DEBUG RosFactory: Checking if class class de.unibi.citec.clf.bonsai.ros.actuators.RosGetPersonAttributesActuator satifies actuator ActuatorToConfigure [actuatorClass=class de.unibi.citec.clf.bonsai.ros.actuators.RosNaoQiSpeechActuator, actuatorOptions={topic=/naoqi_tts_feedback}, interfaceClass=interface de.unibi.citec.clf.bonsai.actuators.SpeechActuator, key=SpeechActuator]
14:14:31 DEBUG RosFactory: Actuator class class de.unibi.citec.clf.bonsai.ros.actuators.RosGetPersonAttributesActuator does not satify actuator ActuatorToConfigure [actuatorClass=class de.unibi.citec.clf.bonsai.ros.actuators.RosNaoQiSpeechActuator, actuatorOptions={topic=/naoqi_tts_feedback}, interfaceClass=interface de.unibi.citec.clf.bonsai.actuators.SpeechActuator, key=SpeechActuator]
14:14:31 TRACE RosFactory: actuator class: class de.unibi.citec.clf.bonsai.ros.actuators.RosGetPersonAttributesActuator
14:14:31 TRACE RosFactory: actuator needs: class de.unibi.citec.clf.bonsai.ros.actuators.RosNaoQiSpeechActuator
14:14:31 TRACE RosFactory: actuator class == false
14:14:31 TRACE RosFactory: actuator impl false
14:14:31 DEBUG RosFactory: Checking if class class de.unibi.citec.clf.bonsai.ros.actuators.RosMoveBaseNavigationActuator satifies actuator ActuatorToConfigure [actuatorClass=class de.unibi.citec.clf.bonsai.ros.actuators.RosNaoQiSpeechActuator, actuatorOptions={topic=/naoqi_tts_feedback}, interfaceClass=interface de.unibi.citec.clf.bonsai.actuators.SpeechActuator, key=SpeechActuator]
14:14:31 DEBUG RosFactory: Actuator class class de.unibi.citec.clf.bonsai.ros.actuators.RosMoveBaseNavigationActuator does not satify actuator ActuatorToConfigure [actuatorClass=class de.unibi.citec.clf.bonsai.ros.actuators.RosNaoQiSpeechActuator, actuatorOptions={topic=/naoqi_tts_feedback}, interfaceClass=interface de.unibi.citec.clf.bonsai.actuators.SpeechActuator, key=SpeechActuator]
14:14:31 TRACE RosFactory: actuator class: class de.unibi.citec.clf.bonsai.ros.actuators.RosMoveBaseNavigationActuator
14:14:31 TRACE RosFactory: actuator needs: class de.unibi.citec.clf.bonsai.ros.actuators.RosNaoQiSpeechActuator
14:14:31 TRACE RosFactory: actuator class == false
14:14:31 TRACE RosFactory: actuator impl false
14:14:31 DEBUG RosFactory: Checking if class class de.unibi.citec.clf.bonsai.ros.actuators.RosRecognizeObjectsActuator satifies actuator ActuatorToConfigure [actuatorClass=class de.unibi.citec.clf.bonsai.ros.actuators.RosNaoQiSpeechActuator, actuatorOptions={topic=/naoqi_tts_feedback}, interfaceClass=interface de.unibi.citec.clf.bonsai.actuators.SpeechActuator, key=SpeechActuator]
14:14:31 DEBUG RosFactory: Actuator class class de.unibi.citec.clf.bonsai.ros.actuators.RosRecognizeObjectsActuator does not satify actuator ActuatorToConfigure [actuatorClass=class de.unibi.citec.clf.bonsai.ros.actuators.RosNaoQiSpeechActuator, actuatorOptions={topic=/naoqi_tts_feedback}, interfaceClass=interface de.unibi.citec.clf.bonsai.actuators.SpeechActuator, key=SpeechActuator]
14:14:31 TRACE RosFactory: actuator class: class de.unibi.citec.clf.bonsai.ros.actuators.RosRecognizeObjectsActuator
14:14:31 TRACE RosFactory: actuator needs: class de.unibi.citec.clf.bonsai.ros.actuators.RosNaoQiSpeechActuator
14:14:31 TRACE RosFactory: actuator class == false
14:14:31 TRACE RosFactory: actuator impl false
14:14:31 DEBUG RosFactory: Checking if class class de.unibi.citec.clf.bonsai.ros.actuators.RosNLPActuator satifies actuator ActuatorToConfigure [actuatorClass=class de.unibi.citec.clf.bonsai.ros.actuators.RosNaoQiSpeechActuator, actuatorOptions={topic=/naoqi_tts_feedback}, interfaceClass=interface de.unibi.citec.clf.bonsai.actuators.SpeechActuator, key=SpeechActuator]
14:14:31 DEBUG RosFactory: Actuator class class de.unibi.citec.clf.bonsai.ros.actuators.RosNLPActuator does not satify actuator ActuatorToConfigure [actuatorClass=class de.unibi.citec.clf.bonsai.ros.actuators.RosNaoQiSpeechActuator, actuatorOptions={topic=/naoqi_tts_feedback}, interfaceClass=interface de.unibi.citec.clf.bonsai.actuators.SpeechActuator, key=SpeechActuator]
14:14:31 TRACE RosFactory: actuator class: class de.unibi.citec.clf.bonsai.ros.actuators.RosNLPActuator
14:14:31 TRACE RosFactory: actuator needs: class de.unibi.citec.clf.bonsai.ros.actuators.RosNaoQiSpeechActuator
14:14:31 TRACE RosFactory: actuator class == false
14:14:31 TRACE RosFactory: actuator impl false
14:14:31 DEBUG RosFactory: Checking if class class de.unibi.citec.clf.bonsai.ros.actuators.RosPicknPlaceActuator satifies actuator ActuatorToConfigure [actuatorClass=class de.unibi.citec.clf.bonsai.ros.actuators.RosNaoQiSpeechActuator, actuatorOptions={topic=/naoqi_tts_feedback}, interfaceClass=interface de.unibi.citec.clf.bonsai.actuators.SpeechActuator, key=SpeechActuator]
14:14:31 DEBUG RosFactory: Actuator class class de.unibi.citec.clf.bonsai.ros.actuators.RosPicknPlaceActuator does not satify actuator ActuatorToConfigure [actuatorClass=class de.unibi.citec.clf.bonsai.ros.actuators.RosNaoQiSpeechActuator, actuatorOptions={topic=/naoqi_tts_feedback}, interfaceClass=interface de.unibi.citec.clf.bonsai.actuators.SpeechActuator, key=SpeechActuator]
14:14:31 TRACE RosFactory: actuator class: class de.unibi.citec.clf.bonsai.ros.actuators.RosPicknPlaceActuator
14:14:31 TRACE RosFactory: actuator needs: class de.unibi.citec.clf.bonsai.ros.actuators.RosNaoQiSpeechActuator
14:14:31 TRACE RosFactory: actuator class == false
14:14:31 TRACE RosFactory: actuator impl false
14:14:31 DEBUG RosFactory: Checking if class class de.unibi.citec.clf.bonsai.ros.actuators.RosNaoQiSpeechActuator satifies actuator ActuatorToConfigure [actuatorClass=class de.unibi.citec.clf.bonsai.ros.actuators.RosNaoQiSpeechActuator, actuatorOptions={topic=/naoqi_tts_feedback}, interfaceClass=interface de.unibi.citec.clf.bonsai.actuators.SpeechActuator, key=SpeechActuator]
14:14:31 DEBUG RosFactory: Actuator class class de.unibi.citec.clf.bonsai.ros.actuators.RosNaoQiSpeechActuator satisfies actuator ActuatorToConfigure [actuatorClass=class de.unibi.citec.clf.bonsai.ros.actuators.RosNaoQiSpeechActuator, actuatorOptions={topic=/naoqi_tts_feedback}, interfaceClass=interface de.unibi.citec.clf.bonsai.actuators.SpeechActuator, key=SpeechActuator]
14:14:31 DEBUG RosFactory: Processing actuator to configure: ActuatorToConfigure [actuatorClass=class de.unibi.citec.clf.bonsai.ros.actuators.RosNaoQiSSLActuator, actuatorOptions={topic=/pepper_ssl_service}, interfaceClass=interface de.unibi.citec.clf.bonsai.actuators.SSLActuator, key=SSLActuator]
14:14:31 DEBUG RosFactory: Checking if class class de.unibi.citec.clf.bonsai.ros.actuators.RosNaoQiSSLActuator satifies actuator ActuatorToConfigure [actuatorClass=class de.unibi.citec.clf.bonsai.ros.actuators.RosNaoQiSSLActuator, actuatorOptions={topic=/pepper_ssl_service}, interfaceClass=interface de.unibi.citec.clf.bonsai.actuators.SSLActuator, key=SSLActuator]
14:14:31 DEBUG RosFactory: Actuator class class de.unibi.citec.clf.bonsai.ros.actuators.RosNaoQiSSLActuator satisfies actuator ActuatorToConfigure [actuatorClass=class de.unibi.citec.clf.bonsai.ros.actuators.RosNaoQiSSLActuator, actuatorOptions={topic=/pepper_ssl_service}, interfaceClass=interface de.unibi.citec.clf.bonsai.actuators.SSLActuator, key=SSLActuator]
14:14:31 INFO  BonsaiManager: Building map of initialized actuators
14:14:31 DEBUG BonsaiManager:    factory = de.unibi.citec.clf.bonsai.ros.RosFactory@6502105e
14:14:31 DEBUG BonsaiManager:       actuator = ActuatorToConfigure [actuatorClass=class de.unibi.citec.clf.bonsai.ros.actuators.ClfMoveBaseNavigationActuator, actuatorOptions={makePlanTopic=/move_base/NavfnROS/make_plan, topic=/move_base, costmapTopic=/move_base/clear_costmaps, driveDirectTopic=/pepper_robot/drivedirect}, interfaceClass=interface de.unibi.citec.clf.bonsai.actuators.NavigationActuator, key=NavigationActuator]
14:14:31 DEBUG BonsaiManager:       actuator = ActuatorToConfigure [actuatorClass=class de.unibi.citec.clf.bonsai.ros.actuators.RosNaoQiPostureActuator, actuatorOptions={topic=/pepper_robot/motion_control/animation_player}, interfaceClass=interface de.unibi.citec.clf.bonsai.actuators.PostureActuator, key=PostureActuator]
14:14:31 DEBUG BonsaiManager:       actuator = ActuatorToConfigure [actuatorClass=class de.unibi.citec.clf.bonsai.ros.actuators.RosGazeActuator, actuatorOptions={actionTopic=/pepper_robot/motion_control/trajectory_action, minPitch=-0.7068, maxYaw=2.0857, maxPitch=0.6371, minYaw=-2.0857, topic=/pepper_robot/motion_control/set_joint_angles}, interfaceClass=interface de.unibi.citec.clf.bonsai.actuators.GazeActuator, key=GazeActuator]
14:14:31 DEBUG BonsaiManager:       actuator = ActuatorToConfigure [actuatorClass=class de.unibi.citec.clf.bonsai.ros.actuators.RosDetectPeopleActuator, actuatorOptions={followRoiTopic=/open_pose/shirt_roi, topic=/open_pose/get_crowd_attributes}, interfaceClass=interface de.unibi.citec.clf.bonsai.actuators.DetectPeopleActuator, key=PeopleActuator]
14:14:31 DEBUG BonsaiManager:       actuator = ActuatorToConfigure [actuatorClass=class de.unibi.citec.clf.bonsai.ros.actuators.RosKBaseActuator, actuatorOptions={queryTopic=/KBase/query, dataTopic=/KBase/data}, interfaceClass=interface de.unibi.citec.clf.bonsai.actuators.KBaseActuator, key=KBaseActuator]
14:14:31 DEBUG BonsaiManager:       actuator = ActuatorToConfigure [actuatorClass=class de.unibi.citec.clf.bonsai.ros.actuators.RosNaoQiSpeechActuator, actuatorOptions={topic=/naoqi_tts_feedback}, interfaceClass=interface de.unibi.citec.clf.bonsai.actuators.SpeechActuator, key=SpeechActuator]
14:14:31 DEBUG BonsaiManager:       actuator = ActuatorToConfigure [actuatorClass=class de.unibi.citec.clf.bonsai.ros.actuators.RosNaoQiSSLActuator, actuatorOptions={topic=/pepper_ssl_service}, interfaceClass=interface de.unibi.citec.clf.bonsai.actuators.SSLActuator, key=SSLActuator]
14:14:31 INFO  BonsaiManager: trigger object creation
14:14:31 DEBUG RosFactory: running node on: vanadium , master: http://pepper-robot:11311
14:14:31 DEBUG RosFactory: /bonsai/ros/Transformer, should be started
14:14:31 TRACE RosFactory: create sensor for: class de.unibi.citec.clf.bonsai.ros.sensors.RosBtlMsgSensor
14:14:31 DEBUG RosFactory: running node on: vanadium , master: http://pepper-robot:11311
14:14:31 TRACE RosFactory: create actuator: class de.unibi.citec.clf.bonsai.ros.actuators.ClfMoveBaseNavigationActuator
14:14:31 DEBUG RosFactory: running node on: vanadium , master: http://pepper-robot:11311
14:14:31 TRACE RosFactory: create actuator: class de.unibi.citec.clf.bonsai.ros.actuators.RosGazeActuator
14:14:31 TRACE RosFactory: create actuator: class de.unibi.citec.clf.bonsai.ros.actuators.RosNaoQiSpeechActuator
14:14:31 DEBUG RosFactory: running node on: vanadium , master: http://pepper-robot:11311
14:14:31 TRACE RosFactory: create actuator: class de.unibi.citec.clf.bonsai.ros.actuators.RosNaoQiPostureActuator
14:14:31 DEBUG RosFactory: /bonsai/ros/PositionSensor, should be started
14:14:31 DEBUG RosFactory: running node on: vanadium , master: http://pepper-robot:11311
14:14:31 DEBUG RosFactory: /bonsai/ros/NavigationActuator, should be started
14:14:31 DEBUG RosFactory: /bonsai/ros/PostureActuator, should be started
14:14:31 DEBUG RosFactory: running node on: vanadium , master: http://pepper-robot:11311
14:14:31 DEBUG RosFactory: /bonsai/ros/GazeActuator, should be started
14:14:31 TRACE RosFactory: create sensor for: class de.unibi.citec.clf.bonsai.ros.sensors.RosBtlMsgSensor
14:14:31 DEBUG RosFactory: running node on: vanadium , master: http://pepper-robot:11311
14:14:31 TRACE RosFactory: create actuator: class de.unibi.citec.clf.bonsai.ros.actuators.RosNaoQiSSLActuator
14:14:31 DEBUG RosFactory: running node on: vanadium , master: http://pepper-robot:11311
14:14:31 DEBUG RosFactory: /bonsai/ros/SpeechActuator, should be started
14:14:31 TRACE RosFactory: create actuator: class de.unibi.citec.clf.bonsai.ros.actuators.RosDetectPeopleActuator
14:14:31 DEBUG RosFactory: running node on: vanadium , master: http://pepper-robot:11311
14:14:31 DEBUG RosFactory: /bonsai/ros/PeopleActuator, should be started
14:14:31 TRACE RosFactory: create actuator: class de.unibi.citec.clf.bonsai.ros.actuators.RosKBaseActuator
14:14:31 DEBUG RosFactory: running node on: vanadium , master: http://pepper-robot:11311
14:14:31 DEBUG RosFactory: /bonsai/ros/SSLActuator, should be started
14:14:31 DEBUG RosFactory: /bonsai/ros/SpeechSensor, should be started
14:14:31 DEBUG RosFactory: /bonsai/ros/KBaseActuator, should be started
14:14:31 DEBUG RosNaoQiPostureActuator: on start, RosNaoQiSSLActuator done
14:14:31 DEBUG RosBtlMsgSensor: connecting RosBtlMsgSensor ...
14:14:31 INFO  RosBtlMsgSensor: subscribed to: /amcl_pose (geometry_msgs/PoseWithCovarianceStamped)
14:14:31 DEBUG RosBtlMsgSensor: connecting RosBtlMsgSensor ...
14:14:31 INFO  RosBtlMsgSensor: subscribed to: /speechrec/psa/speechRecognition (std_msgs/String)
14:14:31 WARN  RosBtlMsgSensor: sensor is latched:false but keepLast option is:true
14:14:31 FATAL RosGazeActuator: on start, RosGazeActuator done
14:14:31 DEBUG RosNaoQiSpeechActuator: >>> waiting for TTS-Action server...
14:14:31 DEBUG RosKBaseActuator: on start, RosKBaseActuator done
14:14:31 DEBUG RosNaoQiSSLActuator: on start, RosNaoQiSSLActuator done
14:14:32 DEBUG RosNaoQiSpeechActuator: >>> TTS-Action server found! sending action goal
14:14:32 DEBUG RosNaoQiSpeechActuator: on start, RosNaoQiSpeechActuator done
14:14:32 DEBUG ClfMoveBaseNavigationActuator: on start, RosMoveBaseNav done
14:14:33 DEBUG RosDetectPeopleActuator: ACTION SERVER AVAILABLE: false
14:14:34 DEBUG RosFactory: Sleep additional 2sec
14:14:36 DEBUG RosFactory: all nodes should be started now
14:14:36 DEBUG BonsaiManager: Checking if an sensor of key 'PositionSensor' can be created with interface class class de.unibi.citec.clf.btl.data.navigation.PositionData
14:14:36 DEBUG BonsaiManager: Can create sensor.
14:14:36 DEBUG BonsaiManager: Checking if an sensor of key 'SpeechSensor' can be created with interface class class de.unibi.citec.clf.btl.data.speechrec.Utterance
14:14:36 DEBUG BonsaiManager: Can create sensor.
14:14:36 DEBUG BonsaiManager: Checking if an actuator of key 'NavigationActuator' can be created with interface class interface de.unibi.citec.clf.bonsai.actuators.NavigationActuator
14:14:36 DEBUG BonsaiManager: Can create actuator.
14:14:36 DEBUG BonsaiManager: Checking if an actuator of key 'PostureActuator' can be created with interface class interface de.unibi.citec.clf.bonsai.actuators.PostureActuator
14:14:36 DEBUG BonsaiManager: Can create actuator.
14:14:36 DEBUG BonsaiManager: Checking if an actuator of key 'SSLActuator' can be created with interface class interface de.unibi.citec.clf.bonsai.actuators.SSLActuator
14:14:36 DEBUG BonsaiManager: Can create actuator.
14:14:36 DEBUG BonsaiManager: Checking if an actuator of key 'GazeActuator' can be created with interface class interface de.unibi.citec.clf.bonsai.actuators.GazeActuator
14:14:36 DEBUG BonsaiManager: Can create actuator.
14:14:36 DEBUG BonsaiManager: Checking if an actuator of key 'SpeechActuator' can be created with interface class interface de.unibi.citec.clf.bonsai.actuators.SpeechActuator
14:14:36 DEBUG BonsaiManager: Can create actuator.
14:14:36 DEBUG BonsaiManager: Checking if an actuator of key 'PeopleActuator' can be created with interface class interface de.unibi.citec.clf.bonsai.actuators.DetectPeopleActuator
14:14:36 DEBUG BonsaiManager: Can create actuator.
14:14:36 DEBUG BonsaiManager: Checking if an actuator of key 'KBaseActuator' can be created with interface class interface de.unibi.citec.clf.bonsai.actuators.KBaseActuator
14:14:36 DEBUG BonsaiManager: Can create actuator.
14:14:36 DEBUG BonsaiManager: Checking if an working memory of key 'WorkingMemory' can be created.
14:14:36 DEBUG BonsaiManager: Can create working memory.
14:14:36 DEBUG SkillStateMachine: 
#########RESULTS:#########

14:14:36 DEBUG SkillStateMachine: 
14:14:36 INFO  SCXMLOverviewController: loading finished without error
setNewStateList
14:15:38 FATAL SCXMLOverviewController: start
14:15:38 INFO  SCXMLOverviewController: enable automatic events
14:15:38 INFO  SkillStateMachine: 
#######################
STARTING STATE MACHINE
#######################

14:15:38 DEBUG SkillStateMachine: #OnEntry: bmbgame
14:15:38 DEBUG SkillStateMachine: #OnEntry: bmb
14:15:38 INFO  SkillStateMachine: ## ASSIGN ## Name:SENSOR Expr:'SpeechSensor'
14:15:38 INFO  SkillStateMachine: ## ASSIGN ## Name:TURN_TO_SOURCE Expr:'true'
14:15:38 INFO  SkillStateMachine: ## ASSIGN ## Name:questionsAskedBmb Expr:questionsAsked+1
14:15:38 INFO  SkillStateMachine: ## ASSIGN ## Name:exitWoGNT Expr:'true'
14:15:38 DEBUG SkillStateMachine: #OnEntry: tasks.speechrec.PepperGetSourceAndGNT#bmb
14:15:38 INFO  SkillStateMachine: data id:#_SENSOR with expr='@SENSOR'changed to:SpeechSensor
14:15:38 INFO  SkillStateMachine: data id:#_TURN_TO_SOURCE with expr='@TURN_TO_SOURCE'changed to:true
14:15:38 INFO  SkillStateMachine: data id:#_TIMEOUT with expr='@TIMEOUT'changed to:-1
14:15:38 INFO  SkillStateMachine: data id:#_ALLOW_EXITING_WITHOUT_GNT with expr='@exitWoGNT'changed to:true
14:15:38 INFO  SkillStateMachine: ##INVOKE   PepperGetSourceAndGNT#bmb
14:15:38 DEBUG SkillConfigurator: request bool #_TURN_TO_SOURCE default:true
14:15:38 DEBUG SkillConfigurator: request value #_SENSOR
14:15:38 DEBUG PepperGetSourceAndGNT: wait for nt using speech sensor:SpeechSensor
14:15:38 DEBUG SkillConfigurator: request INT #_TIMEOUT default:-1
14:15:38 DEBUG SkillConfigurator: request double #_MAX_DISTANCE default:2.0
14:15:38 DEBUG SkillConfigurator: request value #_NONTERMINALS
14:15:38 DEBUG SkillConfigurator: request bool #_DISABLE_CONCAT_UNDERSCORE default:false
14:15:38 DEBUG SkillConfigurator: request value #_NONTERMINALS_TO_CONFIRM default:#N/A#
14:15:38 DEBUG SkillConfigurator: request value #_TEXT default:#N/A#
14:15:38 DEBUG SkillConfigurator: request bool #_ALLOW_EXITING_WITHOUT_GNT default:false
14:15:38 DEBUG SkillRunner:   PepperGetSourceAndGNT#bmb -> invoke configure().
14:15:38 DEBUG PepperGetSourceAndGNT: wait for nt using speech sensor:SpeechSensor
14:15:38 INFO  BonsaiManager: Creating a sensor instance with key 'SpeechSensor' and dataType 'class de.unibi.citec.clf.btl.data.speechrec.Utterance'
14:15:38 TRACE RosFactory: create sensor for: class de.unibi.citec.clf.btl.data.speechrec.Utterance
14:15:38 INFO  BonsaiManager: Creating an actuator instance with key 'SpeechActuator' and type 'interface de.unibi.citec.clf.bonsai.actuators.SpeechActuator'
14:15:38 TRACE RosFactory: create actuator: interface de.unibi.citec.clf.bonsai.actuators.SpeechActuator
14:15:38 INFO  BonsaiManager: Creating an actuator instance with key 'SSLActuator' and type 'interface de.unibi.citec.clf.bonsai.actuators.SSLActuator'
14:15:38 TRACE RosFactory: create actuator: interface de.unibi.citec.clf.bonsai.actuators.SSLActuator
14:15:38 INFO  BonsaiManager: Creating an working memory instance with key 'WorkingMemory'
14:15:38 DEBUG MemoryFactory: create new Memory
14:15:38 DEBUG DefaultMemory: getSlot /behaviors/answerQuestion/nav[class de.unibi.citec.clf.btl.data.navigation.NavigationGoalData]
14:15:38 DEBUG DefaultMemory: create new slot
14:15:38 DEBUG FXGUI: statemachine started
14:15:38 INFO  BonsaiManager: Creating an working memory instance with key 'WorkingMemory'
14:15:38 DEBUG DefaultMemory: getSlot /behaviors/answerQuestion/tree[class de.unibi.citec.clf.btl.data.speechrec.GrammarTree]
14:15:38 DEBUG DefaultMemory: create new slot
14:15:38 DEBUG SkillRunner:   PepperGetSourceAndGNT#bmb -> invoke init()
14:15:38 DEBUG SimpleSpeechHelper: start listening
14:15:38 DEBUG SkillRunner:   PepperGetSourceAndGNT#bmb -> init() returned: true
14:15:38 DEBUG SkillRunner:   PepperGetSourceAndGNT#bmb -> invoke execute()
14:15:42 DEBUG SimpleSpeechHelper: got new data: 
14:15:42 DEBUG SimpleSpeechHelper: is valid: false
14:15:42 DEBUG PepperGetSourceAndGNT: num of Utterances: 1
14:15:42 DEBUG PepperGetSourceAndGNT: understanding is null
14:15:42 DEBUG PepperGetSourceAndGNT: exit without GNT
14:15:42 DEBUG PepperGetSourceAndGNT: ######################## TRYING TO GET SSL IN LOOP #################
14:15:42 DEBUG PepperGetSourceAndGNT: ######################## SSL IS VALID #################
14:15:42 DEBUG SkillRunner:   PepperGetSourceAndGNT#bmb -> execute() returned: success
14:15:42 DEBUG SkillRunner:   PepperGetSourceAndGNT#bmb -> invoke end()
14:15:42 DEBUG ObjectSlot: memorized NavigationGoalData[ x:0.0 y:0.0 yaw:173.5 coordinateTolerance:25.0 yawTolerance:6.283185307179586 frame:map ]
14:15:42 DEBUG SkillRunner:   PepperGetSourceAndGNT#bmb -> end() returned: success
14:15:42 DEBUG SCXMLSkillRunner:   Fire event: PepperGetSourceAndGNT.success.exitWoGNT
14:15:42 DEBUG SkillStateMachine: FIRE SKILL Event: PepperGetSourceAndGNT.success.exitWoGNT
14:15:42 INFO  SkillStateMachine: #onTransition: "tasks.speechrec.PepperGetSourceAndGNT#bmb" --> "tasks.speechrec.PepperGetSourceAndGNT#bmb "event: "PepperGetSourceAndGNT.success.exitWoGNT"
14:15:42 INFO  SkillStateMachine: ## SEND ## Event:'bmb.again'
14:15:42 DEBUG SkillStateMachine: #OnExit: tasks.speechrec.PepperGetSourceAndGNT#bmb
14:15:42 DEBUG SkillStateMachine: #OnExit: bmb
14:15:42 INFO  SkillStateMachine: #onTransition: "bmb" --> "bmb "event: "bmb.again"
14:15:42 DEBUG SkillStateMachine: #OnEntry: bmb
14:15:42 INFO  SkillStateMachine: ## ASSIGN ## Name:SENSOR Expr:'SpeechSensor'
14:15:42 INFO  SkillStateMachine: ## ASSIGN ## Name:TURN_TO_SOURCE Expr:'true'
14:15:42 INFO  SkillStateMachine: ## ASSIGN ## Name:questionsAskedBmb Expr:questionsAsked+1
14:15:42 INFO  SkillStateMachine: ## ASSIGN ## Name:exitWoGNT Expr:'true'
14:15:42 DEBUG SkillStateMachine: #OnEntry: tasks.speechrec.PepperGetSourceAndGNT#bmb
14:15:42 INFO  SkillStateMachine: data id:#_SENSOR with expr='@SENSOR'changed to:SpeechSensor
14:15:42 INFO  SkillStateMachine: data id:#_TURN_TO_SOURCE with expr='@TURN_TO_SOURCE'changed to:true
14:15:42 INFO  SkillStateMachine: data id:#_TIMEOUT with expr='@TIMEOUT'changed to:-1
14:15:42 INFO  SkillStateMachine: data id:#_ALLOW_EXITING_WITHOUT_GNT with expr='@exitWoGNT'changed to:true
14:15:42 INFO  SkillStateMachine: ##INVOKE   PepperGetSourceAndGNT#bmb
14:15:42 DEBUG SkillConfigurator: request bool #_TURN_TO_SOURCE default:true
14:15:42 DEBUG SkillConfigurator: request value #_SENSOR
14:15:42 DEBUG PepperGetSourceAndGNT: wait for nt using speech sensor:SpeechSensor
14:15:42 DEBUG SkillConfigurator: request INT #_TIMEOUT default:-1
14:15:42 DEBUG SkillConfigurator: request double #_MAX_DISTANCE default:2.0
14:15:42 DEBUG SkillConfigurator: request value #_NONTERMINALS
14:15:42 DEBUG SkillConfigurator: request bool #_DISABLE_CONCAT_UNDERSCORE default:false
14:15:42 DEBUG SkillConfigurator: request value #_NONTERMINALS_TO_CONFIRM default:#N/A#
14:15:42 DEBUG SkillConfigurator: request value #_TEXT default:#N/A#
14:15:42 DEBUG SkillConfigurator: request bool #_ALLOW_EXITING_WITHOUT_GNT default:false
14:15:42 DEBUG SkillRunner:   PepperGetSourceAndGNT#bmb -> invoke configure().
14:15:42 DEBUG PepperGetSourceAndGNT: wait for nt using speech sensor:SpeechSensor
14:15:42 INFO  BonsaiManager: Creating a sensor instance with key 'SpeechSensor' and dataType 'class de.unibi.citec.clf.btl.data.speechrec.Utterance'
14:15:42 TRACE RosFactory: create sensor for: class de.unibi.citec.clf.btl.data.speechrec.Utterance
14:15:42 INFO  BonsaiManager: Creating an actuator instance with key 'SpeechActuator' and type 'interface de.unibi.citec.clf.bonsai.actuators.SpeechActuator'
14:15:42 TRACE RosFactory: create actuator: interface de.unibi.citec.clf.bonsai.actuators.SpeechActuator
14:15:42 INFO  BonsaiManager: Creating an actuator instance with key 'SSLActuator' and type 'interface de.unibi.citec.clf.bonsai.actuators.SSLActuator'
14:15:42 TRACE RosFactory: create actuator: interface de.unibi.citec.clf.bonsai.actuators.SSLActuator
14:15:42 INFO  BonsaiManager: Creating an working memory instance with key 'WorkingMemory'
14:15:42 DEBUG DefaultMemory: getSlot /behaviors/answerQuestion/nav[class de.unibi.citec.clf.btl.data.navigation.NavigationGoalData]
14:15:42 INFO  BonsaiManager: Creating an working memory instance with key 'WorkingMemory'
14:15:42 DEBUG DefaultMemory: getSlot /behaviors/answerQuestion/tree[class de.unibi.citec.clf.btl.data.speechrec.GrammarTree]
14:15:42 DEBUG SkillRunner:   PepperGetSourceAndGNT#bmb -> invoke init()
14:15:42 DEBUG SimpleSpeechHelper: start listening
14:15:42 DEBUG SkillRunner:   PepperGetSourceAndGNT#bmb -> init() returned: true
14:15:42 DEBUG SkillRunner:   PepperGetSourceAndGNT#bmb -> invoke execute()
14:15:46 DEBUG SimpleSpeechHelper: got new data: 
14:15:46 DEBUG SimpleSpeechHelper: is valid: true
14:15:46 DEBUG SimpleSpeechHelper: GrammarNonTerminal [name=, subsymbols=[GrammarNonTerminal [name=question, subsymbols=[GrammarNonTerminal [name=quest_predef, subsymbols=[GrammarNonTerminal [name=predef49, subsymbols=[UtterancePart [word=who is considered to be the first computer programmer]]]]]]]]]
14:15:46 DEBUG PepperGetSourceAndGNT: num of Utterances: 1
14:15:46 DEBUG PepperGetSourceAndGNT: undestanding is NOT null!!
14:15:46 DEBUG PepperGetSourceAndGNT: has New Understanding
14:15:46 DEBUG PepperGetSourceAndGNT: has enough trees
14:15:46 DEBUG PepperGetSourceAndGNT: ######################## TRYING TO GET SSL FOR UTTERANCE!!! #################
14:15:46 DEBUG PepperGetSourceAndGNT: ######################## UTTERANCE VALID!!! #################
14:15:46 DEBUG SkillRunner:   PepperGetSourceAndGNT#bmb -> execute() returned: success
14:15:46 DEBUG SkillRunner:   PepperGetSourceAndGNT#bmb -> invoke end()
14:15:46 DEBUG ObjectSlot: memorized NavigationGoalData[ x:0.0 y:0.0 yaw:167.53846153846155 coordinateTolerance:25.0 yawTolerance:6.283185307179586 frame:map ]
14:15:46 DEBUG ObjectSlot: memorized GrammarNonTerminal [name=, subsymbols=[GrammarNonTerminal [name=question, subsymbols=[GrammarNonTerminal [name=quest_predef, subsymbols=[GrammarNonTerminal [name=predef49, subsymbols=[UtterancePart [word=who is considered to be the first computer programmer]]]]]]]]]
14:15:46 DEBUG SkillRunner:   PepperGetSourceAndGNT#bmb -> end() returned: success
14:15:46 DEBUG SCXMLSkillRunner:   Fire event: PepperGetSourceAndGNT.success.question
14:15:46 DEBUG SkillStateMachine: FIRE SKILL Event: PepperGetSourceAndGNT.success.question
14:15:46 INFO  SkillStateMachine: #onTransition: "tasks.speechrec.PepperGetSourceAndGNT#bmb" --> "tasks.speechrec.PepperGetSourceAndGNT#bmb "event: "PepperGetSourceAndGNT.success.question"
14:15:46 INFO  SkillStateMachine: ## SEND ## Event:'bmb.success'
14:15:46 DEBUG SkillStateMachine: #OnExit: tasks.speechrec.PepperGetSourceAndGNT#bmb
14:15:46 DEBUG SkillStateMachine: #OnExit: bmb
14:15:46 INFO  SkillStateMachine: #onTransition: "bmb" --> "bmb "event: "bmb.success"
14:15:46 DEBUG SkillStateMachine: #OnEntry: bmb
14:15:46 INFO  SkillStateMachine: ## ASSIGN ## Name:SENSOR Expr:'SpeechSensor'
14:15:46 INFO  SkillStateMachine: ## ASSIGN ## Name:TURN_TO_SOURCE Expr:'true'
14:15:46 INFO  SkillStateMachine: ## ASSIGN ## Name:questionsAskedBmb Expr:questionsAsked+1
14:15:46 INFO  SkillStateMachine: ## ASSIGN ## Name:exitWoGNT Expr:'true'
14:15:46 DEBUG SkillStateMachine: #OnEntry: tasks.speechrec.PepperGetSourceAndGNT#bmb
14:15:46 INFO  SkillStateMachine: data id:#_SENSOR with expr='@SENSOR'changed to:SpeechSensor
14:15:46 INFO  SkillStateMachine: data id:#_TURN_TO_SOURCE with expr='@TURN_TO_SOURCE'changed to:true
14:15:46 INFO  SkillStateMachine: data id:#_TIMEOUT with expr='@TIMEOUT'changed to:-1
14:15:46 INFO  SkillStateMachine: data id:#_ALLOW_EXITING_WITHOUT_GNT with expr='@exitWoGNT'changed to:true
14:15:46 INFO  SkillStateMachine: ##INVOKE   PepperGetSourceAndGNT#bmb
14:15:46 DEBUG SkillConfigurator: request bool #_TURN_TO_SOURCE default:true
14:15:46 DEBUG SkillConfigurator: request value #_SENSOR
14:15:46 DEBUG PepperGetSourceAndGNT: wait for nt using speech sensor:SpeechSensor
14:15:46 DEBUG SkillConfigurator: request INT #_TIMEOUT default:-1
14:15:46 DEBUG SkillConfigurator: request double #_MAX_DISTANCE default:2.0
14:15:46 DEBUG SkillConfigurator: request value #_NONTERMINALS
14:15:46 DEBUG SkillConfigurator: request bool #_DISABLE_CONCAT_UNDERSCORE default:false
14:15:46 DEBUG SkillConfigurator: request value #_NONTERMINALS_TO_CONFIRM default:#N/A#
14:15:46 DEBUG SkillConfigurator: request value #_TEXT default:#N/A#
14:15:46 DEBUG SkillConfigurator: request bool #_ALLOW_EXITING_WITHOUT_GNT default:false
14:15:46 DEBUG SkillRunner:   PepperGetSourceAndGNT#bmb -> invoke configure().
14:15:46 DEBUG PepperGetSourceAndGNT: wait for nt using speech sensor:SpeechSensor
14:15:46 INFO  BonsaiManager: Creating a sensor instance with key 'SpeechSensor' and dataType 'class de.unibi.citec.clf.btl.data.speechrec.Utterance'
14:15:46 TRACE RosFactory: create sensor for: class de.unibi.citec.clf.btl.data.speechrec.Utterance
14:15:46 INFO  BonsaiManager: Creating an actuator instance with key 'SpeechActuator' and type 'interface de.unibi.citec.clf.bonsai.actuators.SpeechActuator'
14:15:46 TRACE RosFactory: create actuator: interface de.unibi.citec.clf.bonsai.actuators.SpeechActuator
14:15:46 INFO  BonsaiManager: Creating an actuator instance with key 'SSLActuator' and type 'interface de.unibi.citec.clf.bonsai.actuators.SSLActuator'
14:15:46 TRACE RosFactory: create actuator: interface de.unibi.citec.clf.bonsai.actuators.SSLActuator
14:15:46 INFO  BonsaiManager: Creating an working memory instance with key 'WorkingMemory'
14:15:46 DEBUG DefaultMemory: getSlot /behaviors/answerQuestion/nav[class de.unibi.citec.clf.btl.data.navigation.NavigationGoalData]
14:15:46 INFO  BonsaiManager: Creating an working memory instance with key 'WorkingMemory'
14:15:46 DEBUG DefaultMemory: getSlot /behaviors/answerQuestion/tree[class de.unibi.citec.clf.btl.data.speechrec.GrammarTree]
14:15:46 DEBUG SkillRunner:   PepperGetSourceAndGNT#bmb -> invoke init()
14:15:46 DEBUG SimpleSpeechHelper: start listening
14:15:46 DEBUG SkillRunner:   PepperGetSourceAndGNT#bmb -> init() returned: true
14:15:46 DEBUG SkillRunner:   PepperGetSourceAndGNT#bmb -> invoke execute()
14:15:51 DEBUG SimpleSpeechHelper: got new data: 
14:15:51 DEBUG SimpleSpeechHelper: is valid: true
14:15:51 DEBUG SimpleSpeechHelper: GrammarNonTerminal [name=, subsymbols=[GrammarNonTerminal [name=question, subsymbols=[GrammarNonTerminal [name=quest_predef, subsymbols=[GrammarNonTerminal [name=predef49, subsymbols=[UtterancePart [word=who is considered to be the first computer programmer]]]]]]]]]
14:15:51 DEBUG PepperGetSourceAndGNT: num of Utterances: 1
14:15:51 DEBUG PepperGetSourceAndGNT: undestanding is NOT null!!
14:15:51 DEBUG PepperGetSourceAndGNT: has New Understanding
14:15:51 DEBUG PepperGetSourceAndGNT: has enough trees
14:15:51 DEBUG PepperGetSourceAndGNT: ######################## TRYING TO GET SSL FOR UTTERANCE!!! #################
14:15:51 DEBUG PepperGetSourceAndGNT: ######################## UTTERANCE VALID!!! #################
14:15:51 DEBUG SkillRunner:   PepperGetSourceAndGNT#bmb -> execute() returned: success
14:15:51 DEBUG SkillRunner:   PepperGetSourceAndGNT#bmb -> invoke end()
14:15:51 DEBUG ObjectSlot: memorized NavigationGoalData[ x:0.0 y:0.0 yaw:199.07692307692307 coordinateTolerance:25.0 yawTolerance:6.283185307179586 frame:map ]
14:15:51 DEBUG ObjectSlot: memorized GrammarNonTerminal [name=, subsymbols=[GrammarNonTerminal [name=question, subsymbols=[GrammarNonTerminal [name=quest_predef, subsymbols=[GrammarNonTerminal [name=predef49, subsymbols=[UtterancePart [word=who is considered to be the first computer programmer]]]]]]]]]
14:15:51 DEBUG SkillRunner:   PepperGetSourceAndGNT#bmb -> end() returned: success
14:15:51 DEBUG SCXMLSkillRunner:   Fire event: PepperGetSourceAndGNT.success.question
14:15:51 DEBUG SkillStateMachine: FIRE SKILL Event: PepperGetSourceAndGNT.success.question
14:15:51 INFO  SkillStateMachine: #onTransition: "tasks.speechrec.PepperGetSourceAndGNT#bmb" --> "tasks.speechrec.PepperGetSourceAndGNT#bmb "event: "PepperGetSourceAndGNT.success.question"
14:15:51 INFO  SkillStateMachine: ## SEND ## Event:'bmb.success'
14:15:51 DEBUG SkillStateMachine: #OnExit: tasks.speechrec.PepperGetSourceAndGNT#bmb
14:15:51 DEBUG SkillStateMachine: #OnExit: bmb
14:15:51 INFO  SkillStateMachine: #onTransition: "bmb" --> "bmb "event: "bmb.success"
14:15:51 DEBUG SkillStateMachine: #OnEntry: bmb
14:15:51 INFO  SkillStateMachine: ## ASSIGN ## Name:SENSOR Expr:'SpeechSensor'
14:15:51 INFO  SkillStateMachine: ## ASSIGN ## Name:TURN_TO_SOURCE Expr:'true'
14:15:51 INFO  SkillStateMachine: ## ASSIGN ## Name:questionsAskedBmb Expr:questionsAsked+1
14:15:51 INFO  SkillStateMachine: ## ASSIGN ## Name:exitWoGNT Expr:'true'
14:15:51 DEBUG SkillStateMachine: #OnEntry: tasks.speechrec.PepperGetSourceAndGNT#bmb
14:15:51 INFO  SkillStateMachine: data id:#_SENSOR with expr='@SENSOR'changed to:SpeechSensor
14:15:51 INFO  SkillStateMachine: data id:#_TURN_TO_SOURCE with expr='@TURN_TO_SOURCE'changed to:true
14:15:51 INFO  SkillStateMachine: data id:#_TIMEOUT with expr='@TIMEOUT'changed to:-1
14:15:51 INFO  SkillStateMachine: data id:#_ALLOW_EXITING_WITHOUT_GNT with expr='@exitWoGNT'changed to:true
14:15:51 INFO  SkillStateMachine: ##INVOKE   PepperGetSourceAndGNT#bmb
14:15:51 DEBUG SkillConfigurator: request bool #_TURN_TO_SOURCE default:true
14:15:51 DEBUG SkillConfigurator: request value #_SENSOR
14:15:51 DEBUG PepperGetSourceAndGNT: wait for nt using speech sensor:SpeechSensor
14:15:51 DEBUG SkillConfigurator: request INT #_TIMEOUT default:-1
14:15:51 DEBUG SkillConfigurator: request double #_MAX_DISTANCE default:2.0
14:15:51 DEBUG SkillConfigurator: request value #_NONTERMINALS
14:15:51 DEBUG SkillConfigurator: request bool #_DISABLE_CONCAT_UNDERSCORE default:false
14:15:51 DEBUG SkillConfigurator: request value #_NONTERMINALS_TO_CONFIRM default:#N/A#
14:15:51 DEBUG SkillConfigurator: request value #_TEXT default:#N/A#
14:15:51 DEBUG SkillConfigurator: request bool #_ALLOW_EXITING_WITHOUT_GNT default:false
14:15:51 DEBUG SkillRunner:   PepperGetSourceAndGNT#bmb -> invoke configure().
14:15:51 DEBUG PepperGetSourceAndGNT: wait for nt using speech sensor:SpeechSensor
14:15:51 INFO  BonsaiManager: Creating a sensor instance with key 'SpeechSensor' and dataType 'class de.unibi.citec.clf.btl.data.speechrec.Utterance'
14:15:51 TRACE RosFactory: create sensor for: class de.unibi.citec.clf.btl.data.speechrec.Utterance
14:15:51 INFO  BonsaiManager: Creating an actuator instance with key 'SpeechActuator' and type 'interface de.unibi.citec.clf.bonsai.actuators.SpeechActuator'
14:15:51 TRACE RosFactory: create actuator: interface de.unibi.citec.clf.bonsai.actuators.SpeechActuator
14:15:51 INFO  BonsaiManager: Creating an actuator instance with key 'SSLActuator' and type 'interface de.unibi.citec.clf.bonsai.actuators.SSLActuator'
14:15:51 TRACE RosFactory: create actuator: interface de.unibi.citec.clf.bonsai.actuators.SSLActuator
14:15:51 INFO  BonsaiManager: Creating an working memory instance with key 'WorkingMemory'
14:15:51 DEBUG DefaultMemory: getSlot /behaviors/answerQuestion/nav[class de.unibi.citec.clf.btl.data.navigation.NavigationGoalData]
14:15:51 INFO  BonsaiManager: Creating an working memory instance with key 'WorkingMemory'
14:15:51 DEBUG DefaultMemory: getSlot /behaviors/answerQuestion/tree[class de.unibi.citec.clf.btl.data.speechrec.GrammarTree]
14:15:51 DEBUG SkillRunner:   PepperGetSourceAndGNT#bmb -> invoke init()
14:15:51 DEBUG SimpleSpeechHelper: start listening
14:15:51 DEBUG SkillRunner:   PepperGetSourceAndGNT#bmb -> init() returned: true
14:15:51 DEBUG SkillRunner:   PepperGetSourceAndGNT#bmb -> invoke execute()
14:15:54 DEBUG SimpleSpeechHelper: got new data: 
14:15:54 DEBUG SimpleSpeechHelper: is valid: false
14:15:54 DEBUG PepperGetSourceAndGNT: num of Utterances: 1
14:15:54 DEBUG PepperGetSourceAndGNT: understanding is null
14:15:54 DEBUG PepperGetSourceAndGNT: exit without GNT
14:15:54 DEBUG PepperGetSourceAndGNT: ######################## TRYING TO GET SSL IN LOOP #################
14:15:54 DEBUG PepperGetSourceAndGNT: ######################## SSL IS VALID #################
14:15:54 DEBUG SkillRunner:   PepperGetSourceAndGNT#bmb -> execute() returned: success
14:15:54 DEBUG SkillRunner:   PepperGetSourceAndGNT#bmb -> invoke end()
14:15:54 DEBUG ObjectSlot: memorized NavigationGoalData[ x:0.0 y:0.0 yaw:165.5 coordinateTolerance:25.0 yawTolerance:6.283185307179586 frame:map ]
14:15:54 DEBUG SkillRunner:   PepperGetSourceAndGNT#bmb -> end() returned: success
14:15:54 DEBUG SCXMLSkillRunner:   Fire event: PepperGetSourceAndGNT.success.exitWoGNT
14:15:54 DEBUG SkillStateMachine: FIRE SKILL Event: PepperGetSourceAndGNT.success.exitWoGNT
14:15:54 INFO  SkillStateMachine: #onTransition: "tasks.speechrec.PepperGetSourceAndGNT#bmb" --> "tasks.speechrec.PepperGetSourceAndGNT#bmb "event: "PepperGetSourceAndGNT.success.exitWoGNT"
14:15:54 INFO  SkillStateMachine: ## SEND ## Event:'bmb.again'
14:15:54 DEBUG SkillStateMachine: #OnExit: tasks.speechrec.PepperGetSourceAndGNT#bmb
14:15:54 DEBUG SkillStateMachine: #OnExit: bmb
14:15:54 INFO  SkillStateMachine: #onTransition: "bmb" --> "bmb "event: "bmb.again"
14:15:54 DEBUG SkillStateMachine: #OnEntry: bmb
14:15:54 INFO  SkillStateMachine: ## ASSIGN ## Name:SENSOR Expr:'SpeechSensor'
14:15:54 INFO  SkillStateMachine: ## ASSIGN ## Name:TURN_TO_SOURCE Expr:'true'
14:15:54 INFO  SkillStateMachine: ## ASSIGN ## Name:questionsAskedBmb Expr:questionsAsked+1
14:15:54 INFO  SkillStateMachine: ## ASSIGN ## Name:exitWoGNT Expr:'true'
14:15:54 DEBUG SkillStateMachine: #OnEntry: tasks.speechrec.PepperGetSourceAndGNT#bmb
14:15:54 INFO  SkillStateMachine: data id:#_SENSOR with expr='@SENSOR'changed to:SpeechSensor
14:15:54 INFO  SkillStateMachine: data id:#_TURN_TO_SOURCE with expr='@TURN_TO_SOURCE'changed to:true
14:15:54 INFO  SkillStateMachine: data id:#_TIMEOUT with expr='@TIMEOUT'changed to:-1
14:15:54 INFO  SkillStateMachine: data id:#_ALLOW_EXITING_WITHOUT_GNT with expr='@exitWoGNT'changed to:true
14:15:54 INFO  SkillStateMachine: ##INVOKE   PepperGetSourceAndGNT#bmb
14:15:54 DEBUG SkillConfigurator: request bool #_TURN_TO_SOURCE default:true
14:15:54 DEBUG SkillConfigurator: request value #_SENSOR
14:15:54 DEBUG PepperGetSourceAndGNT: wait for nt using speech sensor:SpeechSensor
14:15:54 DEBUG SkillConfigurator: request INT #_TIMEOUT default:-1
14:15:54 DEBUG SkillConfigurator: request double #_MAX_DISTANCE default:2.0
14:15:54 DEBUG SkillConfigurator: request value #_NONTERMINALS
14:15:54 DEBUG SkillConfigurator: request bool #_DISABLE_CONCAT_UNDERSCORE default:false
14:15:54 DEBUG SkillConfigurator: request value #_NONTERMINALS_TO_CONFIRM default:#N/A#
14:15:54 DEBUG SkillConfigurator: request value #_TEXT default:#N/A#
14:15:54 DEBUG SkillConfigurator: request bool #_ALLOW_EXITING_WITHOUT_GNT default:false
14:15:54 DEBUG SkillRunner:   PepperGetSourceAndGNT#bmb -> invoke configure().
14:15:54 DEBUG PepperGetSourceAndGNT: wait for nt using speech sensor:SpeechSensor
14:15:54 INFO  BonsaiManager: Creating a sensor instance with key 'SpeechSensor' and dataType 'class de.unibi.citec.clf.btl.data.speechrec.Utterance'
14:15:54 TRACE RosFactory: create sensor for: class de.unibi.citec.clf.btl.data.speechrec.Utterance
14:15:54 INFO  BonsaiManager: Creating an actuator instance with key 'SpeechActuator' and type 'interface de.unibi.citec.clf.bonsai.actuators.SpeechActuator'
14:15:54 TRACE RosFactory: create actuator: interface de.unibi.citec.clf.bonsai.actuators.SpeechActuator
14:15:54 INFO  BonsaiManager: Creating an actuator instance with key 'SSLActuator' and type 'interface de.unibi.citec.clf.bonsai.actuators.SSLActuator'
14:15:54 TRACE RosFactory: create actuator: interface de.unibi.citec.clf.bonsai.actuators.SSLActuator
14:15:54 INFO  BonsaiManager: Creating an working memory instance with key 'WorkingMemory'
14:15:54 DEBUG DefaultMemory: getSlot /behaviors/answerQuestion/nav[class de.unibi.citec.clf.btl.data.navigation.NavigationGoalData]
14:15:54 INFO  BonsaiManager: Creating an working memory instance with key 'WorkingMemory'
14:15:54 DEBUG DefaultMemory: getSlot /behaviors/answerQuestion/tree[class de.unibi.citec.clf.btl.data.speechrec.GrammarTree]
14:15:54 DEBUG SkillRunner:   PepperGetSourceAndGNT#bmb -> invoke init()
14:15:54 DEBUG SimpleSpeechHelper: start listening
14:15:54 DEBUG SkillRunner:   PepperGetSourceAndGNT#bmb -> init() returned: true
14:15:54 DEBUG SkillRunner:   PepperGetSourceAndGNT#bmb -> invoke execute()
14:15:57 DEBUG SimpleSpeechHelper: got new data: 
14:15:57 DEBUG SimpleSpeechHelper: is valid: true
14:15:57 DEBUG SimpleSpeechHelper: GrammarNonTerminal [name=, subsymbols=[GrammarNonTerminal [name=question, subsymbols=[GrammarNonTerminal [name=quest_obj, subsymbols=[GrammarNonTerminal [name=obj1, subsymbols=[UtterancePart [word=where can i find], UtterancePart [word=the], GrammarNonTerminal [name=object, subsymbols=[UtterancePart [word=orange]]]]]]]]]]]
14:15:57 DEBUG PepperGetSourceAndGNT: num of Utterances: 1
14:15:57 DEBUG PepperGetSourceAndGNT: undestanding is NOT null!!
14:15:57 DEBUG PepperGetSourceAndGNT: has New Understanding
14:15:57 DEBUG PepperGetSourceAndGNT: has enough trees
14:15:57 DEBUG PepperGetSourceAndGNT: ######################## TRYING TO GET SSL FOR UTTERANCE!!! #################
14:15:57 DEBUG PepperGetSourceAndGNT: ######################## UTTERANCE VALID!!! #################
14:15:57 DEBUG SkillRunner:   PepperGetSourceAndGNT#bmb -> execute() returned: success
14:15:57 DEBUG SkillRunner:   PepperGetSourceAndGNT#bmb -> invoke end()
14:15:57 DEBUG ObjectSlot: memorized NavigationGoalData[ x:0.0 y:0.0 yaw:184.85714285714286 coordinateTolerance:25.0 yawTolerance:6.283185307179586 frame:map ]
14:15:57 DEBUG ObjectSlot: memorized GrammarNonTerminal [name=, subsymbols=[GrammarNonTerminal [name=question, subsymbols=[GrammarNonTerminal [name=quest_obj, subsymbols=[GrammarNonTerminal [name=obj1, subsymbols=[UtterancePart [word=where can i find], UtterancePart [word=the], GrammarNonTerminal [name=object, subsymbols=[UtterancePart [word=orange]]]]]]]]]]]
14:15:57 DEBUG SkillRunner:   PepperGetSourceAndGNT#bmb -> end() returned: success
14:15:57 DEBUG SCXMLSkillRunner:   Fire event: PepperGetSourceAndGNT.success.question
14:15:57 DEBUG SkillStateMachine: FIRE SKILL Event: PepperGetSourceAndGNT.success.question
14:15:57 INFO  SkillStateMachine: #onTransition: "tasks.speechrec.PepperGetSourceAndGNT#bmb" --> "tasks.speechrec.PepperGetSourceAndGNT#bmb "event: "PepperGetSourceAndGNT.success.question"
14:15:57 INFO  SkillStateMachine: ## SEND ## Event:'bmb.success'
14:15:57 DEBUG SkillStateMachine: #OnExit: tasks.speechrec.PepperGetSourceAndGNT#bmb
14:15:57 DEBUG SkillStateMachine: #OnExit: bmb
14:15:57 INFO  SkillStateMachine: #onTransition: "bmb" --> "bmb "event: "bmb.success"
14:15:57 DEBUG SkillStateMachine: #OnEntry: bmb
14:15:57 INFO  SkillStateMachine: ## ASSIGN ## Name:SENSOR Expr:'SpeechSensor'
14:15:57 INFO  SkillStateMachine: ## ASSIGN ## Name:TURN_TO_SOURCE Expr:'true'
14:15:57 INFO  SkillStateMachine: ## ASSIGN ## Name:questionsAskedBmb Expr:questionsAsked+1
14:15:57 INFO  SkillStateMachine: ## ASSIGN ## Name:exitWoGNT Expr:'true'
14:15:57 DEBUG SkillStateMachine: #OnEntry: tasks.speechrec.PepperGetSourceAndGNT#bmb
14:15:57 INFO  SkillStateMachine: data id:#_SENSOR with expr='@SENSOR'changed to:SpeechSensor
14:15:57 INFO  SkillStateMachine: data id:#_TURN_TO_SOURCE with expr='@TURN_TO_SOURCE'changed to:true
14:15:57 INFO  SkillStateMachine: data id:#_TIMEOUT with expr='@TIMEOUT'changed to:-1
14:15:57 INFO  SkillStateMachine: data id:#_ALLOW_EXITING_WITHOUT_GNT with expr='@exitWoGNT'changed to:true
14:15:57 INFO  SkillStateMachine: ##INVOKE   PepperGetSourceAndGNT#bmb
14:15:57 DEBUG SkillConfigurator: request bool #_TURN_TO_SOURCE default:true
14:15:57 DEBUG SkillConfigurator: request value #_SENSOR
14:15:57 DEBUG PepperGetSourceAndGNT: wait for nt using speech sensor:SpeechSensor
14:15:57 DEBUG SkillConfigurator: request INT #_TIMEOUT default:-1
14:15:57 DEBUG SkillConfigurator: request double #_MAX_DISTANCE default:2.0
14:15:57 DEBUG SkillConfigurator: request value #_NONTERMINALS
14:15:57 DEBUG SkillConfigurator: request bool #_DISABLE_CONCAT_UNDERSCORE default:false
14:15:57 DEBUG SkillConfigurator: request value #_NONTERMINALS_TO_CONFIRM default:#N/A#
14:15:57 DEBUG SkillConfigurator: request value #_TEXT default:#N/A#
14:15:57 DEBUG SkillConfigurator: request bool #_ALLOW_EXITING_WITHOUT_GNT default:false
14:15:57 DEBUG SkillRunner:   PepperGetSourceAndGNT#bmb -> invoke configure().
14:15:57 DEBUG PepperGetSourceAndGNT: wait for nt using speech sensor:SpeechSensor
14:15:57 INFO  BonsaiManager: Creating a sensor instance with key 'SpeechSensor' and dataType 'class de.unibi.citec.clf.btl.data.speechrec.Utterance'
14:15:57 TRACE RosFactory: create sensor for: class de.unibi.citec.clf.btl.data.speechrec.Utterance
14:15:57 INFO  BonsaiManager: Creating an actuator instance with key 'SpeechActuator' and type 'interface de.unibi.citec.clf.bonsai.actuators.SpeechActuator'
14:15:57 TRACE RosFactory: create actuator: interface de.unibi.citec.clf.bonsai.actuators.SpeechActuator
14:15:57 INFO  BonsaiManager: Creating an actuator instance with key 'SSLActuator' and type 'interface de.unibi.citec.clf.bonsai.actuators.SSLActuator'
14:15:57 TRACE RosFactory: create actuator: interface de.unibi.citec.clf.bonsai.actuators.SSLActuator
14:15:57 INFO  BonsaiManager: Creating an working memory instance with key 'WorkingMemory'
14:15:57 DEBUG DefaultMemory: getSlot /behaviors/answerQuestion/nav[class de.unibi.citec.clf.btl.data.navigation.NavigationGoalData]
14:15:57 INFO  BonsaiManager: Creating an working memory instance with key 'WorkingMemory'
14:15:57 DEBUG DefaultMemory: getSlot /behaviors/answerQuestion/tree[class de.unibi.citec.clf.btl.data.speechrec.GrammarTree]
14:15:57 DEBUG SkillRunner:   PepperGetSourceAndGNT#bmb -> invoke init()
14:15:57 DEBUG SimpleSpeechHelper: start listening
14:15:57 DEBUG SkillRunner:   PepperGetSourceAndGNT#bmb -> init() returned: true
14:15:57 DEBUG SkillRunner:   PepperGetSourceAndGNT#bmb -> invoke execute()
14:16:01 DEBUG SimpleSpeechHelper: got new data: 
14:16:01 DEBUG SimpleSpeechHelper: is valid: false
14:16:01 DEBUG PepperGetSourceAndGNT: num of Utterances: 1
14:16:01 DEBUG PepperGetSourceAndGNT: understanding is null
14:16:01 DEBUG PepperGetSourceAndGNT: exit without GNT
14:16:01 DEBUG PepperGetSourceAndGNT: ######################## TRYING TO GET SSL IN LOOP #################
14:16:01 DEBUG PepperGetSourceAndGNT: ######################## SSL IS VALID #################
14:16:01 DEBUG SkillRunner:   PepperGetSourceAndGNT#bmb -> execute() returned: success
14:16:01 DEBUG SkillRunner:   PepperGetSourceAndGNT#bmb -> invoke end()
14:16:01 DEBUG ObjectSlot: memorized NavigationGoalData[ x:0.0 y:0.0 yaw:147.42857142857142 coordinateTolerance:25.0 yawTolerance:6.283185307179586 frame:map ]
14:16:01 DEBUG SkillRunner:   PepperGetSourceAndGNT#bmb -> end() returned: success
14:16:01 DEBUG SCXMLSkillRunner:   Fire event: PepperGetSourceAndGNT.success.exitWoGNT
14:16:01 DEBUG SkillStateMachine: FIRE SKILL Event: PepperGetSourceAndGNT.success.exitWoGNT
14:16:01 INFO  SkillStateMachine: #onTransition: "tasks.speechrec.PepperGetSourceAndGNT#bmb" --> "tasks.speechrec.PepperGetSourceAndGNT#bmb "event: "PepperGetSourceAndGNT.success.exitWoGNT"
14:16:01 INFO  SkillStateMachine: ## SEND ## Event:'bmb.again'
14:16:01 DEBUG SkillStateMachine: #OnExit: tasks.speechrec.PepperGetSourceAndGNT#bmb
14:16:01 DEBUG SkillStateMachine: #OnExit: bmb
14:16:01 INFO  SkillStateMachine: #onTransition: "bmb" --> "bmb "event: "bmb.again"
14:16:01 DEBUG SkillStateMachine: #OnEntry: bmb
14:16:01 INFO  SkillStateMachine: ## ASSIGN ## Name:SENSOR Expr:'SpeechSensor'
14:16:01 INFO  SkillStateMachine: ## ASSIGN ## Name:TURN_TO_SOURCE Expr:'true'
14:16:01 INFO  SkillStateMachine: ## ASSIGN ## Name:questionsAskedBmb Expr:questionsAsked+1
14:16:01 INFO  SkillStateMachine: ## ASSIGN ## Name:exitWoGNT Expr:'true'
14:16:01 DEBUG SkillStateMachine: #OnEntry: tasks.speechrec.PepperGetSourceAndGNT#bmb
14:16:01 INFO  SkillStateMachine: data id:#_SENSOR with expr='@SENSOR'changed to:SpeechSensor
14:16:01 INFO  SkillStateMachine: data id:#_TURN_TO_SOURCE with expr='@TURN_TO_SOURCE'changed to:true
14:16:01 INFO  SkillStateMachine: data id:#_TIMEOUT with expr='@TIMEOUT'changed to:-1
14:16:01 INFO  SkillStateMachine: data id:#_ALLOW_EXITING_WITHOUT_GNT with expr='@exitWoGNT'changed to:true
14:16:01 INFO  SkillStateMachine: ##INVOKE   PepperGetSourceAndGNT#bmb
14:16:01 DEBUG SkillConfigurator: request bool #_TURN_TO_SOURCE default:true
14:16:01 DEBUG SkillConfigurator: request value #_SENSOR
14:16:01 DEBUG PepperGetSourceAndGNT: wait for nt using speech sensor:SpeechSensor
14:16:01 DEBUG SkillConfigurator: request INT #_TIMEOUT default:-1
14:16:01 DEBUG SkillConfigurator: request double #_MAX_DISTANCE default:2.0
14:16:01 DEBUG SkillConfigurator: request value #_NONTERMINALS
14:16:01 DEBUG SkillConfigurator: request bool #_DISABLE_CONCAT_UNDERSCORE default:false
14:16:01 DEBUG SkillConfigurator: request value #_NONTERMINALS_TO_CONFIRM default:#N/A#
14:16:01 DEBUG SkillConfigurator: request value #_TEXT default:#N/A#
14:16:01 DEBUG SkillConfigurator: request bool #_ALLOW_EXITING_WITHOUT_GNT default:false
14:16:01 DEBUG SkillRunner:   PepperGetSourceAndGNT#bmb -> invoke configure().
14:16:01 DEBUG PepperGetSourceAndGNT: wait for nt using speech sensor:SpeechSensor
14:16:01 INFO  BonsaiManager: Creating a sensor instance with key 'SpeechSensor' and dataType 'class de.unibi.citec.clf.btl.data.speechrec.Utterance'
14:16:01 TRACE RosFactory: create sensor for: class de.unibi.citec.clf.btl.data.speechrec.Utterance
14:16:01 INFO  BonsaiManager: Creating an actuator instance with key 'SpeechActuator' and type 'interface de.unibi.citec.clf.bonsai.actuators.SpeechActuator'
14:16:01 TRACE RosFactory: create actuator: interface de.unibi.citec.clf.bonsai.actuators.SpeechActuator
14:16:01 INFO  BonsaiManager: Creating an actuator instance with key 'SSLActuator' and type 'interface de.unibi.citec.clf.bonsai.actuators.SSLActuator'
14:16:01 TRACE RosFactory: create actuator: interface de.unibi.citec.clf.bonsai.actuators.SSLActuator
14:16:01 INFO  BonsaiManager: Creating an working memory instance with key 'WorkingMemory'
14:16:01 DEBUG DefaultMemory: getSlot /behaviors/answerQuestion/nav[class de.unibi.citec.clf.btl.data.navigation.NavigationGoalData]
14:16:01 INFO  BonsaiManager: Creating an working memory instance with key 'WorkingMemory'
14:16:01 DEBUG DefaultMemory: getSlot /behaviors/answerQuestion/tree[class de.unibi.citec.clf.btl.data.speechrec.GrammarTree]
14:16:01 DEBUG SkillRunner:   PepperGetSourceAndGNT#bmb -> invoke init()
14:16:01 DEBUG SimpleSpeechHelper: start listening
14:16:01 DEBUG SkillRunner:   PepperGetSourceAndGNT#bmb -> init() returned: true
14:16:01 DEBUG SkillRunner:   PepperGetSourceAndGNT#bmb -> invoke execute()
14:16:05 DEBUG SimpleSpeechHelper: got new data: 
14:16:05 DEBUG SimpleSpeechHelper: is valid: true
14:16:05 DEBUG SimpleSpeechHelper: GrammarNonTerminal [name=, subsymbols=[GrammarNonTerminal [name=question, subsymbols=[GrammarNonTerminal [name=quest_arena, subsymbols=[GrammarNonTerminal [name=arena2, subsymbols=[UtterancePart [word=in], UtterancePart [word=which room is the], GrammarNonTerminal [name=location, subsymbols=[UtterancePart [word=end table]]]]]]]]]]]
14:16:05 DEBUG PepperGetSourceAndGNT: num of Utterances: 1
14:16:05 DEBUG PepperGetSourceAndGNT: undestanding is NOT null!!
14:16:05 DEBUG PepperGetSourceAndGNT: has New Understanding
14:16:05 DEBUG PepperGetSourceAndGNT: has enough trees
14:16:05 DEBUG PepperGetSourceAndGNT: ######################## TRYING TO GET SSL FOR UTTERANCE!!! #################
14:16:05 DEBUG PepperGetSourceAndGNT: ######################## UTTERANCE VALID!!! #################
14:16:05 DEBUG SkillRunner:   PepperGetSourceAndGNT#bmb -> execute() returned: success
14:16:05 DEBUG SkillRunner:   PepperGetSourceAndGNT#bmb -> invoke end()
14:16:05 DEBUG ObjectSlot: memorized NavigationGoalData[ x:0.0 y:0.0 yaw:183.25 coordinateTolerance:25.0 yawTolerance:6.283185307179586 frame:map ]
14:16:05 DEBUG ObjectSlot: memorized GrammarNonTerminal [name=, subsymbols=[GrammarNonTerminal [name=question, subsymbols=[GrammarNonTerminal [name=quest_arena, subsymbols=[GrammarNonTerminal [name=arena2, subsymbols=[UtterancePart [word=in], UtterancePart [word=which room is the], GrammarNonTerminal [name=location, subsymbols=[UtterancePart [word=end table]]]]]]]]]]]
14:16:05 DEBUG SkillRunner:   PepperGetSourceAndGNT#bmb -> end() returned: success
14:16:05 DEBUG SCXMLSkillRunner:   Fire event: PepperGetSourceAndGNT.success.question
14:16:05 DEBUG SkillStateMachine: FIRE SKILL Event: PepperGetSourceAndGNT.success.question
14:16:05 INFO  SkillStateMachine: #onTransition: "tasks.speechrec.PepperGetSourceAndGNT#bmb" --> "tasks.speechrec.PepperGetSourceAndGNT#bmb "event: "PepperGetSourceAndGNT.success.question"
14:16:05 INFO  SkillStateMachine: ## SEND ## Event:'bmb.success'
14:16:05 DEBUG SkillStateMachine: #OnExit: tasks.speechrec.PepperGetSourceAndGNT#bmb
14:16:05 DEBUG SkillStateMachine: #OnExit: bmb
14:16:05 INFO  SkillStateMachine: #onTransition: "bmb" --> "bmb "event: "bmb.success"
14:16:05 DEBUG SkillStateMachine: #OnEntry: bmb
14:16:05 INFO  SkillStateMachine: ## ASSIGN ## Name:SENSOR Expr:'SpeechSensor'
14:16:05 INFO  SkillStateMachine: ## ASSIGN ## Name:TURN_TO_SOURCE Expr:'true'
14:16:05 INFO  SkillStateMachine: ## ASSIGN ## Name:questionsAskedBmb Expr:questionsAsked+1
14:16:05 INFO  SkillStateMachine: ## ASSIGN ## Name:exitWoGNT Expr:'true'
14:16:05 DEBUG SkillStateMachine: #OnEntry: tasks.speechrec.PepperGetSourceAndGNT#bmb
14:16:05 INFO  SkillStateMachine: data id:#_SENSOR with expr='@SENSOR'changed to:SpeechSensor
14:16:05 INFO  SkillStateMachine: data id:#_TURN_TO_SOURCE with expr='@TURN_TO_SOURCE'changed to:true
14:16:05 INFO  SkillStateMachine: data id:#_TIMEOUT with expr='@TIMEOUT'changed to:-1
14:16:05 INFO  SkillStateMachine: data id:#_ALLOW_EXITING_WITHOUT_GNT with expr='@exitWoGNT'changed to:true
14:16:05 INFO  SkillStateMachine: ##INVOKE   PepperGetSourceAndGNT#bmb
14:16:05 DEBUG SkillConfigurator: request bool #_TURN_TO_SOURCE default:true
14:16:05 DEBUG SkillConfigurator: request value #_SENSOR
14:16:05 DEBUG PepperGetSourceAndGNT: wait for nt using speech sensor:SpeechSensor
14:16:05 DEBUG SkillConfigurator: request INT #_TIMEOUT default:-1
14:16:05 DEBUG SkillConfigurator: request double #_MAX_DISTANCE default:2.0
14:16:05 DEBUG SkillConfigurator: request value #_NONTERMINALS
14:16:05 DEBUG SkillConfigurator: request bool #_DISABLE_CONCAT_UNDERSCORE default:false
14:16:05 DEBUG SkillConfigurator: request value #_NONTERMINALS_TO_CONFIRM default:#N/A#
14:16:05 DEBUG SkillConfigurator: request value #_TEXT default:#N/A#
14:16:05 DEBUG SkillConfigurator: request bool #_ALLOW_EXITING_WITHOUT_GNT default:false
14:16:05 DEBUG SkillRunner:   PepperGetSourceAndGNT#bmb -> invoke configure().
14:16:05 DEBUG PepperGetSourceAndGNT: wait for nt using speech sensor:SpeechSensor
14:16:05 INFO  BonsaiManager: Creating a sensor instance with key 'SpeechSensor' and dataType 'class de.unibi.citec.clf.btl.data.speechrec.Utterance'
14:16:05 TRACE RosFactory: create sensor for: class de.unibi.citec.clf.btl.data.speechrec.Utterance
14:16:05 INFO  BonsaiManager: Creating an actuator instance with key 'SpeechActuator' and type 'interface de.unibi.citec.clf.bonsai.actuators.SpeechActuator'
14:16:05 TRACE RosFactory: create actuator: interface de.unibi.citec.clf.bonsai.actuators.SpeechActuator
14:16:05 INFO  BonsaiManager: Creating an actuator instance with key 'SSLActuator' and type 'interface de.unibi.citec.clf.bonsai.actuators.SSLActuator'
14:16:05 TRACE RosFactory: create actuator: interface de.unibi.citec.clf.bonsai.actuators.SSLActuator
14:16:05 INFO  BonsaiManager: Creating an working memory instance with key 'WorkingMemory'
14:16:05 DEBUG DefaultMemory: getSlot /behaviors/answerQuestion/nav[class de.unibi.citec.clf.btl.data.navigation.NavigationGoalData]
14:16:05 INFO  BonsaiManager: Creating an working memory instance with key 'WorkingMemory'
14:16:05 DEBUG DefaultMemory: getSlot /behaviors/answerQuestion/tree[class de.unibi.citec.clf.btl.data.speechrec.GrammarTree]
14:16:05 DEBUG SkillRunner:   PepperGetSourceAndGNT#bmb -> invoke init()
14:16:05 DEBUG SimpleSpeechHelper: start listening
14:16:05 DEBUG SkillRunner:   PepperGetSourceAndGNT#bmb -> init() returned: true
14:16:05 DEBUG SkillRunner:   PepperGetSourceAndGNT#bmb -> invoke execute()
14:16:10 DEBUG SimpleSpeechHelper: got new data: 
14:16:10 DEBUG SimpleSpeechHelper: is valid: true
14:16:10 DEBUG SimpleSpeechHelper: GrammarNonTerminal [name=, subsymbols=[GrammarNonTerminal [name=question, subsymbols=[GrammarNonTerminal [name=quest_crowd, subsymbols=[GrammarNonTerminal [name=crowd4, subsymbols=[UtterancePart [word=was the person], GrammarNonTerminal [name=pospr, subsymbols=[UtterancePart [word=sitting]]], UtterancePart [word=a], GrammarNonTerminal [name=people_gender_dist, subsymbols=[UtterancePart [word=boy or girl]]]]]]]]]]]
14:16:10 DEBUG PepperGetSourceAndGNT: num of Utterances: 1
14:16:10 DEBUG PepperGetSourceAndGNT: undestanding is NOT null!!
14:16:10 DEBUG PepperGetSourceAndGNT: has New Understanding
14:16:10 DEBUG PepperGetSourceAndGNT: has enough trees
14:16:10 DEBUG PepperGetSourceAndGNT: ######################## TRYING TO GET SSL FOR UTTERANCE!!! #################
14:16:10 DEBUG PepperGetSourceAndGNT: ######################## UTTERANCE VALID!!! #################
14:16:10 DEBUG SkillRunner:   PepperGetSourceAndGNT#bmb -> execute() returned: success
14:16:10 DEBUG SkillRunner:   PepperGetSourceAndGNT#bmb -> invoke end()
14:16:10 DEBUG ObjectSlot: memorized NavigationGoalData[ x:0.0 y:0.0 yaw:186.8 coordinateTolerance:25.0 yawTolerance:6.283185307179586 frame:map ]
14:16:10 DEBUG ObjectSlot: memorized GrammarNonTerminal [name=, subsymbols=[GrammarNonTerminal [name=question, subsymbols=[GrammarNonTerminal [name=quest_crowd, subsymbols=[GrammarNonTerminal [name=crowd4, subsymbols=[UtterancePart [word=was the person], GrammarNonTerminal [name=pospr, subsymbols=[UtterancePart [word=sitting]]], UtterancePart [word=a], GrammarNonTerminal [name=people_gender_dist, subsymbols=[UtterancePart [word=boy or girl]]]]]]]]]]]
14:16:10 DEBUG SkillRunner:   PepperGetSourceAndGNT#bmb -> end() returned: success
14:16:10 DEBUG SCXMLSkillRunner:   Fire event: PepperGetSourceAndGNT.success.question
14:16:10 DEBUG SkillStateMachine: FIRE SKILL Event: PepperGetSourceAndGNT.success.question
14:16:10 INFO  SkillStateMachine: #onTransition: "tasks.speechrec.PepperGetSourceAndGNT#bmb" --> "tasks.speechrec.PepperGetSourceAndGNT#bmb "event: "PepperGetSourceAndGNT.success.question"
14:16:10 INFO  SkillStateMachine: ## SEND ## Event:'bmb.success'
14:16:10 DEBUG SkillStateMachine: #OnExit: tasks.speechrec.PepperGetSourceAndGNT#bmb
14:16:10 DEBUG SkillStateMachine: #OnExit: bmb
14:16:10 INFO  SkillStateMachine: #onTransition: "bmb" --> "bmb "event: "bmb.success"
14:16:10 DEBUG SkillStateMachine: #OnEntry: bmb
14:16:10 INFO  SkillStateMachine: ## ASSIGN ## Name:SENSOR Expr:'SpeechSensor'
14:16:10 INFO  SkillStateMachine: ## ASSIGN ## Name:TURN_TO_SOURCE Expr:'true'
14:16:10 INFO  SkillStateMachine: ## ASSIGN ## Name:questionsAskedBmb Expr:questionsAsked+1
14:16:10 INFO  SkillStateMachine: ## ASSIGN ## Name:exitWoGNT Expr:'true'
14:16:10 DEBUG SkillStateMachine: #OnEntry: tasks.speechrec.PepperGetSourceAndGNT#bmb
14:16:10 INFO  SkillStateMachine: data id:#_SENSOR with expr='@SENSOR'changed to:SpeechSensor
14:16:10 INFO  SkillStateMachine: data id:#_TURN_TO_SOURCE with expr='@TURN_TO_SOURCE'changed to:true
14:16:10 INFO  SkillStateMachine: data id:#_TIMEOUT with expr='@TIMEOUT'changed to:-1
14:16:10 INFO  SkillStateMachine: data id:#_ALLOW_EXITING_WITHOUT_GNT with expr='@exitWoGNT'changed to:true
14:16:10 INFO  SkillStateMachine: ##INVOKE   PepperGetSourceAndGNT#bmb
14:16:10 DEBUG SkillConfigurator: request bool #_TURN_TO_SOURCE default:true
14:16:10 DEBUG SkillConfigurator: request value #_SENSOR
14:16:10 DEBUG PepperGetSourceAndGNT: wait for nt using speech sensor:SpeechSensor
14:16:10 DEBUG SkillConfigurator: request INT #_TIMEOUT default:-1
14:16:10 DEBUG SkillConfigurator: request double #_MAX_DISTANCE default:2.0
14:16:10 DEBUG SkillConfigurator: request value #_NONTERMINALS
14:16:10 DEBUG SkillConfigurator: request bool #_DISABLE_CONCAT_UNDERSCORE default:false
14:16:10 DEBUG SkillConfigurator: request value #_NONTERMINALS_TO_CONFIRM default:#N/A#
14:16:10 DEBUG SkillConfigurator: request value #_TEXT default:#N/A#
14:16:10 DEBUG SkillConfigurator: request bool #_ALLOW_EXITING_WITHOUT_GNT default:false
14:16:10 DEBUG SkillRunner:   PepperGetSourceAndGNT#bmb -> invoke configure().
14:16:10 DEBUG PepperGetSourceAndGNT: wait for nt using speech sensor:SpeechSensor
14:16:10 INFO  BonsaiManager: Creating a sensor instance with key 'SpeechSensor' and dataType 'class de.unibi.citec.clf.btl.data.speechrec.Utterance'
14:16:10 TRACE RosFactory: create sensor for: class de.unibi.citec.clf.btl.data.speechrec.Utterance
14:16:10 INFO  BonsaiManager: Creating an actuator instance with key 'SpeechActuator' and type 'interface de.unibi.citec.clf.bonsai.actuators.SpeechActuator'
14:16:10 TRACE RosFactory: create actuator: interface de.unibi.citec.clf.bonsai.actuators.SpeechActuator
14:16:10 INFO  BonsaiManager: Creating an actuator instance with key 'SSLActuator' and type 'interface de.unibi.citec.clf.bonsai.actuators.SSLActuator'
14:16:10 TRACE RosFactory: create actuator: interface de.unibi.citec.clf.bonsai.actuators.SSLActuator
14:16:10 INFO  BonsaiManager: Creating an working memory instance with key 'WorkingMemory'
14:16:10 DEBUG DefaultMemory: getSlot /behaviors/answerQuestion/nav[class de.unibi.citec.clf.btl.data.navigation.NavigationGoalData]
14:16:10 INFO  BonsaiManager: Creating an working memory instance with key 'WorkingMemory'
14:16:10 DEBUG DefaultMemory: getSlot /behaviors/answerQuestion/tree[class de.unibi.citec.clf.btl.data.speechrec.GrammarTree]
14:16:10 DEBUG SkillRunner:   PepperGetSourceAndGNT#bmb -> invoke init()
14:16:10 DEBUG SimpleSpeechHelper: start listening
14:16:10 DEBUG SkillRunner:   PepperGetSourceAndGNT#bmb -> init() returned: true
14:16:10 DEBUG SkillRunner:   PepperGetSourceAndGNT#bmb -> invoke execute()
14:16:14 DEBUG SimpleSpeechHelper: got new data: 
14:16:14 DEBUG SimpleSpeechHelper: is valid: true
14:16:14 DEBUG SimpleSpeechHelper: GrammarNonTerminal [name=, subsymbols=[GrammarNonTerminal [name=question, subsymbols=[GrammarNonTerminal [name=quest_obj, subsymbols=[GrammarNonTerminal [name=obj8, subsymbols=[UtterancePart [word=what], UtterancePart [word=is the], GrammarNonTerminal [name=adjektiv_sup, subsymbols=[UtterancePart [word=biggest]]], GrammarNonTerminal [name=category, subsymbols=[UtterancePart [word=tableware]]]]]]]]]]]
14:16:14 DEBUG PepperGetSourceAndGNT: num of Utterances: 1
14:16:14 DEBUG PepperGetSourceAndGNT: undestanding is NOT null!!
14:16:14 DEBUG PepperGetSourceAndGNT: has New Understanding
14:16:14 DEBUG PepperGetSourceAndGNT: has enough trees
14:16:14 DEBUG PepperGetSourceAndGNT: ######################## TRYING TO GET SSL FOR UTTERANCE!!! #################
14:16:14 DEBUG PepperGetSourceAndGNT: ######################## UTTERANCE VALID!!! #################
14:16:14 DEBUG SkillRunner:   PepperGetSourceAndGNT#bmb -> execute() returned: success
14:16:14 DEBUG SkillRunner:   PepperGetSourceAndGNT#bmb -> invoke end()
14:16:14 DEBUG ObjectSlot: memorized NavigationGoalData[ x:0.0 y:0.0 yaw:176.9 coordinateTolerance:25.0 yawTolerance:6.283185307179586 frame:map ]
14:16:14 DEBUG ObjectSlot: memorized GrammarNonTerminal [name=, subsymbols=[GrammarNonTerminal [name=question, subsymbols=[GrammarNonTerminal [name=quest_obj, subsymbols=[GrammarNonTerminal [name=obj8, subsymbols=[UtterancePart [word=what], UtterancePart [word=is the], GrammarNonTerminal [name=adjektiv_sup, subsymbols=[UtterancePart [word=biggest]]], GrammarNonTerminal [name=category, subsymbols=[UtterancePart [word=tableware]]]]]]]]]]]
14:16:14 DEBUG SkillRunner:   PepperGetSourceAndGNT#bmb -> end() returned: success
14:16:14 DEBUG SCXMLSkillRunner:   Fire event: PepperGetSourceAndGNT.success.question
14:16:14 DEBUG SkillStateMachine: FIRE SKILL Event: PepperGetSourceAndGNT.success.question
14:16:14 INFO  SkillStateMachine: #onTransition: "tasks.speechrec.PepperGetSourceAndGNT#bmb" --> "tasks.speechrec.PepperGetSourceAndGNT#bmb "event: "PepperGetSourceAndGNT.success.question"
14:16:14 INFO  SkillStateMachine: ## SEND ## Event:'bmb.success'
14:16:14 DEBUG SkillStateMachine: #OnExit: tasks.speechrec.PepperGetSourceAndGNT#bmb
14:16:14 DEBUG SkillStateMachine: #OnExit: bmb
14:16:14 INFO  SkillStateMachine: #onTransition: "bmb" --> "bmb "event: "bmb.success"
14:16:14 DEBUG SkillStateMachine: #OnEntry: bmb
14:16:14 INFO  SkillStateMachine: ## ASSIGN ## Name:SENSOR Expr:'SpeechSensor'
14:16:14 INFO  SkillStateMachine: ## ASSIGN ## Name:TURN_TO_SOURCE Expr:'true'
14:16:14 INFO  SkillStateMachine: ## ASSIGN ## Name:questionsAskedBmb Expr:questionsAsked+1
14:16:14 INFO  SkillStateMachine: ## ASSIGN ## Name:exitWoGNT Expr:'true'
14:16:14 DEBUG SkillStateMachine: #OnEntry: tasks.speechrec.PepperGetSourceAndGNT#bmb
14:16:14 INFO  SkillStateMachine: data id:#_SENSOR with expr='@SENSOR'changed to:SpeechSensor
14:16:14 INFO  SkillStateMachine: data id:#_TURN_TO_SOURCE with expr='@TURN_TO_SOURCE'changed to:true
14:16:14 INFO  SkillStateMachine: data id:#_TIMEOUT with expr='@TIMEOUT'changed to:-1
14:16:14 INFO  SkillStateMachine: data id:#_ALLOW_EXITING_WITHOUT_GNT with expr='@exitWoGNT'changed to:true
14:16:14 INFO  SkillStateMachine: ##INVOKE   PepperGetSourceAndGNT#bmb
14:16:14 DEBUG SkillConfigurator: request bool #_TURN_TO_SOURCE default:true
14:16:14 DEBUG SkillConfigurator: request value #_SENSOR
14:16:14 DEBUG PepperGetSourceAndGNT: wait for nt using speech sensor:SpeechSensor
14:16:14 DEBUG SkillConfigurator: request INT #_TIMEOUT default:-1
14:16:14 DEBUG SkillConfigurator: request double #_MAX_DISTANCE default:2.0
14:16:14 DEBUG SkillConfigurator: request value #_NONTERMINALS
14:16:14 DEBUG SkillConfigurator: request bool #_DISABLE_CONCAT_UNDERSCORE default:false
14:16:14 DEBUG SkillConfigurator: request value #_NONTERMINALS_TO_CONFIRM default:#N/A#
14:16:14 DEBUG SkillConfigurator: request value #_TEXT default:#N/A#
14:16:14 DEBUG SkillConfigurator: request bool #_ALLOW_EXITING_WITHOUT_GNT default:false
14:16:14 DEBUG SkillRunner:   PepperGetSourceAndGNT#bmb -> invoke configure().
14:16:14 DEBUG PepperGetSourceAndGNT: wait for nt using speech sensor:SpeechSensor
14:16:14 INFO  BonsaiManager: Creating a sensor instance with key 'SpeechSensor' and dataType 'class de.unibi.citec.clf.btl.data.speechrec.Utterance'
14:16:14 TRACE RosFactory: create sensor for: class de.unibi.citec.clf.btl.data.speechrec.Utterance
14:16:14 INFO  BonsaiManager: Creating an actuator instance with key 'SpeechActuator' and type 'interface de.unibi.citec.clf.bonsai.actuators.SpeechActuator'
14:16:14 TRACE RosFactory: create actuator: interface de.unibi.citec.clf.bonsai.actuators.SpeechActuator
14:16:14 INFO  BonsaiManager: Creating an actuator instance with key 'SSLActuator' and type 'interface de.unibi.citec.clf.bonsai.actuators.SSLActuator'
14:16:14 TRACE RosFactory: create actuator: interface de.unibi.citec.clf.bonsai.actuators.SSLActuator
14:16:14 INFO  BonsaiManager: Creating an working memory instance with key 'WorkingMemory'
14:16:14 DEBUG DefaultMemory: getSlot /behaviors/answerQuestion/nav[class de.unibi.citec.clf.btl.data.navigation.NavigationGoalData]
14:16:14 INFO  BonsaiManager: Creating an working memory instance with key 'WorkingMemory'
14:16:14 DEBUG DefaultMemory: getSlot /behaviors/answerQuestion/tree[class de.unibi.citec.clf.btl.data.speechrec.GrammarTree]
14:16:14 DEBUG SkillRunner:   PepperGetSourceAndGNT#bmb -> invoke init()
14:16:14 DEBUG SimpleSpeechHelper: start listening
14:16:14 DEBUG SkillRunner:   PepperGetSourceAndGNT#bmb -> init() returned: true
14:16:14 DEBUG SkillRunner:   PepperGetSourceAndGNT#bmb -> invoke execute()
14:16:18 DEBUG SimpleSpeechHelper: got new data: 
14:16:18 DEBUG SimpleSpeechHelper: is valid: false
14:16:18 DEBUG PepperGetSourceAndGNT: num of Utterances: 1
14:16:18 DEBUG PepperGetSourceAndGNT: understanding is null
14:16:18 DEBUG PepperGetSourceAndGNT: exit without GNT
14:16:18 DEBUG PepperGetSourceAndGNT: ######################## TRYING TO GET SSL IN LOOP #################
14:16:18 DEBUG PepperGetSourceAndGNT: ######################## SSL IS VALID #################
14:16:18 DEBUG SkillRunner:   PepperGetSourceAndGNT#bmb -> execute() returned: success
14:16:18 DEBUG SkillRunner:   PepperGetSourceAndGNT#bmb -> invoke end()
14:16:18 DEBUG ObjectSlot: memorized NavigationGoalData[ x:0.0 y:0.0 yaw:178.875 coordinateTolerance:25.0 yawTolerance:6.283185307179586 frame:map ]
14:16:18 DEBUG SkillRunner:   PepperGetSourceAndGNT#bmb -> end() returned: success
14:16:18 DEBUG SCXMLSkillRunner:   Fire event: PepperGetSourceAndGNT.success.exitWoGNT
14:16:18 DEBUG SkillStateMachine: FIRE SKILL Event: PepperGetSourceAndGNT.success.exitWoGNT
14:16:18 INFO  SkillStateMachine: #onTransition: "tasks.speechrec.PepperGetSourceAndGNT#bmb" --> "tasks.speechrec.PepperGetSourceAndGNT#bmb "event: "PepperGetSourceAndGNT.success.exitWoGNT"
14:16:18 INFO  SkillStateMachine: ## SEND ## Event:'bmb.again'
14:16:18 DEBUG SkillStateMachine: #OnExit: tasks.speechrec.PepperGetSourceAndGNT#bmb
14:16:18 DEBUG SkillStateMachine: #OnExit: bmb
14:16:18 INFO  SkillStateMachine: #onTransition: "bmb" --> "bmb "event: "bmb.again"
14:16:18 DEBUG SkillStateMachine: #OnEntry: bmb
14:16:18 INFO  SkillStateMachine: ## ASSIGN ## Name:SENSOR Expr:'SpeechSensor'
14:16:18 INFO  SkillStateMachine: ## ASSIGN ## Name:TURN_TO_SOURCE Expr:'true'
14:16:18 INFO  SkillStateMachine: ## ASSIGN ## Name:questionsAskedBmb Expr:questionsAsked+1
14:16:18 INFO  SkillStateMachine: ## ASSIGN ## Name:exitWoGNT Expr:'true'
14:16:18 DEBUG SkillStateMachine: #OnEntry: tasks.speechrec.PepperGetSourceAndGNT#bmb
14:16:18 INFO  SkillStateMachine: data id:#_SENSOR with expr='@SENSOR'changed to:SpeechSensor
14:16:18 INFO  SkillStateMachine: data id:#_TURN_TO_SOURCE with expr='@TURN_TO_SOURCE'changed to:true
14:16:18 INFO  SkillStateMachine: data id:#_TIMEOUT with expr='@TIMEOUT'changed to:-1
14:16:18 INFO  SkillStateMachine: data id:#_ALLOW_EXITING_WITHOUT_GNT with expr='@exitWoGNT'changed to:true
14:16:18 INFO  SkillStateMachine: ##INVOKE   PepperGetSourceAndGNT#bmb
14:16:18 DEBUG SkillConfigurator: request bool #_TURN_TO_SOURCE default:true
14:16:18 DEBUG SkillConfigurator: request value #_SENSOR
14:16:18 DEBUG PepperGetSourceAndGNT: wait for nt using speech sensor:SpeechSensor
14:16:18 DEBUG SkillConfigurator: request INT #_TIMEOUT default:-1
14:16:18 DEBUG SkillConfigurator: request double #_MAX_DISTANCE default:2.0
14:16:18 DEBUG SkillConfigurator: request value #_NONTERMINALS
14:16:18 DEBUG SkillConfigurator: request bool #_DISABLE_CONCAT_UNDERSCORE default:false
14:16:18 DEBUG SkillConfigurator: request value #_NONTERMINALS_TO_CONFIRM default:#N/A#
14:16:18 DEBUG SkillConfigurator: request value #_TEXT default:#N/A#
14:16:18 DEBUG SkillConfigurator: request bool #_ALLOW_EXITING_WITHOUT_GNT default:false
14:16:18 DEBUG SkillRunner:   PepperGetSourceAndGNT#bmb -> invoke configure().
14:16:18 DEBUG PepperGetSourceAndGNT: wait for nt using speech sensor:SpeechSensor
14:16:18 INFO  BonsaiManager: Creating a sensor instance with key 'SpeechSensor' and dataType 'class de.unibi.citec.clf.btl.data.speechrec.Utterance'
14:16:18 TRACE RosFactory: create sensor for: class de.unibi.citec.clf.btl.data.speechrec.Utterance
14:16:18 INFO  BonsaiManager: Creating an actuator instance with key 'SpeechActuator' and type 'interface de.unibi.citec.clf.bonsai.actuators.SpeechActuator'
14:16:18 TRACE RosFactory: create actuator: interface de.unibi.citec.clf.bonsai.actuators.SpeechActuator
14:16:18 INFO  BonsaiManager: Creating an actuator instance with key 'SSLActuator' and type 'interface de.unibi.citec.clf.bonsai.actuators.SSLActuator'
14:16:18 TRACE RosFactory: create actuator: interface de.unibi.citec.clf.bonsai.actuators.SSLActuator
14:16:18 INFO  BonsaiManager: Creating an working memory instance with key 'WorkingMemory'
14:16:18 DEBUG DefaultMemory: getSlot /behaviors/answerQuestion/nav[class de.unibi.citec.clf.btl.data.navigation.NavigationGoalData]
14:16:18 INFO  BonsaiManager: Creating an working memory instance with key 'WorkingMemory'
14:16:18 DEBUG DefaultMemory: getSlot /behaviors/answerQuestion/tree[class de.unibi.citec.clf.btl.data.speechrec.GrammarTree]
14:16:18 DEBUG SkillRunner:   PepperGetSourceAndGNT#bmb -> invoke init()
14:16:18 DEBUG SimpleSpeechHelper: start listening
14:16:18 DEBUG SkillRunner:   PepperGetSourceAndGNT#bmb -> init() returned: true
14:16:18 DEBUG SkillRunner:   PepperGetSourceAndGNT#bmb -> invoke execute()
14:16:18 DEBUG SimpleSpeechHelper: got new data: 
14:16:18 DEBUG SimpleSpeechHelper: is valid: false
14:16:18 DEBUG PepperGetSourceAndGNT: num of Utterances: 1
14:16:18 DEBUG PepperGetSourceAndGNT: understanding is null
14:16:18 DEBUG PepperGetSourceAndGNT: exit without GNT
14:16:18 DEBUG PepperGetSourceAndGNT: ######################## TRYING TO GET SSL IN LOOP #################
14:16:18 DEBUG PepperGetSourceAndGNT: ######################## SSL IS VALID #################
14:16:18 DEBUG SkillRunner:   PepperGetSourceAndGNT#bmb -> execute() returned: success
14:16:18 DEBUG SkillRunner:   PepperGetSourceAndGNT#bmb -> invoke end()
14:16:18 DEBUG ObjectSlot: memorized NavigationGoalData[ x:0.0 y:0.0 yaw:228.50000000000003 coordinateTolerance:25.0 yawTolerance:6.283185307179586 frame:map ]
14:16:18 DEBUG SkillRunner:   PepperGetSourceAndGNT#bmb -> end() returned: success
14:16:18 DEBUG SCXMLSkillRunner:   Fire event: PepperGetSourceAndGNT.success.exitWoGNT
14:16:18 DEBUG SkillStateMachine: FIRE SKILL Event: PepperGetSourceAndGNT.success.exitWoGNT
14:16:18 INFO  SkillStateMachine: #onTransition: "tasks.speechrec.PepperGetSourceAndGNT#bmb" --> "tasks.speechrec.PepperGetSourceAndGNT#bmb "event: "PepperGetSourceAndGNT.success.exitWoGNT"
14:16:18 INFO  SkillStateMachine: ## SEND ## Event:'bmb.again'
14:16:18 DEBUG SkillStateMachine: #OnExit: tasks.speechrec.PepperGetSourceAndGNT#bmb
14:16:18 DEBUG SkillStateMachine: #OnExit: bmb
14:16:18 INFO  SkillStateMachine: #onTransition: "bmb" --> "bmb "event: "bmb.again"
14:16:18 DEBUG SkillStateMachine: #OnEntry: bmb
14:16:18 INFO  SkillStateMachine: ## ASSIGN ## Name:SENSOR Expr:'SpeechSensor'
14:16:18 INFO  SkillStateMachine: ## ASSIGN ## Name:TURN_TO_SOURCE Expr:'true'
14:16:18 INFO  SkillStateMachine: ## ASSIGN ## Name:questionsAskedBmb Expr:questionsAsked+1
14:16:18 INFO  SkillStateMachine: ## ASSIGN ## Name:exitWoGNT Expr:'true'
14:16:18 DEBUG SkillStateMachine: #OnEntry: tasks.speechrec.PepperGetSourceAndGNT#bmb
14:16:18 INFO  SkillStateMachine: data id:#_SENSOR with expr='@SENSOR'changed to:SpeechSensor
14:16:18 INFO  SkillStateMachine: data id:#_TURN_TO_SOURCE with expr='@TURN_TO_SOURCE'changed to:true
14:16:18 INFO  SkillStateMachine: data id:#_TIMEOUT with expr='@TIMEOUT'changed to:-1
14:16:18 INFO  SkillStateMachine: data id:#_ALLOW_EXITING_WITHOUT_GNT with expr='@exitWoGNT'changed to:true
14:16:18 INFO  SkillStateMachine: ##INVOKE   PepperGetSourceAndGNT#bmb
14:16:18 DEBUG SkillConfigurator: request bool #_TURN_TO_SOURCE default:true
14:16:18 DEBUG SkillConfigurator: request value #_SENSOR
14:16:18 DEBUG PepperGetSourceAndGNT: wait for nt using speech sensor:SpeechSensor
14:16:18 DEBUG SkillConfigurator: request INT #_TIMEOUT default:-1
14:16:18 DEBUG SkillConfigurator: request double #_MAX_DISTANCE default:2.0
14:16:18 DEBUG SkillConfigurator: request value #_NONTERMINALS
14:16:18 DEBUG SkillConfigurator: request bool #_DISABLE_CONCAT_UNDERSCORE default:false
14:16:18 DEBUG SkillConfigurator: request value #_NONTERMINALS_TO_CONFIRM default:#N/A#
14:16:18 DEBUG SkillConfigurator: request value #_TEXT default:#N/A#
14:16:18 DEBUG SkillConfigurator: request bool #_ALLOW_EXITING_WITHOUT_GNT default:false
14:16:18 DEBUG SkillRunner:   PepperGetSourceAndGNT#bmb -> invoke configure().
14:16:18 DEBUG PepperGetSourceAndGNT: wait for nt using speech sensor:SpeechSensor
14:16:18 INFO  BonsaiManager: Creating a sensor instance with key 'SpeechSensor' and dataType 'class de.unibi.citec.clf.btl.data.speechrec.Utterance'
14:16:18 TRACE RosFactory: create sensor for: class de.unibi.citec.clf.btl.data.speechrec.Utterance
14:16:18 INFO  BonsaiManager: Creating an actuator instance with key 'SpeechActuator' and type 'interface de.unibi.citec.clf.bonsai.actuators.SpeechActuator'
14:16:18 TRACE RosFactory: create actuator: interface de.unibi.citec.clf.bonsai.actuators.SpeechActuator
14:16:18 INFO  BonsaiManager: Creating an actuator instance with key 'SSLActuator' and type 'interface de.unibi.citec.clf.bonsai.actuators.SSLActuator'
14:16:18 TRACE RosFactory: create actuator: interface de.unibi.citec.clf.bonsai.actuators.SSLActuator
14:16:18 INFO  BonsaiManager: Creating an working memory instance with key 'WorkingMemory'
14:16:18 DEBUG DefaultMemory: getSlot /behaviors/answerQuestion/nav[class de.unibi.citec.clf.btl.data.navigation.NavigationGoalData]
14:16:18 INFO  BonsaiManager: Creating an working memory instance with key 'WorkingMemory'
14:16:18 DEBUG DefaultMemory: getSlot /behaviors/answerQuestion/tree[class de.unibi.citec.clf.btl.data.speechrec.GrammarTree]
14:16:18 DEBUG SkillRunner:   PepperGetSourceAndGNT#bmb -> invoke init()
14:16:18 DEBUG SimpleSpeechHelper: start listening
14:16:18 DEBUG SkillRunner:   PepperGetSourceAndGNT#bmb -> init() returned: true
14:16:18 DEBUG SkillRunner:   PepperGetSourceAndGNT#bmb -> invoke execute()
14:16:22 DEBUG SimpleSpeechHelper: got new data: 
14:16:22 DEBUG SimpleSpeechHelper: is valid: true
14:16:22 DEBUG SimpleSpeechHelper: GrammarNonTerminal [name=, subsymbols=[GrammarNonTerminal [name=question, subsymbols=[GrammarNonTerminal [name=quest_arena, subsymbols=[GrammarNonTerminal [name=arena2, subsymbols=[UtterancePart [word=in], UtterancePart [word=which room is the], GrammarNonTerminal [name=location, subsymbols=[UtterancePart [word=dining table]]]]]]]]]]]
14:16:22 DEBUG PepperGetSourceAndGNT: num of Utterances: 1
14:16:22 DEBUG PepperGetSourceAndGNT: undestanding is NOT null!!
14:16:22 DEBUG PepperGetSourceAndGNT: has New Understanding
14:16:22 DEBUG PepperGetSourceAndGNT: has enough trees
14:16:22 DEBUG PepperGetSourceAndGNT: ######################## TRYING TO GET SSL FOR UTTERANCE!!! #################
14:16:22 DEBUG PepperGetSourceAndGNT: ######################## UTTERANCE VALID!!! #################
14:16:22 DEBUG SkillRunner:   PepperGetSourceAndGNT#bmb -> execute() returned: success
14:16:22 DEBUG SkillRunner:   PepperGetSourceAndGNT#bmb -> invoke end()
14:16:22 DEBUG ObjectSlot: memorized NavigationGoalData[ x:0.0 y:0.0 yaw:199.375 coordinateTolerance:25.0 yawTolerance:6.283185307179586 frame:map ]
14:16:22 DEBUG ObjectSlot: memorized GrammarNonTerminal [name=, subsymbols=[GrammarNonTerminal [name=question, subsymbols=[GrammarNonTerminal [name=quest_arena, subsymbols=[GrammarNonTerminal [name=arena2, subsymbols=[UtterancePart [word=in], UtterancePart [word=which room is the], GrammarNonTerminal [name=location, subsymbols=[UtterancePart [word=dining table]]]]]]]]]]]
14:16:22 DEBUG SkillRunner:   PepperGetSourceAndGNT#bmb -> end() returned: success
14:16:22 DEBUG SCXMLSkillRunner:   Fire event: PepperGetSourceAndGNT.success.question
14:16:22 DEBUG SkillStateMachine: FIRE SKILL Event: PepperGetSourceAndGNT.success.question
14:16:22 INFO  SkillStateMachine: #onTransition: "tasks.speechrec.PepperGetSourceAndGNT#bmb" --> "tasks.speechrec.PepperGetSourceAndGNT#bmb "event: "PepperGetSourceAndGNT.success.question"
14:16:22 INFO  SkillStateMachine: ## SEND ## Event:'bmb.success'
14:16:22 DEBUG SkillStateMachine: #OnExit: tasks.speechrec.PepperGetSourceAndGNT#bmb
14:16:22 DEBUG SkillStateMachine: #OnExit: bmb
14:16:22 INFO  SkillStateMachine: #onTransition: "bmb" --> "bmb "event: "bmb.success"
14:16:22 DEBUG SkillStateMachine: #OnEntry: bmb
14:16:22 INFO  SkillStateMachine: ## ASSIGN ## Name:SENSOR Expr:'SpeechSensor'
14:16:22 INFO  SkillStateMachine: ## ASSIGN ## Name:TURN_TO_SOURCE Expr:'true'
14:16:22 INFO  SkillStateMachine: ## ASSIGN ## Name:questionsAskedBmb Expr:questionsAsked+1
14:16:22 INFO  SkillStateMachine: ## ASSIGN ## Name:exitWoGNT Expr:'true'
14:16:22 DEBUG SkillStateMachine: #OnEntry: tasks.speechrec.PepperGetSourceAndGNT#bmb
14:16:22 INFO  SkillStateMachine: data id:#_SENSOR with expr='@SENSOR'changed to:SpeechSensor
14:16:22 INFO  SkillStateMachine: data id:#_TURN_TO_SOURCE with expr='@TURN_TO_SOURCE'changed to:true
14:16:22 INFO  SkillStateMachine: data id:#_TIMEOUT with expr='@TIMEOUT'changed to:-1
14:16:22 INFO  SkillStateMachine: data id:#_ALLOW_EXITING_WITHOUT_GNT with expr='@exitWoGNT'changed to:true
14:16:22 INFO  SkillStateMachine: ##INVOKE   PepperGetSourceAndGNT#bmb
14:16:22 DEBUG SkillConfigurator: request bool #_TURN_TO_SOURCE default:true
14:16:22 DEBUG SkillConfigurator: request value #_SENSOR
14:16:22 DEBUG PepperGetSourceAndGNT: wait for nt using speech sensor:SpeechSensor
14:16:22 DEBUG SkillConfigurator: request INT #_TIMEOUT default:-1
14:16:22 DEBUG SkillConfigurator: request double #_MAX_DISTANCE default:2.0
14:16:22 DEBUG SkillConfigurator: request value #_NONTERMINALS
14:16:22 DEBUG SkillConfigurator: request bool #_DISABLE_CONCAT_UNDERSCORE default:false
14:16:22 DEBUG SkillConfigurator: request value #_NONTERMINALS_TO_CONFIRM default:#N/A#
14:16:22 DEBUG SkillConfigurator: request value #_TEXT default:#N/A#
14:16:22 DEBUG SkillConfigurator: request bool #_ALLOW_EXITING_WITHOUT_GNT default:false
14:16:22 DEBUG SkillRunner:   PepperGetSourceAndGNT#bmb -> invoke configure().
14:16:22 DEBUG PepperGetSourceAndGNT: wait for nt using speech sensor:SpeechSensor
14:16:22 INFO  BonsaiManager: Creating a sensor instance with key 'SpeechSensor' and dataType 'class de.unibi.citec.clf.btl.data.speechrec.Utterance'
14:16:22 TRACE RosFactory: create sensor for: class de.unibi.citec.clf.btl.data.speechrec.Utterance
14:16:22 INFO  BonsaiManager: Creating an actuator instance with key 'SpeechActuator' and type 'interface de.unibi.citec.clf.bonsai.actuators.SpeechActuator'
14:16:22 TRACE RosFactory: create actuator: interface de.unibi.citec.clf.bonsai.actuators.SpeechActuator
14:16:22 INFO  BonsaiManager: Creating an actuator instance with key 'SSLActuator' and type 'interface de.unibi.citec.clf.bonsai.actuators.SSLActuator'
14:16:22 TRACE RosFactory: create actuator: interface de.unibi.citec.clf.bonsai.actuators.SSLActuator
14:16:22 INFO  BonsaiManager: Creating an working memory instance with key 'WorkingMemory'
14:16:22 DEBUG DefaultMemory: getSlot /behaviors/answerQuestion/nav[class de.unibi.citec.clf.btl.data.navigation.NavigationGoalData]
14:16:22 INFO  BonsaiManager: Creating an working memory instance with key 'WorkingMemory'
14:16:22 DEBUG DefaultMemory: getSlot /behaviors/answerQuestion/tree[class de.unibi.citec.clf.btl.data.speechrec.GrammarTree]
14:16:22 DEBUG SkillRunner:   PepperGetSourceAndGNT#bmb -> invoke init()
14:16:22 DEBUG SimpleSpeechHelper: start listening
14:16:22 DEBUG SkillRunner:   PepperGetSourceAndGNT#bmb -> init() returned: true
14:16:22 DEBUG SkillRunner:   PepperGetSourceAndGNT#bmb -> invoke execute()
14:16:31 DEBUG SimpleSpeechHelper: got new data: 
14:16:31 DEBUG SimpleSpeechHelper: is valid: false
14:16:31 DEBUG PepperGetSourceAndGNT: num of Utterances: 1
14:16:31 DEBUG PepperGetSourceAndGNT: understanding is null
14:16:31 DEBUG PepperGetSourceAndGNT: exit without GNT
14:16:31 DEBUG PepperGetSourceAndGNT: ######################## TRYING TO GET SSL IN LOOP #################
14:16:31 DEBUG PepperGetSourceAndGNT: ######################## SSL IS VALID #################
14:16:31 DEBUG SkillRunner:   PepperGetSourceAndGNT#bmb -> execute() returned: success
14:16:31 DEBUG SkillRunner:   PepperGetSourceAndGNT#bmb -> invoke end()
14:16:31 DEBUG ObjectSlot: memorized NavigationGoalData[ x:0.0 y:0.0 yaw:205.875 coordinateTolerance:25.0 yawTolerance:6.283185307179586 frame:map ]
14:16:31 DEBUG SkillRunner:   PepperGetSourceAndGNT#bmb -> end() returned: success
14:16:31 DEBUG SCXMLSkillRunner:   Fire event: PepperGetSourceAndGNT.success.exitWoGNT
14:16:31 DEBUG SkillStateMachine: FIRE SKILL Event: PepperGetSourceAndGNT.success.exitWoGNT
14:16:31 INFO  SkillStateMachine: #onTransition: "tasks.speechrec.PepperGetSourceAndGNT#bmb" --> "tasks.speechrec.PepperGetSourceAndGNT#bmb "event: "PepperGetSourceAndGNT.success.exitWoGNT"
14:16:31 INFO  SkillStateMachine: ## SEND ## Event:'bmb.again'
14:16:31 DEBUG SkillStateMachine: #OnExit: tasks.speechrec.PepperGetSourceAndGNT#bmb
14:16:31 DEBUG SkillStateMachine: #OnExit: bmb
14:16:31 INFO  SkillStateMachine: #onTransition: "bmb" --> "bmb "event: "bmb.again"
14:16:31 DEBUG SkillStateMachine: #OnEntry: bmb
14:16:31 INFO  SkillStateMachine: ## ASSIGN ## Name:SENSOR Expr:'SpeechSensor'
14:16:31 INFO  SkillStateMachine: ## ASSIGN ## Name:TURN_TO_SOURCE Expr:'true'
14:16:31 INFO  SkillStateMachine: ## ASSIGN ## Name:questionsAskedBmb Expr:questionsAsked+1
14:16:31 INFO  SkillStateMachine: ## ASSIGN ## Name:exitWoGNT Expr:'true'
14:16:31 DEBUG SkillStateMachine: #OnEntry: tasks.speechrec.PepperGetSourceAndGNT#bmb
14:16:31 INFO  SkillStateMachine: data id:#_SENSOR with expr='@SENSOR'changed to:SpeechSensor
14:16:31 INFO  SkillStateMachine: data id:#_TURN_TO_SOURCE with expr='@TURN_TO_SOURCE'changed to:true
14:16:31 INFO  SkillStateMachine: data id:#_TIMEOUT with expr='@TIMEOUT'changed to:-1
14:16:31 INFO  SkillStateMachine: data id:#_ALLOW_EXITING_WITHOUT_GNT with expr='@exitWoGNT'changed to:true
14:16:31 INFO  SkillStateMachine: ##INVOKE   PepperGetSourceAndGNT#bmb
14:16:31 DEBUG SkillConfigurator: request bool #_TURN_TO_SOURCE default:true
14:16:31 DEBUG SkillConfigurator: request value #_SENSOR
14:16:31 DEBUG PepperGetSourceAndGNT: wait for nt using speech sensor:SpeechSensor
14:16:31 DEBUG SkillConfigurator: request INT #_TIMEOUT default:-1
14:16:31 DEBUG SkillConfigurator: request double #_MAX_DISTANCE default:2.0
14:16:31 DEBUG SkillConfigurator: request value #_NONTERMINALS
14:16:31 DEBUG SkillConfigurator: request bool #_DISABLE_CONCAT_UNDERSCORE default:false
14:16:31 DEBUG SkillConfigurator: request value #_NONTERMINALS_TO_CONFIRM default:#N/A#
14:16:31 DEBUG SkillConfigurator: request value #_TEXT default:#N/A#
14:16:31 DEBUG SkillConfigurator: request bool #_ALLOW_EXITING_WITHOUT_GNT default:false
14:16:31 DEBUG SkillRunner:   PepperGetSourceAndGNT#bmb -> invoke configure().
14:16:31 DEBUG PepperGetSourceAndGNT: wait for nt using speech sensor:SpeechSensor
14:16:31 INFO  BonsaiManager: Creating a sensor instance with key 'SpeechSensor' and dataType 'class de.unibi.citec.clf.btl.data.speechrec.Utterance'
14:16:31 TRACE RosFactory: create sensor for: class de.unibi.citec.clf.btl.data.speechrec.Utterance
14:16:31 INFO  BonsaiManager: Creating an actuator instance with key 'SpeechActuator' and type 'interface de.unibi.citec.clf.bonsai.actuators.SpeechActuator'
14:16:31 TRACE RosFactory: create actuator: interface de.unibi.citec.clf.bonsai.actuators.SpeechActuator
14:16:31 INFO  BonsaiManager: Creating an actuator instance with key 'SSLActuator' and type 'interface de.unibi.citec.clf.bonsai.actuators.SSLActuator'
14:16:31 TRACE RosFactory: create actuator: interface de.unibi.citec.clf.bonsai.actuators.SSLActuator
14:16:31 INFO  BonsaiManager: Creating an working memory instance with key 'WorkingMemory'
14:16:31 DEBUG DefaultMemory: getSlot /behaviors/answerQuestion/nav[class de.unibi.citec.clf.btl.data.navigation.NavigationGoalData]
14:16:31 INFO  BonsaiManager: Creating an working memory instance with key 'WorkingMemory'
14:16:31 DEBUG DefaultMemory: getSlot /behaviors/answerQuestion/tree[class de.unibi.citec.clf.btl.data.speechrec.GrammarTree]
14:16:31 DEBUG SkillRunner:   PepperGetSourceAndGNT#bmb -> invoke init()
14:16:31 DEBUG SimpleSpeechHelper: start listening
14:16:31 DEBUG SkillRunner:   PepperGetSourceAndGNT#bmb -> init() returned: true
14:16:31 DEBUG SkillRunner:   PepperGetSourceAndGNT#bmb -> invoke execute()
14:16:34 DEBUG SimpleSpeechHelper: got new data: 
14:16:34 DEBUG SimpleSpeechHelper: is valid: false
14:16:34 DEBUG PepperGetSourceAndGNT: num of Utterances: 1
14:16:34 DEBUG PepperGetSourceAndGNT: understanding is null
14:16:34 DEBUG PepperGetSourceAndGNT: exit without GNT
14:16:34 DEBUG PepperGetSourceAndGNT: ######################## TRYING TO GET SSL IN LOOP #################
14:16:34 DEBUG PepperGetSourceAndGNT: ######################## SSL IS VALID #################
14:16:34 DEBUG SkillRunner:   PepperGetSourceAndGNT#bmb -> execute() returned: success
14:16:34 DEBUG SkillRunner:   PepperGetSourceAndGNT#bmb -> invoke end()
14:16:34 DEBUG ObjectSlot: memorized NavigationGoalData[ x:0.0 y:0.0 yaw:177.875 coordinateTolerance:25.0 yawTolerance:6.283185307179586 frame:map ]
14:16:34 DEBUG SkillRunner:   PepperGetSourceAndGNT#bmb -> end() returned: success
14:16:34 DEBUG SCXMLSkillRunner:   Fire event: PepperGetSourceAndGNT.success.exitWoGNT
14:16:34 DEBUG SkillStateMachine: FIRE SKILL Event: PepperGetSourceAndGNT.success.exitWoGNT
14:16:34 INFO  SkillStateMachine: #onTransition: "tasks.speechrec.PepperGetSourceAndGNT#bmb" --> "tasks.speechrec.PepperGetSourceAndGNT#bmb "event: "PepperGetSourceAndGNT.success.exitWoGNT"
14:16:34 INFO  SkillStateMachine: ## SEND ## Event:'bmb.again'
14:16:34 DEBUG SkillStateMachine: #OnExit: tasks.speechrec.PepperGetSourceAndGNT#bmb
14:16:34 DEBUG SkillStateMachine: #OnExit: bmb
14:16:34 INFO  SkillStateMachine: #onTransition: "bmb" --> "bmb "event: "bmb.again"
14:16:34 DEBUG SkillStateMachine: #OnEntry: bmb
14:16:34 INFO  SkillStateMachine: ## ASSIGN ## Name:SENSOR Expr:'SpeechSensor'
14:16:34 INFO  SkillStateMachine: ## ASSIGN ## Name:TURN_TO_SOURCE Expr:'true'
14:16:34 INFO  SkillStateMachine: ## ASSIGN ## Name:questionsAskedBmb Expr:questionsAsked+1
14:16:34 INFO  SkillStateMachine: ## ASSIGN ## Name:exitWoGNT Expr:'true'
14:16:34 DEBUG SkillStateMachine: #OnEntry: tasks.speechrec.PepperGetSourceAndGNT#bmb
14:16:34 INFO  SkillStateMachine: data id:#_SENSOR with expr='@SENSOR'changed to:SpeechSensor
14:16:34 INFO  SkillStateMachine: data id:#_TURN_TO_SOURCE with expr='@TURN_TO_SOURCE'changed to:true
14:16:34 INFO  SkillStateMachine: data id:#_TIMEOUT with expr='@TIMEOUT'changed to:-1
14:16:34 INFO  SkillStateMachine: data id:#_ALLOW_EXITING_WITHOUT_GNT with expr='@exitWoGNT'changed to:true
14:16:34 INFO  SkillStateMachine: ##INVOKE   PepperGetSourceAndGNT#bmb
14:16:34 DEBUG SkillConfigurator: request bool #_TURN_TO_SOURCE default:true
14:16:34 DEBUG SkillConfigurator: request value #_SENSOR
14:16:34 DEBUG PepperGetSourceAndGNT: wait for nt using speech sensor:SpeechSensor
14:16:34 DEBUG SkillConfigurator: request INT #_TIMEOUT default:-1
14:16:34 DEBUG SkillConfigurator: request double #_MAX_DISTANCE default:2.0
14:16:34 DEBUG SkillConfigurator: request value #_NONTERMINALS
14:16:34 DEBUG SkillConfigurator: request bool #_DISABLE_CONCAT_UNDERSCORE default:false
14:16:34 DEBUG SkillConfigurator: request value #_NONTERMINALS_TO_CONFIRM default:#N/A#
14:16:34 DEBUG SkillConfigurator: request value #_TEXT default:#N/A#
14:16:34 DEBUG SkillConfigurator: request bool #_ALLOW_EXITING_WITHOUT_GNT default:false
14:16:34 DEBUG SkillRunner:   PepperGetSourceAndGNT#bmb -> invoke configure().
14:16:34 DEBUG PepperGetSourceAndGNT: wait for nt using speech sensor:SpeechSensor
14:16:34 INFO  BonsaiManager: Creating a sensor instance with key 'SpeechSensor' and dataType 'class de.unibi.citec.clf.btl.data.speechrec.Utterance'
14:16:34 TRACE RosFactory: create sensor for: class de.unibi.citec.clf.btl.data.speechrec.Utterance
14:16:34 INFO  BonsaiManager: Creating an actuator instance with key 'SpeechActuator' and type 'interface de.unibi.citec.clf.bonsai.actuators.SpeechActuator'
14:16:34 TRACE RosFactory: create actuator: interface de.unibi.citec.clf.bonsai.actuators.SpeechActuator
14:16:34 INFO  BonsaiManager: Creating an actuator instance with key 'SSLActuator' and type 'interface de.unibi.citec.clf.bonsai.actuators.SSLActuator'
14:16:34 TRACE RosFactory: create actuator: interface de.unibi.citec.clf.bonsai.actuators.SSLActuator
14:16:34 INFO  BonsaiManager: Creating an working memory instance with key 'WorkingMemory'
14:16:34 DEBUG DefaultMemory: getSlot /behaviors/answerQuestion/nav[class de.unibi.citec.clf.btl.data.navigation.NavigationGoalData]
14:16:34 INFO  BonsaiManager: Creating an working memory instance with key 'WorkingMemory'
14:16:34 DEBUG DefaultMemory: getSlot /behaviors/answerQuestion/tree[class de.unibi.citec.clf.btl.data.speechrec.GrammarTree]
14:16:34 DEBUG SkillRunner:   PepperGetSourceAndGNT#bmb -> invoke init()
14:16:34 DEBUG SimpleSpeechHelper: start listening
14:16:34 DEBUG SkillRunner:   PepperGetSourceAndGNT#bmb -> init() returned: true
14:16:34 DEBUG SkillRunner:   PepperGetSourceAndGNT#bmb -> invoke execute()
14:16:41 DEBUG SimpleSpeechHelper: got new data: 
14:16:41 DEBUG SimpleSpeechHelper: is valid: false
14:16:41 DEBUG PepperGetSourceAndGNT: num of Utterances: 1
14:16:41 DEBUG PepperGetSourceAndGNT: understanding is null
14:16:41 DEBUG PepperGetSourceAndGNT: exit without GNT
14:16:41 DEBUG PepperGetSourceAndGNT: ######################## TRYING TO GET SSL IN LOOP #################
14:16:41 DEBUG PepperGetSourceAndGNT: ######################## SSL IS VALID #################
14:16:41 DEBUG SkillRunner:   PepperGetSourceAndGNT#bmb -> execute() returned: success
14:16:41 DEBUG SkillRunner:   PepperGetSourceAndGNT#bmb -> invoke end()
14:16:41 DEBUG ObjectSlot: memorized NavigationGoalData[ x:0.0 y:0.0 yaw:260.75 coordinateTolerance:25.0 yawTolerance:6.283185307179586 frame:map ]
14:16:41 DEBUG SkillRunner:   PepperGetSourceAndGNT#bmb -> end() returned: success
14:16:41 DEBUG SCXMLSkillRunner:   Fire event: PepperGetSourceAndGNT.success.exitWoGNT
14:16:41 DEBUG SkillStateMachine: FIRE SKILL Event: PepperGetSourceAndGNT.success.exitWoGNT
14:16:41 INFO  SkillStateMachine: #onTransition: "tasks.speechrec.PepperGetSourceAndGNT#bmb" --> "tasks.speechrec.PepperGetSourceAndGNT#bmb "event: "PepperGetSourceAndGNT.success.exitWoGNT"
14:16:41 INFO  SkillStateMachine: ## SEND ## Event:'bmb.again'
14:16:41 DEBUG SkillStateMachine: #OnExit: tasks.speechrec.PepperGetSourceAndGNT#bmb
14:16:41 DEBUG SkillStateMachine: #OnExit: bmb
14:16:41 INFO  SkillStateMachine: #onTransition: "bmb" --> "bmb "event: "bmb.again"
14:16:41 DEBUG SkillStateMachine: #OnEntry: bmb
14:16:41 INFO  SkillStateMachine: ## ASSIGN ## Name:SENSOR Expr:'SpeechSensor'
14:16:41 INFO  SkillStateMachine: ## ASSIGN ## Name:TURN_TO_SOURCE Expr:'true'
14:16:41 INFO  SkillStateMachine: ## ASSIGN ## Name:questionsAskedBmb Expr:questionsAsked+1
14:16:41 INFO  SkillStateMachine: ## ASSIGN ## Name:exitWoGNT Expr:'true'
14:16:41 DEBUG SkillStateMachine: #OnEntry: tasks.speechrec.PepperGetSourceAndGNT#bmb
14:16:41 INFO  SkillStateMachine: data id:#_SENSOR with expr='@SENSOR'changed to:SpeechSensor
14:16:41 INFO  SkillStateMachine: data id:#_TURN_TO_SOURCE with expr='@TURN_TO_SOURCE'changed to:true
14:16:41 INFO  SkillStateMachine: data id:#_TIMEOUT with expr='@TIMEOUT'changed to:-1
14:16:41 INFO  SkillStateMachine: data id:#_ALLOW_EXITING_WITHOUT_GNT with expr='@exitWoGNT'changed to:true
14:16:41 INFO  SkillStateMachine: ##INVOKE   PepperGetSourceAndGNT#bmb
14:16:41 DEBUG SkillConfigurator: request bool #_TURN_TO_SOURCE default:true
14:16:41 DEBUG SkillConfigurator: request value #_SENSOR
14:16:41 DEBUG PepperGetSourceAndGNT: wait for nt using speech sensor:SpeechSensor
14:16:41 DEBUG SkillConfigurator: request INT #_TIMEOUT default:-1
14:16:41 DEBUG SkillConfigurator: request double #_MAX_DISTANCE default:2.0
14:16:41 DEBUG SkillConfigurator: request value #_NONTERMINALS
14:16:41 DEBUG SkillConfigurator: request bool #_DISABLE_CONCAT_UNDERSCORE default:false
14:16:41 DEBUG SkillConfigurator: request value #_NONTERMINALS_TO_CONFIRM default:#N/A#
14:16:41 DEBUG SkillConfigurator: request value #_TEXT default:#N/A#
14:16:41 DEBUG SkillConfigurator: request bool #_ALLOW_EXITING_WITHOUT_GNT default:false
14:16:41 DEBUG SkillRunner:   PepperGetSourceAndGNT#bmb -> invoke configure().
14:16:41 DEBUG PepperGetSourceAndGNT: wait for nt using speech sensor:SpeechSensor
14:16:41 INFO  BonsaiManager: Creating a sensor instance with key 'SpeechSensor' and dataType 'class de.unibi.citec.clf.btl.data.speechrec.Utterance'
14:16:41 TRACE RosFactory: create sensor for: class de.unibi.citec.clf.btl.data.speechrec.Utterance
14:16:41 INFO  BonsaiManager: Creating an actuator instance with key 'SpeechActuator' and type 'interface de.unibi.citec.clf.bonsai.actuators.SpeechActuator'
14:16:41 TRACE RosFactory: create actuator: interface de.unibi.citec.clf.bonsai.actuators.SpeechActuator
14:16:41 INFO  BonsaiManager: Creating an actuator instance with key 'SSLActuator' and type 'interface de.unibi.citec.clf.bonsai.actuators.SSLActuator'
14:16:41 TRACE RosFactory: create actuator: interface de.unibi.citec.clf.bonsai.actuators.SSLActuator
14:16:41 INFO  BonsaiManager: Creating an working memory instance with key 'WorkingMemory'
14:16:41 DEBUG DefaultMemory: getSlot /behaviors/answerQuestion/nav[class de.unibi.citec.clf.btl.data.navigation.NavigationGoalData]
14:16:41 INFO  BonsaiManager: Creating an working memory instance with key 'WorkingMemory'
14:16:41 DEBUG DefaultMemory: getSlot /behaviors/answerQuestion/tree[class de.unibi.citec.clf.btl.data.speechrec.GrammarTree]
14:16:41 DEBUG SkillRunner:   PepperGetSourceAndGNT#bmb -> invoke init()
14:16:41 DEBUG SimpleSpeechHelper: start listening
14:16:41 DEBUG SkillRunner:   PepperGetSourceAndGNT#bmb -> init() returned: true
14:16:41 DEBUG SkillRunner:   PepperGetSourceAndGNT#bmb -> invoke execute()
14:16:42 DEBUG SimpleSpeechHelper: got new data: 
14:16:42 DEBUG SimpleSpeechHelper: is valid: false
14:16:42 DEBUG PepperGetSourceAndGNT: num of Utterances: 1
14:16:42 DEBUG PepperGetSourceAndGNT: understanding is null
14:16:42 DEBUG PepperGetSourceAndGNT: exit without GNT
14:16:42 DEBUG PepperGetSourceAndGNT: ######################## TRYING TO GET SSL IN LOOP #################
14:16:42 DEBUG PepperGetSourceAndGNT: ######################## SSL IS VALID #################
14:16:42 DEBUG SkillRunner:   PepperGetSourceAndGNT#bmb -> execute() returned: success
14:16:42 DEBUG SkillRunner:   PepperGetSourceAndGNT#bmb -> invoke end()
14:16:42 DEBUG ObjectSlot: memorized NavigationGoalData[ x:0.0 y:0.0 yaw:177.0 coordinateTolerance:25.0 yawTolerance:6.283185307179586 frame:map ]
14:16:42 DEBUG SkillRunner:   PepperGetSourceAndGNT#bmb -> end() returned: success
14:16:42 DEBUG SCXMLSkillRunner:   Fire event: PepperGetSourceAndGNT.success.exitWoGNT
14:16:42 DEBUG SkillStateMachine: FIRE SKILL Event: PepperGetSourceAndGNT.success.exitWoGNT
14:16:42 INFO  SkillStateMachine: #onTransition: "tasks.speechrec.PepperGetSourceAndGNT#bmb" --> "tasks.speechrec.PepperGetSourceAndGNT#bmb "event: "PepperGetSourceAndGNT.success.exitWoGNT"
14:16:42 INFO  SkillStateMachine: ## SEND ## Event:'bmb.again'
14:16:42 DEBUG SkillStateMachine: #OnExit: tasks.speechrec.PepperGetSourceAndGNT#bmb
14:16:42 DEBUG SkillStateMachine: #OnExit: bmb
14:16:42 INFO  SkillStateMachine: #onTransition: "bmb" --> "bmb "event: "bmb.again"
14:16:42 DEBUG SkillStateMachine: #OnEntry: bmb
14:16:42 INFO  SkillStateMachine: ## ASSIGN ## Name:SENSOR Expr:'SpeechSensor'
14:16:42 INFO  SkillStateMachine: ## ASSIGN ## Name:TURN_TO_SOURCE Expr:'true'
14:16:42 INFO  SkillStateMachine: ## ASSIGN ## Name:questionsAskedBmb Expr:questionsAsked+1
14:16:42 INFO  SkillStateMachine: ## ASSIGN ## Name:exitWoGNT Expr:'true'
14:16:42 DEBUG SkillStateMachine: #OnEntry: tasks.speechrec.PepperGetSourceAndGNT#bmb
14:16:42 INFO  SkillStateMachine: data id:#_SENSOR with expr='@SENSOR'changed to:SpeechSensor
14:16:42 INFO  SkillStateMachine: data id:#_TURN_TO_SOURCE with expr='@TURN_TO_SOURCE'changed to:true
14:16:42 INFO  SkillStateMachine: data id:#_TIMEOUT with expr='@TIMEOUT'changed to:-1
14:16:42 INFO  SkillStateMachine: data id:#_ALLOW_EXITING_WITHOUT_GNT with expr='@exitWoGNT'changed to:true
14:16:42 INFO  SkillStateMachine: ##INVOKE   PepperGetSourceAndGNT#bmb
14:16:42 DEBUG SkillConfigurator: request bool #_TURN_TO_SOURCE default:true
14:16:42 DEBUG SkillConfigurator: request value #_SENSOR
14:16:42 DEBUG PepperGetSourceAndGNT: wait for nt using speech sensor:SpeechSensor
14:16:42 DEBUG SkillConfigurator: request INT #_TIMEOUT default:-1
14:16:42 DEBUG SkillConfigurator: request double #_MAX_DISTANCE default:2.0
14:16:42 DEBUG SkillConfigurator: request value #_NONTERMINALS
14:16:42 DEBUG SkillConfigurator: request bool #_DISABLE_CONCAT_UNDERSCORE default:false
14:16:42 DEBUG SkillConfigurator: request value #_NONTERMINALS_TO_CONFIRM default:#N/A#
14:16:42 DEBUG SkillConfigurator: request value #_TEXT default:#N/A#
14:16:42 DEBUG SkillConfigurator: request bool #_ALLOW_EXITING_WITHOUT_GNT default:false
14:16:42 DEBUG SkillRunner:   PepperGetSourceAndGNT#bmb -> invoke configure().
14:16:42 DEBUG PepperGetSourceAndGNT: wait for nt using speech sensor:SpeechSensor
14:16:42 INFO  BonsaiManager: Creating a sensor instance with key 'SpeechSensor' and dataType 'class de.unibi.citec.clf.btl.data.speechrec.Utterance'
14:16:42 TRACE RosFactory: create sensor for: class de.unibi.citec.clf.btl.data.speechrec.Utterance
14:16:42 INFO  BonsaiManager: Creating an actuator instance with key 'SpeechActuator' and type 'interface de.unibi.citec.clf.bonsai.actuators.SpeechActuator'
14:16:42 TRACE RosFactory: create actuator: interface de.unibi.citec.clf.bonsai.actuators.SpeechActuator
14:16:42 INFO  BonsaiManager: Creating an actuator instance with key 'SSLActuator' and type 'interface de.unibi.citec.clf.bonsai.actuators.SSLActuator'
14:16:42 TRACE RosFactory: create actuator: interface de.unibi.citec.clf.bonsai.actuators.SSLActuator
14:16:42 INFO  BonsaiManager: Creating an working memory instance with key 'WorkingMemory'
14:16:42 DEBUG DefaultMemory: getSlot /behaviors/answerQuestion/nav[class de.unibi.citec.clf.btl.data.navigation.NavigationGoalData]
14:16:42 INFO  BonsaiManager: Creating an working memory instance with key 'WorkingMemory'
14:16:42 DEBUG DefaultMemory: getSlot /behaviors/answerQuestion/tree[class de.unibi.citec.clf.btl.data.speechrec.GrammarTree]
14:16:42 DEBUG SkillRunner:   PepperGetSourceAndGNT#bmb -> invoke init()
14:16:42 DEBUG SimpleSpeechHelper: start listening
14:16:42 DEBUG SkillRunner:   PepperGetSourceAndGNT#bmb -> init() returned: true
14:16:42 DEBUG SkillRunner:   PepperGetSourceAndGNT#bmb -> invoke execute()
14:16:43 DEBUG SimpleSpeechHelper: got new data: 
14:16:43 DEBUG SimpleSpeechHelper: is valid: false
14:16:43 DEBUG PepperGetSourceAndGNT: num of Utterances: 1
14:16:43 DEBUG PepperGetSourceAndGNT: understanding is null
14:16:43 DEBUG PepperGetSourceAndGNT: exit without GNT
14:16:43 DEBUG PepperGetSourceAndGNT: ######################## TRYING TO GET SSL IN LOOP #################
14:16:44 DEBUG PepperGetSourceAndGNT: ######################## SSL IS VALID #################
14:16:44 DEBUG SkillRunner:   PepperGetSourceAndGNT#bmb -> execute() returned: success
14:16:44 DEBUG SkillRunner:   PepperGetSourceAndGNT#bmb -> invoke end()
14:16:44 DEBUG ObjectSlot: memorized NavigationGoalData[ x:0.0 y:0.0 yaw:170.25 coordinateTolerance:25.0 yawTolerance:6.283185307179586 frame:map ]
14:16:44 DEBUG SkillRunner:   PepperGetSourceAndGNT#bmb -> end() returned: success
14:16:44 DEBUG SCXMLSkillRunner:   Fire event: PepperGetSourceAndGNT.success.exitWoGNT
14:16:44 DEBUG SkillStateMachine: FIRE SKILL Event: PepperGetSourceAndGNT.success.exitWoGNT
14:16:44 INFO  SkillStateMachine: #onTransition: "tasks.speechrec.PepperGetSourceAndGNT#bmb" --> "tasks.speechrec.PepperGetSourceAndGNT#bmb "event: "PepperGetSourceAndGNT.success.exitWoGNT"
14:16:44 INFO  SkillStateMachine: ## SEND ## Event:'bmb.again'
14:16:44 DEBUG SkillStateMachine: #OnExit: tasks.speechrec.PepperGetSourceAndGNT#bmb
14:16:44 DEBUG SkillStateMachine: #OnExit: bmb
14:16:44 INFO  SkillStateMachine: #onTransition: "bmb" --> "bmb "event: "bmb.again"
14:16:44 DEBUG SkillStateMachine: #OnEntry: bmb
14:16:44 INFO  SkillStateMachine: ## ASSIGN ## Name:SENSOR Expr:'SpeechSensor'
14:16:44 INFO  SkillStateMachine: ## ASSIGN ## Name:TURN_TO_SOURCE Expr:'true'
14:16:44 INFO  SkillStateMachine: ## ASSIGN ## Name:questionsAskedBmb Expr:questionsAsked+1
14:16:44 INFO  SkillStateMachine: ## ASSIGN ## Name:exitWoGNT Expr:'true'
14:16:44 DEBUG SkillStateMachine: #OnEntry: tasks.speechrec.PepperGetSourceAndGNT#bmb
14:16:44 INFO  SkillStateMachine: data id:#_SENSOR with expr='@SENSOR'changed to:SpeechSensor
14:16:44 INFO  SkillStateMachine: data id:#_TURN_TO_SOURCE with expr='@TURN_TO_SOURCE'changed to:true
14:16:44 INFO  SkillStateMachine: data id:#_TIMEOUT with expr='@TIMEOUT'changed to:-1
14:16:44 INFO  SkillStateMachine: data id:#_ALLOW_EXITING_WITHOUT_GNT with expr='@exitWoGNT'changed to:true
14:16:44 INFO  SkillStateMachine: ##INVOKE   PepperGetSourceAndGNT#bmb
14:16:44 DEBUG SkillConfigurator: request bool #_TURN_TO_SOURCE default:true
14:16:44 DEBUG SkillConfigurator: request value #_SENSOR
14:16:44 DEBUG PepperGetSourceAndGNT: wait for nt using speech sensor:SpeechSensor
14:16:44 DEBUG SkillConfigurator: request INT #_TIMEOUT default:-1
14:16:44 DEBUG SkillConfigurator: request double #_MAX_DISTANCE default:2.0
14:16:44 DEBUG SkillConfigurator: request value #_NONTERMINALS
14:16:44 DEBUG SkillConfigurator: request bool #_DISABLE_CONCAT_UNDERSCORE default:false
14:16:44 DEBUG SkillConfigurator: request value #_NONTERMINALS_TO_CONFIRM default:#N/A#
14:16:44 DEBUG SkillConfigurator: request value #_TEXT default:#N/A#
14:16:44 DEBUG SkillConfigurator: request bool #_ALLOW_EXITING_WITHOUT_GNT default:false
14:16:44 DEBUG SkillRunner:   PepperGetSourceAndGNT#bmb -> invoke configure().
14:16:44 DEBUG PepperGetSourceAndGNT: wait for nt using speech sensor:SpeechSensor
14:16:44 INFO  BonsaiManager: Creating a sensor instance with key 'SpeechSensor' and dataType 'class de.unibi.citec.clf.btl.data.speechrec.Utterance'
14:16:44 TRACE RosFactory: create sensor for: class de.unibi.citec.clf.btl.data.speechrec.Utterance
14:16:44 INFO  BonsaiManager: Creating an actuator instance with key 'SpeechActuator' and type 'interface de.unibi.citec.clf.bonsai.actuators.SpeechActuator'
14:16:44 TRACE RosFactory: create actuator: interface de.unibi.citec.clf.bonsai.actuators.SpeechActuator
14:16:44 INFO  BonsaiManager: Creating an actuator instance with key 'SSLActuator' and type 'interface de.unibi.citec.clf.bonsai.actuators.SSLActuator'
14:16:44 TRACE RosFactory: create actuator: interface de.unibi.citec.clf.bonsai.actuators.SSLActuator
14:16:44 INFO  BonsaiManager: Creating an working memory instance with key 'WorkingMemory'
14:16:44 DEBUG DefaultMemory: getSlot /behaviors/answerQuestion/nav[class de.unibi.citec.clf.btl.data.navigation.NavigationGoalData]
14:16:44 INFO  BonsaiManager: Creating an working memory instance with key 'WorkingMemory'
14:16:44 DEBUG DefaultMemory: getSlot /behaviors/answerQuestion/tree[class de.unibi.citec.clf.btl.data.speechrec.GrammarTree]
14:16:44 DEBUG SkillRunner:   PepperGetSourceAndGNT#bmb -> invoke init()
14:16:44 DEBUG SimpleSpeechHelper: start listening
14:16:44 DEBUG SkillRunner:   PepperGetSourceAndGNT#bmb -> init() returned: true
14:16:44 DEBUG SkillRunner:   PepperGetSourceAndGNT#bmb -> invoke execute()
14:16:50 DEBUG SimpleSpeechHelper: got new data: 
14:16:50 DEBUG SimpleSpeechHelper: is valid: false
14:16:50 DEBUG PepperGetSourceAndGNT: num of Utterances: 1
14:16:50 DEBUG PepperGetSourceAndGNT: understanding is null
14:16:50 DEBUG PepperGetSourceAndGNT: exit without GNT
14:16:50 DEBUG PepperGetSourceAndGNT: ######################## TRYING TO GET SSL IN LOOP #################
14:16:50 DEBUG PepperGetSourceAndGNT: ######################## SSL IS VALID #################
14:16:50 DEBUG SkillRunner:   PepperGetSourceAndGNT#bmb -> execute() returned: success
14:16:50 DEBUG SkillRunner:   PepperGetSourceAndGNT#bmb -> invoke end()
14:16:50 DEBUG ObjectSlot: memorized NavigationGoalData[ x:0.0 y:0.0 yaw:145.875 coordinateTolerance:25.0 yawTolerance:6.283185307179586 frame:map ]
14:16:50 DEBUG SkillRunner:   PepperGetSourceAndGNT#bmb -> end() returned: success
14:16:50 DEBUG SCXMLSkillRunner:   Fire event: PepperGetSourceAndGNT.success.exitWoGNT
14:16:50 DEBUG SkillStateMachine: FIRE SKILL Event: PepperGetSourceAndGNT.success.exitWoGNT
14:16:50 INFO  SkillStateMachine: #onTransition: "tasks.speechrec.PepperGetSourceAndGNT#bmb" --> "tasks.speechrec.PepperGetSourceAndGNT#bmb "event: "PepperGetSourceAndGNT.success.exitWoGNT"
14:16:50 INFO  SkillStateMachine: ## SEND ## Event:'bmb.again'
14:16:50 DEBUG SkillStateMachine: #OnExit: tasks.speechrec.PepperGetSourceAndGNT#bmb
14:16:50 DEBUG SkillStateMachine: #OnExit: bmb
14:16:50 INFO  SkillStateMachine: #onTransition: "bmb" --> "bmb "event: "bmb.again"
14:16:50 DEBUG SkillStateMachine: #OnEntry: bmb
14:16:50 INFO  SkillStateMachine: ## ASSIGN ## Name:SENSOR Expr:'SpeechSensor'
14:16:50 INFO  SkillStateMachine: ## ASSIGN ## Name:TURN_TO_SOURCE Expr:'true'
14:16:50 INFO  SkillStateMachine: ## ASSIGN ## Name:questionsAskedBmb Expr:questionsAsked+1
14:16:50 INFO  SkillStateMachine: ## ASSIGN ## Name:exitWoGNT Expr:'true'
14:16:50 DEBUG SkillStateMachine: #OnEntry: tasks.speechrec.PepperGetSourceAndGNT#bmb
14:16:50 INFO  SkillStateMachine: data id:#_SENSOR with expr='@SENSOR'changed to:SpeechSensor
14:16:50 INFO  SkillStateMachine: data id:#_TURN_TO_SOURCE with expr='@TURN_TO_SOURCE'changed to:true
14:16:50 INFO  SkillStateMachine: data id:#_TIMEOUT with expr='@TIMEOUT'changed to:-1
14:16:50 INFO  SkillStateMachine: data id:#_ALLOW_EXITING_WITHOUT_GNT with expr='@exitWoGNT'changed to:true
14:16:50 INFO  SkillStateMachine: ##INVOKE   PepperGetSourceAndGNT#bmb
14:16:50 DEBUG SkillConfigurator: request bool #_TURN_TO_SOURCE default:true
14:16:50 DEBUG SkillConfigurator: request value #_SENSOR
14:16:50 DEBUG PepperGetSourceAndGNT: wait for nt using speech sensor:SpeechSensor
14:16:50 DEBUG SkillConfigurator: request INT #_TIMEOUT default:-1
14:16:50 DEBUG SkillConfigurator: request double #_MAX_DISTANCE default:2.0
14:16:50 DEBUG SkillConfigurator: request value #_NONTERMINALS
14:16:50 DEBUG SkillConfigurator: request bool #_DISABLE_CONCAT_UNDERSCORE default:false
14:16:50 DEBUG SkillConfigurator: request value #_NONTERMINALS_TO_CONFIRM default:#N/A#
14:16:50 DEBUG SkillConfigurator: request value #_TEXT default:#N/A#
14:16:50 DEBUG SkillConfigurator: request bool #_ALLOW_EXITING_WITHOUT_GNT default:false
14:16:50 DEBUG SkillRunner:   PepperGetSourceAndGNT#bmb -> invoke configure().
14:16:50 DEBUG PepperGetSourceAndGNT: wait for nt using speech sensor:SpeechSensor
14:16:50 INFO  BonsaiManager: Creating a sensor instance with key 'SpeechSensor' and dataType 'class de.unibi.citec.clf.btl.data.speechrec.Utterance'
14:16:50 TRACE RosFactory: create sensor for: class de.unibi.citec.clf.btl.data.speechrec.Utterance
14:16:50 INFO  BonsaiManager: Creating an actuator instance with key 'SpeechActuator' and type 'interface de.unibi.citec.clf.bonsai.actuators.SpeechActuator'
14:16:50 TRACE RosFactory: create actuator: interface de.unibi.citec.clf.bonsai.actuators.SpeechActuator
14:16:50 INFO  BonsaiManager: Creating an actuator instance with key 'SSLActuator' and type 'interface de.unibi.citec.clf.bonsai.actuators.SSLActuator'
14:16:50 TRACE RosFactory: create actuator: interface de.unibi.citec.clf.bonsai.actuators.SSLActuator
14:16:50 INFO  BonsaiManager: Creating an working memory instance with key 'WorkingMemory'
14:16:50 DEBUG DefaultMemory: getSlot /behaviors/answerQuestion/nav[class de.unibi.citec.clf.btl.data.navigation.NavigationGoalData]
14:16:50 INFO  BonsaiManager: Creating an working memory instance with key 'WorkingMemory'
14:16:50 DEBUG DefaultMemory: getSlot /behaviors/answerQuestion/tree[class de.unibi.citec.clf.btl.data.speechrec.GrammarTree]
14:16:50 DEBUG SkillRunner:   PepperGetSourceAndGNT#bmb -> invoke init()
14:16:50 DEBUG SimpleSpeechHelper: start listening
14:16:50 DEBUG SkillRunner:   PepperGetSourceAndGNT#bmb -> init() returned: true
14:16:50 DEBUG SkillRunner:   PepperGetSourceAndGNT#bmb -> invoke execute()
14:16:54 DEBUG SimpleSpeechHelper: got new data: 
14:16:54 DEBUG SimpleSpeechHelper: is valid: false
14:16:54 DEBUG PepperGetSourceAndGNT: num of Utterances: 1
14:16:54 DEBUG PepperGetSourceAndGNT: understanding is null
14:16:54 DEBUG PepperGetSourceAndGNT: exit without GNT
14:16:54 DEBUG PepperGetSourceAndGNT: ######################## TRYING TO GET SSL IN LOOP #################
14:16:54 DEBUG PepperGetSourceAndGNT: ######################## SSL IS VALID #################
14:16:54 DEBUG SkillRunner:   PepperGetSourceAndGNT#bmb -> execute() returned: success
14:16:54 DEBUG SkillRunner:   PepperGetSourceAndGNT#bmb -> invoke end()
14:16:54 DEBUG ObjectSlot: memorized NavigationGoalData[ x:0.0 y:0.0 yaw:82.25 coordinateTolerance:25.0 yawTolerance:6.283185307179586 frame:map ]
14:16:54 DEBUG SkillRunner:   PepperGetSourceAndGNT#bmb -> end() returned: success
14:16:54 DEBUG SCXMLSkillRunner:   Fire event: PepperGetSourceAndGNT.success.exitWoGNT
14:16:54 DEBUG SkillStateMachine: FIRE SKILL Event: PepperGetSourceAndGNT.success.exitWoGNT
14:16:54 INFO  SkillStateMachine: #onTransition: "tasks.speechrec.PepperGetSourceAndGNT#bmb" --> "tasks.speechrec.PepperGetSourceAndGNT#bmb "event: "PepperGetSourceAndGNT.success.exitWoGNT"
14:16:54 INFO  SkillStateMachine: ## SEND ## Event:'bmb.again'
14:16:54 DEBUG SkillStateMachine: #OnExit: tasks.speechrec.PepperGetSourceAndGNT#bmb
14:16:54 DEBUG SkillStateMachine: #OnExit: bmb
14:16:54 INFO  SkillStateMachine: #onTransition: "bmb" --> "bmb "event: "bmb.again"
14:16:54 DEBUG SkillStateMachine: #OnEntry: bmb
14:16:54 INFO  SkillStateMachine: ## ASSIGN ## Name:SENSOR Expr:'SpeechSensor'
14:16:54 INFO  SkillStateMachine: ## ASSIGN ## Name:TURN_TO_SOURCE Expr:'true'
14:16:54 INFO  SkillStateMachine: ## ASSIGN ## Name:questionsAskedBmb Expr:questionsAsked+1
14:16:54 INFO  SkillStateMachine: ## ASSIGN ## Name:exitWoGNT Expr:'true'
14:16:54 DEBUG SkillStateMachine: #OnEntry: tasks.speechrec.PepperGetSourceAndGNT#bmb
14:16:54 INFO  SkillStateMachine: data id:#_SENSOR with expr='@SENSOR'changed to:SpeechSensor
14:16:54 INFO  SkillStateMachine: data id:#_TURN_TO_SOURCE with expr='@TURN_TO_SOURCE'changed to:true
14:16:54 INFO  SkillStateMachine: data id:#_TIMEOUT with expr='@TIMEOUT'changed to:-1
14:16:54 INFO  SkillStateMachine: data id:#_ALLOW_EXITING_WITHOUT_GNT with expr='@exitWoGNT'changed to:true
14:16:54 INFO  SkillStateMachine: ##INVOKE   PepperGetSourceAndGNT#bmb
14:16:54 DEBUG SkillConfigurator: request bool #_TURN_TO_SOURCE default:true
14:16:54 DEBUG SkillConfigurator: request value #_SENSOR
14:16:54 DEBUG PepperGetSourceAndGNT: wait for nt using speech sensor:SpeechSensor
14:16:54 DEBUG SkillConfigurator: request INT #_TIMEOUT default:-1
14:16:54 DEBUG SkillConfigurator: request double #_MAX_DISTANCE default:2.0
14:16:54 DEBUG SkillConfigurator: request value #_NONTERMINALS
14:16:54 DEBUG SkillConfigurator: request bool #_DISABLE_CONCAT_UNDERSCORE default:false
14:16:54 DEBUG SkillConfigurator: request value #_NONTERMINALS_TO_CONFIRM default:#N/A#
14:16:54 DEBUG SkillConfigurator: request value #_TEXT default:#N/A#
14:16:54 DEBUG SkillConfigurator: request bool #_ALLOW_EXITING_WITHOUT_GNT default:false
14:16:54 DEBUG SkillRunner:   PepperGetSourceAndGNT#bmb -> invoke configure().
14:16:54 DEBUG PepperGetSourceAndGNT: wait for nt using speech sensor:SpeechSensor
14:16:54 INFO  BonsaiManager: Creating a sensor instance with key 'SpeechSensor' and dataType 'class de.unibi.citec.clf.btl.data.speechrec.Utterance'
14:16:54 TRACE RosFactory: create sensor for: class de.unibi.citec.clf.btl.data.speechrec.Utterance
14:16:54 INFO  BonsaiManager: Creating an actuator instance with key 'SpeechActuator' and type 'interface de.unibi.citec.clf.bonsai.actuators.SpeechActuator'
14:16:54 TRACE RosFactory: create actuator: interface de.unibi.citec.clf.bonsai.actuators.SpeechActuator
14:16:54 INFO  BonsaiManager: Creating an actuator instance with key 'SSLActuator' and type 'interface de.unibi.citec.clf.bonsai.actuators.SSLActuator'
14:16:54 TRACE RosFactory: create actuator: interface de.unibi.citec.clf.bonsai.actuators.SSLActuator
14:16:54 INFO  BonsaiManager: Creating an working memory instance with key 'WorkingMemory'
14:16:54 DEBUG DefaultMemory: getSlot /behaviors/answerQuestion/nav[class de.unibi.citec.clf.btl.data.navigation.NavigationGoalData]
14:16:54 INFO  BonsaiManager: Creating an working memory instance with key 'WorkingMemory'
14:16:54 DEBUG DefaultMemory: getSlot /behaviors/answerQuestion/tree[class de.unibi.citec.clf.btl.data.speechrec.GrammarTree]
14:16:54 DEBUG SkillRunner:   PepperGetSourceAndGNT#bmb -> invoke init()
14:16:54 DEBUG SimpleSpeechHelper: start listening
14:16:54 DEBUG SkillRunner:   PepperGetSourceAndGNT#bmb -> init() returned: true
14:16:54 DEBUG SkillRunner:   PepperGetSourceAndGNT#bmb -> invoke execute()
14:16:56 DEBUG SimpleSpeechHelper: got new data: 
14:16:56 DEBUG SimpleSpeechHelper: is valid: false
14:16:56 DEBUG PepperGetSourceAndGNT: num of Utterances: 1
14:16:56 DEBUG PepperGetSourceAndGNT: understanding is null
14:16:56 DEBUG PepperGetSourceAndGNT: exit without GNT
14:16:56 DEBUG PepperGetSourceAndGNT: ######################## TRYING TO GET SSL IN LOOP #################
14:16:56 DEBUG PepperGetSourceAndGNT: ######################## SSL IS VALID #################
14:16:56 DEBUG SkillRunner:   PepperGetSourceAndGNT#bmb -> execute() returned: success
14:16:56 DEBUG SkillRunner:   PepperGetSourceAndGNT#bmb -> invoke end()
14:16:56 DEBUG ObjectSlot: memorized NavigationGoalData[ x:0.0 y:0.0 yaw:110.5 coordinateTolerance:25.0 yawTolerance:6.283185307179586 frame:map ]
14:16:56 DEBUG SkillRunner:   PepperGetSourceAndGNT#bmb -> end() returned: success
14:16:56 DEBUG SCXMLSkillRunner:   Fire event: PepperGetSourceAndGNT.success.exitWoGNT
14:16:56 DEBUG SkillStateMachine: FIRE SKILL Event: PepperGetSourceAndGNT.success.exitWoGNT
14:16:56 INFO  SkillStateMachine: #onTransition: "tasks.speechrec.PepperGetSourceAndGNT#bmb" --> "tasks.speechrec.PepperGetSourceAndGNT#bmb "event: "PepperGetSourceAndGNT.success.exitWoGNT"
14:16:56 INFO  SkillStateMachine: ## SEND ## Event:'bmb.again'
14:16:56 DEBUG SkillStateMachine: #OnExit: tasks.speechrec.PepperGetSourceAndGNT#bmb
14:16:56 DEBUG SkillStateMachine: #OnExit: bmb
14:16:56 INFO  SkillStateMachine: #onTransition: "bmb" --> "bmb "event: "bmb.again"
14:16:56 DEBUG SkillStateMachine: #OnEntry: bmb
14:16:56 INFO  SkillStateMachine: ## ASSIGN ## Name:SENSOR Expr:'SpeechSensor'
14:16:56 INFO  SkillStateMachine: ## ASSIGN ## Name:TURN_TO_SOURCE Expr:'true'
14:16:56 INFO  SkillStateMachine: ## ASSIGN ## Name:questionsAskedBmb Expr:questionsAsked+1
14:16:56 INFO  SkillStateMachine: ## ASSIGN ## Name:exitWoGNT Expr:'true'
14:16:56 DEBUG SkillStateMachine: #OnEntry: tasks.speechrec.PepperGetSourceAndGNT#bmb
14:16:56 INFO  SkillStateMachine: data id:#_SENSOR with expr='@SENSOR'changed to:SpeechSensor
14:16:56 INFO  SkillStateMachine: data id:#_TURN_TO_SOURCE with expr='@TURN_TO_SOURCE'changed to:true
14:16:56 INFO  SkillStateMachine: data id:#_TIMEOUT with expr='@TIMEOUT'changed to:-1
14:16:56 INFO  SkillStateMachine: data id:#_ALLOW_EXITING_WITHOUT_GNT with expr='@exitWoGNT'changed to:true
14:16:56 INFO  SkillStateMachine: ##INVOKE   PepperGetSourceAndGNT#bmb
14:16:56 DEBUG SkillConfigurator: request bool #_TURN_TO_SOURCE default:true
14:16:56 DEBUG SkillConfigurator: request value #_SENSOR
14:16:56 DEBUG PepperGetSourceAndGNT: wait for nt using speech sensor:SpeechSensor
14:16:56 DEBUG SkillConfigurator: request INT #_TIMEOUT default:-1
14:16:56 DEBUG SkillConfigurator: request double #_MAX_DISTANCE default:2.0
14:16:56 DEBUG SkillConfigurator: request value #_NONTERMINALS
14:16:56 DEBUG SkillConfigurator: request bool #_DISABLE_CONCAT_UNDERSCORE default:false
14:16:56 DEBUG SkillConfigurator: request value #_NONTERMINALS_TO_CONFIRM default:#N/A#
14:16:56 DEBUG SkillConfigurator: request value #_TEXT default:#N/A#
14:16:56 DEBUG SkillConfigurator: request bool #_ALLOW_EXITING_WITHOUT_GNT default:false
14:16:56 DEBUG SkillRunner:   PepperGetSourceAndGNT#bmb -> invoke configure().
14:16:56 DEBUG PepperGetSourceAndGNT: wait for nt using speech sensor:SpeechSensor
14:16:56 INFO  BonsaiManager: Creating a sensor instance with key 'SpeechSensor' and dataType 'class de.unibi.citec.clf.btl.data.speechrec.Utterance'
14:16:56 TRACE RosFactory: create sensor for: class de.unibi.citec.clf.btl.data.speechrec.Utterance
14:16:56 INFO  BonsaiManager: Creating an actuator instance with key 'SpeechActuator' and type 'interface de.unibi.citec.clf.bonsai.actuators.SpeechActuator'
14:16:56 TRACE RosFactory: create actuator: interface de.unibi.citec.clf.bonsai.actuators.SpeechActuator
14:16:56 INFO  BonsaiManager: Creating an actuator instance with key 'SSLActuator' and type 'interface de.unibi.citec.clf.bonsai.actuators.SSLActuator'
14:16:56 TRACE RosFactory: create actuator: interface de.unibi.citec.clf.bonsai.actuators.SSLActuator
14:16:56 INFO  BonsaiManager: Creating an working memory instance with key 'WorkingMemory'
14:16:56 DEBUG DefaultMemory: getSlot /behaviors/answerQuestion/nav[class de.unibi.citec.clf.btl.data.navigation.NavigationGoalData]
14:16:56 INFO  BonsaiManager: Creating an working memory instance with key 'WorkingMemory'
14:16:56 DEBUG DefaultMemory: getSlot /behaviors/answerQuestion/tree[class de.unibi.citec.clf.btl.data.speechrec.GrammarTree]
14:16:56 DEBUG SkillRunner:   PepperGetSourceAndGNT#bmb -> invoke init()
14:16:56 DEBUG SimpleSpeechHelper: start listening
14:16:56 DEBUG SkillRunner:   PepperGetSourceAndGNT#bmb -> init() returned: true
14:16:56 DEBUG SkillRunner:   PepperGetSourceAndGNT#bmb -> invoke execute()
14:17:02 DEBUG SimpleSpeechHelper: got new data: 
14:17:02 DEBUG SimpleSpeechHelper: is valid: true
14:17:02 DEBUG SimpleSpeechHelper: GrammarNonTerminal [name=, subsymbols=[GrammarNonTerminal [name=question, subsymbols=[GrammarNonTerminal [name=quest_predef, subsymbols=[GrammarNonTerminal [name=predef24, subsymbols=[UtterancePart [word=name three famous female canadians]]]]]]]]]
14:17:02 DEBUG PepperGetSourceAndGNT: num of Utterances: 1
14:17:02 DEBUG PepperGetSourceAndGNT: undestanding is NOT null!!
14:17:02 DEBUG PepperGetSourceAndGNT: has New Understanding
14:17:02 DEBUG PepperGetSourceAndGNT: has enough trees
14:17:02 DEBUG PepperGetSourceAndGNT: ######################## TRYING TO GET SSL FOR UTTERANCE!!! #################
14:17:02 DEBUG PepperGetSourceAndGNT: ######################## UTTERANCE VALID!!! #################
14:17:02 DEBUG SkillRunner:   PepperGetSourceAndGNT#bmb -> execute() returned: success
14:17:02 DEBUG SkillRunner:   PepperGetSourceAndGNT#bmb -> invoke end()
14:17:02 DEBUG ObjectSlot: memorized NavigationGoalData[ x:0.0 y:0.0 yaw:156.25 coordinateTolerance:25.0 yawTolerance:6.283185307179586 frame:map ]
14:17:02 DEBUG ObjectSlot: memorized GrammarNonTerminal [name=, subsymbols=[GrammarNonTerminal [name=question, subsymbols=[GrammarNonTerminal [name=quest_predef, subsymbols=[GrammarNonTerminal [name=predef24, subsymbols=[UtterancePart [word=name three famous female canadians]]]]]]]]]
14:17:02 DEBUG SkillRunner:   PepperGetSourceAndGNT#bmb -> end() returned: success
14:17:02 DEBUG SCXMLSkillRunner:   Fire event: PepperGetSourceAndGNT.success.question
14:17:02 DEBUG SkillStateMachine: FIRE SKILL Event: PepperGetSourceAndGNT.success.question
14:17:02 INFO  SkillStateMachine: #onTransition: "tasks.speechrec.PepperGetSourceAndGNT#bmb" --> "tasks.speechrec.PepperGetSourceAndGNT#bmb "event: "PepperGetSourceAndGNT.success.question"
14:17:02 INFO  SkillStateMachine: ## SEND ## Event:'bmb.success'
14:17:02 DEBUG SkillStateMachine: #OnExit: tasks.speechrec.PepperGetSourceAndGNT#bmb
14:17:02 DEBUG SkillStateMachine: #OnExit: bmb
14:17:02 INFO  SkillStateMachine: #onTransition: "bmb" --> "bmb "event: "bmb.success"
14:17:02 DEBUG SkillStateMachine: #OnEntry: bmb
14:17:02 INFO  SkillStateMachine: ## ASSIGN ## Name:SENSOR Expr:'SpeechSensor'
14:17:02 INFO  SkillStateMachine: ## ASSIGN ## Name:TURN_TO_SOURCE Expr:'true'
14:17:02 INFO  SkillStateMachine: ## ASSIGN ## Name:questionsAskedBmb Expr:questionsAsked+1
14:17:02 INFO  SkillStateMachine: ## ASSIGN ## Name:exitWoGNT Expr:'true'
14:17:02 DEBUG SkillStateMachine: #OnEntry: tasks.speechrec.PepperGetSourceAndGNT#bmb
14:17:02 INFO  SkillStateMachine: data id:#_SENSOR with expr='@SENSOR'changed to:SpeechSensor
14:17:02 INFO  SkillStateMachine: data id:#_TURN_TO_SOURCE with expr='@TURN_TO_SOURCE'changed to:true
14:17:02 INFO  SkillStateMachine: data id:#_TIMEOUT with expr='@TIMEOUT'changed to:-1
14:17:02 INFO  SkillStateMachine: data id:#_ALLOW_EXITING_WITHOUT_GNT with expr='@exitWoGNT'changed to:true
14:17:02 INFO  SkillStateMachine: ##INVOKE   PepperGetSourceAndGNT#bmb
14:17:02 DEBUG SkillConfigurator: request bool #_TURN_TO_SOURCE default:true
14:17:02 DEBUG SkillConfigurator: request value #_SENSOR
14:17:02 DEBUG PepperGetSourceAndGNT: wait for nt using speech sensor:SpeechSensor
14:17:02 DEBUG SkillConfigurator: request INT #_TIMEOUT default:-1
14:17:02 DEBUG SkillConfigurator: request double #_MAX_DISTANCE default:2.0
14:17:02 DEBUG SkillConfigurator: request value #_NONTERMINALS
14:17:02 DEBUG SkillConfigurator: request bool #_DISABLE_CONCAT_UNDERSCORE default:false
14:17:02 DEBUG SkillConfigurator: request value #_NONTERMINALS_TO_CONFIRM default:#N/A#
14:17:02 DEBUG SkillConfigurator: request value #_TEXT default:#N/A#
14:17:02 DEBUG SkillConfigurator: request bool #_ALLOW_EXITING_WITHOUT_GNT default:false
14:17:02 DEBUG SkillRunner:   PepperGetSourceAndGNT#bmb -> invoke configure().
14:17:02 DEBUG PepperGetSourceAndGNT: wait for nt using speech sensor:SpeechSensor
14:17:02 INFO  BonsaiManager: Creating a sensor instance with key 'SpeechSensor' and dataType 'class de.unibi.citec.clf.btl.data.speechrec.Utterance'
14:17:02 TRACE RosFactory: create sensor for: class de.unibi.citec.clf.btl.data.speechrec.Utterance
14:17:02 INFO  BonsaiManager: Creating an actuator instance with key 'SpeechActuator' and type 'interface de.unibi.citec.clf.bonsai.actuators.SpeechActuator'
14:17:02 TRACE RosFactory: create actuator: interface de.unibi.citec.clf.bonsai.actuators.SpeechActuator
14:17:02 INFO  BonsaiManager: Creating an actuator instance with key 'SSLActuator' and type 'interface de.unibi.citec.clf.bonsai.actuators.SSLActuator'
14:17:02 TRACE RosFactory: create actuator: interface de.unibi.citec.clf.bonsai.actuators.SSLActuator
14:17:02 INFO  BonsaiManager: Creating an working memory instance with key 'WorkingMemory'
14:17:02 DEBUG DefaultMemory: getSlot /behaviors/answerQuestion/nav[class de.unibi.citec.clf.btl.data.navigation.NavigationGoalData]
14:17:02 INFO  BonsaiManager: Creating an working memory instance with key 'WorkingMemory'
14:17:02 DEBUG DefaultMemory: getSlot /behaviors/answerQuestion/tree[class de.unibi.citec.clf.btl.data.speechrec.GrammarTree]
14:17:02 DEBUG SkillRunner:   PepperGetSourceAndGNT#bmb -> invoke init()
14:17:02 DEBUG SimpleSpeechHelper: start listening
14:17:02 DEBUG SkillRunner:   PepperGetSourceAndGNT#bmb -> init() returned: true
14:17:02 DEBUG SkillRunner:   PepperGetSourceAndGNT#bmb -> invoke execute()
14:17:06 DEBUG SimpleSpeechHelper: got new data: 
14:17:06 DEBUG SimpleSpeechHelper: is valid: true
14:17:06 DEBUG SimpleSpeechHelper: GrammarNonTerminal [name=, subsymbols=[GrammarNonTerminal [name=question, subsymbols=[GrammarNonTerminal [name=quest_predef, subsymbols=[GrammarNonTerminal [name=predef24, subsymbols=[UtterancePart [word=name three famous female canadians]]]]]]]]]
14:17:06 DEBUG PepperGetSourceAndGNT: num of Utterances: 1
14:17:06 DEBUG PepperGetSourceAndGNT: undestanding is NOT null!!
14:17:06 DEBUG PepperGetSourceAndGNT: has New Understanding
14:17:06 DEBUG PepperGetSourceAndGNT: has enough trees
14:17:06 DEBUG PepperGetSourceAndGNT: ######################## TRYING TO GET SSL FOR UTTERANCE!!! #################
14:17:06 DEBUG PepperGetSourceAndGNT: ######################## UTTERANCE VALID!!! #################
14:17:06 DEBUG SkillRunner:   PepperGetSourceAndGNT#bmb -> execute() returned: success
14:17:06 DEBUG SkillRunner:   PepperGetSourceAndGNT#bmb -> invoke end()
14:17:06 DEBUG ObjectSlot: memorized NavigationGoalData[ x:0.0 y:0.0 yaw:191.25 coordinateTolerance:25.0 yawTolerance:6.283185307179586 frame:map ]
14:17:06 DEBUG ObjectSlot: memorized GrammarNonTerminal [name=, subsymbols=[GrammarNonTerminal [name=question, subsymbols=[GrammarNonTerminal [name=quest_predef, subsymbols=[GrammarNonTerminal [name=predef24, subsymbols=[UtterancePart [word=name three famous female canadians]]]]]]]]]
14:17:06 DEBUG SkillRunner:   PepperGetSourceAndGNT#bmb -> end() returned: success
14:17:06 DEBUG SCXMLSkillRunner:   Fire event: PepperGetSourceAndGNT.success.question
14:17:06 DEBUG SkillStateMachine: FIRE SKILL Event: PepperGetSourceAndGNT.success.question
14:17:06 INFO  SkillStateMachine: #onTransition: "tasks.speechrec.PepperGetSourceAndGNT#bmb" --> "tasks.speechrec.PepperGetSourceAndGNT#bmb "event: "PepperGetSourceAndGNT.success.question"
14:17:06 INFO  SkillStateMachine: ## SEND ## Event:'bmb.success'
14:17:06 DEBUG SkillStateMachine: #OnExit: tasks.speechrec.PepperGetSourceAndGNT#bmb
14:17:06 DEBUG SkillStateMachine: #OnExit: bmb
14:17:06 INFO  SkillStateMachine: #onTransition: "bmb" --> "bmb "event: "bmb.success"
14:17:06 DEBUG SkillStateMachine: #OnEntry: bmb
14:17:06 INFO  SkillStateMachine: ## ASSIGN ## Name:SENSOR Expr:'SpeechSensor'
14:17:06 INFO  SkillStateMachine: ## ASSIGN ## Name:TURN_TO_SOURCE Expr:'true'
14:17:06 INFO  SkillStateMachine: ## ASSIGN ## Name:questionsAskedBmb Expr:questionsAsked+1
14:17:06 INFO  SkillStateMachine: ## ASSIGN ## Name:exitWoGNT Expr:'true'
14:17:06 DEBUG SkillStateMachine: #OnEntry: tasks.speechrec.PepperGetSourceAndGNT#bmb
14:17:06 INFO  SkillStateMachine: data id:#_SENSOR with expr='@SENSOR'changed to:SpeechSensor
14:17:06 INFO  SkillStateMachine: data id:#_TURN_TO_SOURCE with expr='@TURN_TO_SOURCE'changed to:true
14:17:06 INFO  SkillStateMachine: data id:#_TIMEOUT with expr='@TIMEOUT'changed to:-1
14:17:06 INFO  SkillStateMachine: data id:#_ALLOW_EXITING_WITHOUT_GNT with expr='@exitWoGNT'changed to:true
14:17:06 INFO  SkillStateMachine: ##INVOKE   PepperGetSourceAndGNT#bmb
14:17:06 DEBUG SkillConfigurator: request bool #_TURN_TO_SOURCE default:true
14:17:06 DEBUG SkillConfigurator: request value #_SENSOR
14:17:06 DEBUG PepperGetSourceAndGNT: wait for nt using speech sensor:SpeechSensor
14:17:06 DEBUG SkillConfigurator: request INT #_TIMEOUT default:-1
14:17:06 DEBUG SkillConfigurator: request double #_MAX_DISTANCE default:2.0
14:17:06 DEBUG SkillConfigurator: request value #_NONTERMINALS
14:17:06 DEBUG SkillConfigurator: request bool #_DISABLE_CONCAT_UNDERSCORE default:false
14:17:06 DEBUG SkillConfigurator: request value #_NONTERMINALS_TO_CONFIRM default:#N/A#
14:17:06 DEBUG SkillConfigurator: request value #_TEXT default:#N/A#
14:17:06 DEBUG SkillConfigurator: request bool #_ALLOW_EXITING_WITHOUT_GNT default:false
14:17:06 DEBUG SkillRunner:   PepperGetSourceAndGNT#bmb -> invoke configure().
14:17:06 DEBUG PepperGetSourceAndGNT: wait for nt using speech sensor:SpeechSensor
14:17:06 INFO  BonsaiManager: Creating a sensor instance with key 'SpeechSensor' and dataType 'class de.unibi.citec.clf.btl.data.speechrec.Utterance'
14:17:06 TRACE RosFactory: create sensor for: class de.unibi.citec.clf.btl.data.speechrec.Utterance
14:17:06 INFO  BonsaiManager: Creating an actuator instance with key 'SpeechActuator' and type 'interface de.unibi.citec.clf.bonsai.actuators.SpeechActuator'
14:17:06 TRACE RosFactory: create actuator: interface de.unibi.citec.clf.bonsai.actuators.SpeechActuator
14:17:06 INFO  BonsaiManager: Creating an actuator instance with key 'SSLActuator' and type 'interface de.unibi.citec.clf.bonsai.actuators.SSLActuator'
14:17:06 TRACE RosFactory: create actuator: interface de.unibi.citec.clf.bonsai.actuators.SSLActuator
14:17:06 INFO  BonsaiManager: Creating an working memory instance with key 'WorkingMemory'
14:17:06 DEBUG DefaultMemory: getSlot /behaviors/answerQuestion/nav[class de.unibi.citec.clf.btl.data.navigation.NavigationGoalData]
14:17:06 INFO  BonsaiManager: Creating an working memory instance with key 'WorkingMemory'
14:17:06 DEBUG DefaultMemory: getSlot /behaviors/answerQuestion/tree[class de.unibi.citec.clf.btl.data.speechrec.GrammarTree]
14:17:06 DEBUG SkillRunner:   PepperGetSourceAndGNT#bmb -> invoke init()
14:17:06 DEBUG SimpleSpeechHelper: start listening
14:17:06 DEBUG SkillRunner:   PepperGetSourceAndGNT#bmb -> init() returned: true
14:17:06 DEBUG SkillRunner:   PepperGetSourceAndGNT#bmb -> invoke execute()
14:17:13 DEBUG SimpleSpeechHelper: got new data: 
14:17:13 DEBUG SimpleSpeechHelper: is valid: false
14:17:13 DEBUG PepperGetSourceAndGNT: num of Utterances: 1
14:17:13 DEBUG PepperGetSourceAndGNT: understanding is null
14:17:13 DEBUG PepperGetSourceAndGNT: exit without GNT
14:17:13 DEBUG PepperGetSourceAndGNT: ######################## TRYING TO GET SSL IN LOOP #################
14:17:13 DEBUG PepperGetSourceAndGNT: ######################## SSL IS VALID #################
14:17:13 DEBUG SkillRunner:   PepperGetSourceAndGNT#bmb -> execute() returned: success
14:17:13 DEBUG SkillRunner:   PepperGetSourceAndGNT#bmb -> invoke end()
14:17:13 DEBUG ObjectSlot: memorized NavigationGoalData[ x:0.0 y:0.0 yaw:176.5 coordinateTolerance:25.0 yawTolerance:6.283185307179586 frame:map ]
14:17:13 DEBUG SkillRunner:   PepperGetSourceAndGNT#bmb -> end() returned: success
14:17:13 DEBUG SCXMLSkillRunner:   Fire event: PepperGetSourceAndGNT.success.exitWoGNT
14:17:13 DEBUG SkillStateMachine: FIRE SKILL Event: PepperGetSourceAndGNT.success.exitWoGNT
14:17:13 INFO  SkillStateMachine: #onTransition: "tasks.speechrec.PepperGetSourceAndGNT#bmb" --> "tasks.speechrec.PepperGetSourceAndGNT#bmb "event: "PepperGetSourceAndGNT.success.exitWoGNT"
14:17:13 INFO  SkillStateMachine: ## SEND ## Event:'bmb.again'
14:17:13 DEBUG SkillStateMachine: #OnExit: tasks.speechrec.PepperGetSourceAndGNT#bmb
14:17:13 DEBUG SkillStateMachine: #OnExit: bmb
14:17:13 INFO  SkillStateMachine: #onTransition: "bmb" --> "bmb "event: "bmb.again"
14:17:13 DEBUG SkillStateMachine: #OnEntry: bmb
14:17:13 INFO  SkillStateMachine: ## ASSIGN ## Name:SENSOR Expr:'SpeechSensor'
14:17:13 INFO  SkillStateMachine: ## ASSIGN ## Name:TURN_TO_SOURCE Expr:'true'
14:17:13 INFO  SkillStateMachine: ## ASSIGN ## Name:questionsAskedBmb Expr:questionsAsked+1
14:17:13 INFO  SkillStateMachine: ## ASSIGN ## Name:exitWoGNT Expr:'true'
14:17:13 DEBUG SkillStateMachine: #OnEntry: tasks.speechrec.PepperGetSourceAndGNT#bmb
14:17:13 INFO  SkillStateMachine: data id:#_SENSOR with expr='@SENSOR'changed to:SpeechSensor
14:17:13 INFO  SkillStateMachine: data id:#_TURN_TO_SOURCE with expr='@TURN_TO_SOURCE'changed to:true
14:17:13 INFO  SkillStateMachine: data id:#_TIMEOUT with expr='@TIMEOUT'changed to:-1
14:17:13 INFO  SkillStateMachine: data id:#_ALLOW_EXITING_WITHOUT_GNT with expr='@exitWoGNT'changed to:true
14:17:13 INFO  SkillStateMachine: ##INVOKE   PepperGetSourceAndGNT#bmb
14:17:13 DEBUG SkillConfigurator: request bool #_TURN_TO_SOURCE default:true
14:17:13 DEBUG SkillConfigurator: request value #_SENSOR
14:17:13 DEBUG PepperGetSourceAndGNT: wait for nt using speech sensor:SpeechSensor
14:17:13 DEBUG SkillConfigurator: request INT #_TIMEOUT default:-1
14:17:13 DEBUG SkillConfigurator: request double #_MAX_DISTANCE default:2.0
14:17:13 DEBUG SkillConfigurator: request value #_NONTERMINALS
14:17:13 DEBUG SkillConfigurator: request bool #_DISABLE_CONCAT_UNDERSCORE default:false
14:17:13 DEBUG SkillConfigurator: request value #_NONTERMINALS_TO_CONFIRM default:#N/A#
14:17:13 DEBUG SkillConfigurator: request value #_TEXT default:#N/A#
14:17:13 DEBUG SkillConfigurator: request bool #_ALLOW_EXITING_WITHOUT_GNT default:false
14:17:13 DEBUG SkillRunner:   PepperGetSourceAndGNT#bmb -> invoke configure().
14:17:13 DEBUG PepperGetSourceAndGNT: wait for nt using speech sensor:SpeechSensor
14:17:13 INFO  BonsaiManager: Creating a sensor instance with key 'SpeechSensor' and dataType 'class de.unibi.citec.clf.btl.data.speechrec.Utterance'
14:17:13 TRACE RosFactory: create sensor for: class de.unibi.citec.clf.btl.data.speechrec.Utterance
14:17:13 INFO  BonsaiManager: Creating an actuator instance with key 'SpeechActuator' and type 'interface de.unibi.citec.clf.bonsai.actuators.SpeechActuator'
14:17:13 TRACE RosFactory: create actuator: interface de.unibi.citec.clf.bonsai.actuators.SpeechActuator
14:17:13 INFO  BonsaiManager: Creating an actuator instance with key 'SSLActuator' and type 'interface de.unibi.citec.clf.bonsai.actuators.SSLActuator'
14:17:13 TRACE RosFactory: create actuator: interface de.unibi.citec.clf.bonsai.actuators.SSLActuator
14:17:13 INFO  BonsaiManager: Creating an working memory instance with key 'WorkingMemory'
14:17:13 DEBUG DefaultMemory: getSlot /behaviors/answerQuestion/nav[class de.unibi.citec.clf.btl.data.navigation.NavigationGoalData]
14:17:13 INFO  BonsaiManager: Creating an working memory instance with key 'WorkingMemory'
14:17:13 DEBUG DefaultMemory: getSlot /behaviors/answerQuestion/tree[class de.unibi.citec.clf.btl.data.speechrec.GrammarTree]
14:17:13 DEBUG SkillRunner:   PepperGetSourceAndGNT#bmb -> invoke init()
14:17:13 DEBUG SimpleSpeechHelper: start listening
14:17:13 DEBUG SkillRunner:   PepperGetSourceAndGNT#bmb -> init() returned: true
14:17:13 DEBUG SkillRunner:   PepperGetSourceAndGNT#bmb -> invoke execute()
14:17:16 DEBUG SimpleSpeechHelper: got new data: 
14:17:16 DEBUG SimpleSpeechHelper: is valid: false
14:17:16 DEBUG PepperGetSourceAndGNT: num of Utterances: 1
14:17:16 DEBUG PepperGetSourceAndGNT: understanding is null
14:17:16 DEBUG PepperGetSourceAndGNT: exit without GNT
14:17:16 DEBUG PepperGetSourceAndGNT: ######################## TRYING TO GET SSL IN LOOP #################
14:17:16 DEBUG PepperGetSourceAndGNT: ######################## SSL IS VALID #################
14:17:16 DEBUG SkillRunner:   PepperGetSourceAndGNT#bmb -> execute() returned: success
14:17:16 DEBUG SkillRunner:   PepperGetSourceAndGNT#bmb -> invoke end()
14:17:16 DEBUG ObjectSlot: memorized NavigationGoalData[ x:0.0 y:0.0 yaw:202.16666666666666 coordinateTolerance:25.0 yawTolerance:6.283185307179586 frame:map ]
14:17:16 DEBUG SkillRunner:   PepperGetSourceAndGNT#bmb -> end() returned: success
14:17:16 DEBUG SCXMLSkillRunner:   Fire event: PepperGetSourceAndGNT.success.exitWoGNT
14:17:16 DEBUG SkillStateMachine: FIRE SKILL Event: PepperGetSourceAndGNT.success.exitWoGNT
14:17:16 INFO  SkillStateMachine: #onTransition: "tasks.speechrec.PepperGetSourceAndGNT#bmb" --> "tasks.speechrec.PepperGetSourceAndGNT#bmb "event: "PepperGetSourceAndGNT.success.exitWoGNT"
14:17:16 INFO  SkillStateMachine: ## SEND ## Event:'bmb.again'
14:17:16 DEBUG SkillStateMachine: #OnExit: tasks.speechrec.PepperGetSourceAndGNT#bmb
14:17:16 DEBUG SkillStateMachine: #OnExit: bmb
14:17:16 INFO  SkillStateMachine: #onTransition: "bmb" --> "bmb "event: "bmb.again"
14:17:16 DEBUG SkillStateMachine: #OnEntry: bmb
14:17:16 INFO  SkillStateMachine: ## ASSIGN ## Name:SENSOR Expr:'SpeechSensor'
14:17:16 INFO  SkillStateMachine: ## ASSIGN ## Name:TURN_TO_SOURCE Expr:'true'
14:17:16 INFO  SkillStateMachine: ## ASSIGN ## Name:questionsAskedBmb Expr:questionsAsked+1
14:17:16 INFO  SkillStateMachine: ## ASSIGN ## Name:exitWoGNT Expr:'true'
14:17:16 DEBUG SkillStateMachine: #OnEntry: tasks.speechrec.PepperGetSourceAndGNT#bmb
14:17:16 INFO  SkillStateMachine: data id:#_SENSOR with expr='@SENSOR'changed to:SpeechSensor
14:17:16 INFO  SkillStateMachine: data id:#_TURN_TO_SOURCE with expr='@TURN_TO_SOURCE'changed to:true
14:17:16 INFO  SkillStateMachine: data id:#_TIMEOUT with expr='@TIMEOUT'changed to:-1
14:17:16 INFO  SkillStateMachine: data id:#_ALLOW_EXITING_WITHOUT_GNT with expr='@exitWoGNT'changed to:true
14:17:16 INFO  SkillStateMachine: ##INVOKE   PepperGetSourceAndGNT#bmb
14:17:16 DEBUG SkillConfigurator: request bool #_TURN_TO_SOURCE default:true
14:17:16 DEBUG SkillConfigurator: request value #_SENSOR
14:17:16 DEBUG PepperGetSourceAndGNT: wait for nt using speech sensor:SpeechSensor
14:17:16 DEBUG SkillConfigurator: request INT #_TIMEOUT default:-1
14:17:16 DEBUG SkillConfigurator: request double #_MAX_DISTANCE default:2.0
14:17:16 DEBUG SkillConfigurator: request value #_NONTERMINALS
14:17:16 DEBUG SkillConfigurator: request bool #_DISABLE_CONCAT_UNDERSCORE default:false
14:17:16 DEBUG SkillConfigurator: request value #_NONTERMINALS_TO_CONFIRM default:#N/A#
14:17:16 DEBUG SkillConfigurator: request value #_TEXT default:#N/A#
14:17:16 DEBUG SkillConfigurator: request bool #_ALLOW_EXITING_WITHOUT_GNT default:false
14:17:16 DEBUG SkillRunner:   PepperGetSourceAndGNT#bmb -> invoke configure().
14:17:16 DEBUG PepperGetSourceAndGNT: wait for nt using speech sensor:SpeechSensor
14:17:16 INFO  BonsaiManager: Creating a sensor instance with key 'SpeechSensor' and dataType 'class de.unibi.citec.clf.btl.data.speechrec.Utterance'
14:17:16 TRACE RosFactory: create sensor for: class de.unibi.citec.clf.btl.data.speechrec.Utterance
14:17:16 INFO  BonsaiManager: Creating an actuator instance with key 'SpeechActuator' and type 'interface de.unibi.citec.clf.bonsai.actuators.SpeechActuator'
14:17:16 TRACE RosFactory: create actuator: interface de.unibi.citec.clf.bonsai.actuators.SpeechActuator
14:17:16 INFO  BonsaiManager: Creating an actuator instance with key 'SSLActuator' and type 'interface de.unibi.citec.clf.bonsai.actuators.SSLActuator'
14:17:16 TRACE RosFactory: create actuator: interface de.unibi.citec.clf.bonsai.actuators.SSLActuator
14:17:16 INFO  BonsaiManager: Creating an working memory instance with key 'WorkingMemory'
14:17:16 DEBUG DefaultMemory: getSlot /behaviors/answerQuestion/nav[class de.unibi.citec.clf.btl.data.navigation.NavigationGoalData]
14:17:16 INFO  BonsaiManager: Creating an working memory instance with key 'WorkingMemory'
14:17:16 DEBUG DefaultMemory: getSlot /behaviors/answerQuestion/tree[class de.unibi.citec.clf.btl.data.speechrec.GrammarTree]
14:17:16 DEBUG SkillRunner:   PepperGetSourceAndGNT#bmb -> invoke init()
14:17:16 DEBUG SimpleSpeechHelper: start listening
14:17:16 DEBUG SkillRunner:   PepperGetSourceAndGNT#bmb -> init() returned: true
14:17:16 DEBUG SkillRunner:   PepperGetSourceAndGNT#bmb -> invoke execute()
14:17:18 DEBUG SimpleSpeechHelper: got new data: 
14:17:18 DEBUG SimpleSpeechHelper: is valid: false
14:17:18 DEBUG PepperGetSourceAndGNT: num of Utterances: 1
14:17:18 DEBUG PepperGetSourceAndGNT: understanding is null
14:17:18 DEBUG PepperGetSourceAndGNT: exit without GNT
14:17:18 DEBUG PepperGetSourceAndGNT: ######################## TRYING TO GET SSL IN LOOP #################
14:17:18 DEBUG PepperGetSourceAndGNT: ######################## SSL IS VALID #################
14:17:18 DEBUG SkillRunner:   PepperGetSourceAndGNT#bmb -> execute() returned: success
14:17:18 DEBUG SkillRunner:   PepperGetSourceAndGNT#bmb -> invoke end()
14:17:18 DEBUG ObjectSlot: memorized NavigationGoalData[ x:0.0 y:0.0 yaw:130.0 coordinateTolerance:25.0 yawTolerance:6.283185307179586 frame:map ]
14:17:18 DEBUG SkillRunner:   PepperGetSourceAndGNT#bmb -> end() returned: success
14:17:18 DEBUG SCXMLSkillRunner:   Fire event: PepperGetSourceAndGNT.success.exitWoGNT
14:17:18 DEBUG SkillStateMachine: FIRE SKILL Event: PepperGetSourceAndGNT.success.exitWoGNT
14:17:18 INFO  SkillStateMachine: #onTransition: "tasks.speechrec.PepperGetSourceAndGNT#bmb" --> "tasks.speechrec.PepperGetSourceAndGNT#bmb "event: "PepperGetSourceAndGNT.success.exitWoGNT"
14:17:18 INFO  SkillStateMachine: ## SEND ## Event:'bmb.again'
14:17:18 DEBUG SkillStateMachine: #OnExit: tasks.speechrec.PepperGetSourceAndGNT#bmb
14:17:18 DEBUG SkillStateMachine: #OnExit: bmb
14:17:18 INFO  SkillStateMachine: #onTransition: "bmb" --> "bmb "event: "bmb.again"
14:17:18 DEBUG SkillStateMachine: #OnEntry: bmb
14:17:18 INFO  SkillStateMachine: ## ASSIGN ## Name:SENSOR Expr:'SpeechSensor'
14:17:18 INFO  SkillStateMachine: ## ASSIGN ## Name:TURN_TO_SOURCE Expr:'true'
14:17:18 INFO  SkillStateMachine: ## ASSIGN ## Name:questionsAskedBmb Expr:questionsAsked+1
14:17:18 INFO  SkillStateMachine: ## ASSIGN ## Name:exitWoGNT Expr:'true'
14:17:18 DEBUG SkillStateMachine: #OnEntry: tasks.speechrec.PepperGetSourceAndGNT#bmb
14:17:18 INFO  SkillStateMachine: data id:#_SENSOR with expr='@SENSOR'changed to:SpeechSensor
14:17:18 INFO  SkillStateMachine: data id:#_TURN_TO_SOURCE with expr='@TURN_TO_SOURCE'changed to:true
14:17:18 INFO  SkillStateMachine: data id:#_TIMEOUT with expr='@TIMEOUT'changed to:-1
14:17:18 INFO  SkillStateMachine: data id:#_ALLOW_EXITING_WITHOUT_GNT with expr='@exitWoGNT'changed to:true
14:17:18 INFO  SkillStateMachine: ##INVOKE   PepperGetSourceAndGNT#bmb
14:17:18 DEBUG SkillConfigurator: request bool #_TURN_TO_SOURCE default:true
14:17:18 DEBUG SkillConfigurator: request value #_SENSOR
14:17:18 DEBUG PepperGetSourceAndGNT: wait for nt using speech sensor:SpeechSensor
14:17:18 DEBUG SkillConfigurator: request INT #_TIMEOUT default:-1
14:17:18 DEBUG SkillConfigurator: request double #_MAX_DISTANCE default:2.0
14:17:18 DEBUG SkillConfigurator: request value #_NONTERMINALS
14:17:18 DEBUG SkillConfigurator: request bool #_DISABLE_CONCAT_UNDERSCORE default:false
14:17:18 DEBUG SkillConfigurator: request value #_NONTERMINALS_TO_CONFIRM default:#N/A#
14:17:18 DEBUG SkillConfigurator: request value #_TEXT default:#N/A#
14:17:18 DEBUG SkillConfigurator: request bool #_ALLOW_EXITING_WITHOUT_GNT default:false
14:17:18 DEBUG SkillRunner:   PepperGetSourceAndGNT#bmb -> invoke configure().
14:17:18 DEBUG PepperGetSourceAndGNT: wait for nt using speech sensor:SpeechSensor
14:17:18 INFO  BonsaiManager: Creating a sensor instance with key 'SpeechSensor' and dataType 'class de.unibi.citec.clf.btl.data.speechrec.Utterance'
14:17:18 TRACE RosFactory: create sensor for: class de.unibi.citec.clf.btl.data.speechrec.Utterance
14:17:18 INFO  BonsaiManager: Creating an actuator instance with key 'SpeechActuator' and type 'interface de.unibi.citec.clf.bonsai.actuators.SpeechActuator'
14:17:18 TRACE RosFactory: create actuator: interface de.unibi.citec.clf.bonsai.actuators.SpeechActuator
14:17:18 INFO  BonsaiManager: Creating an actuator instance with key 'SSLActuator' and type 'interface de.unibi.citec.clf.bonsai.actuators.SSLActuator'
14:17:18 TRACE RosFactory: create actuator: interface de.unibi.citec.clf.bonsai.actuators.SSLActuator
14:17:18 INFO  BonsaiManager: Creating an working memory instance with key 'WorkingMemory'
14:17:18 DEBUG DefaultMemory: getSlot /behaviors/answerQuestion/nav[class de.unibi.citec.clf.btl.data.navigation.NavigationGoalData]
14:17:18 INFO  BonsaiManager: Creating an working memory instance with key 'WorkingMemory'
14:17:18 DEBUG DefaultMemory: getSlot /behaviors/answerQuestion/tree[class de.unibi.citec.clf.btl.data.speechrec.GrammarTree]
14:17:18 DEBUG SkillRunner:   PepperGetSourceAndGNT#bmb -> invoke init()
14:17:18 DEBUG SimpleSpeechHelper: start listening
14:17:18 DEBUG SkillRunner:   PepperGetSourceAndGNT#bmb -> init() returned: true
14:17:18 DEBUG SkillRunner:   PepperGetSourceAndGNT#bmb -> invoke execute()
14:17:19 DEBUG SimpleSpeechHelper: got new data: 
14:17:19 DEBUG SimpleSpeechHelper: is valid: false
14:17:19 DEBUG PepperGetSourceAndGNT: num of Utterances: 1
14:17:19 DEBUG PepperGetSourceAndGNT: understanding is null
14:17:19 DEBUG PepperGetSourceAndGNT: exit without GNT
14:17:19 DEBUG PepperGetSourceAndGNT: ######################## TRYING TO GET SSL IN LOOP #################
14:17:19 DEBUG PepperGetSourceAndGNT: ######################## SSL IS VALID #################
14:17:19 DEBUG SkillRunner:   PepperGetSourceAndGNT#bmb -> execute() returned: success
14:17:19 DEBUG SkillRunner:   PepperGetSourceAndGNT#bmb -> invoke end()
14:17:19 DEBUG ObjectSlot: memorized NavigationGoalData[ x:0.0 y:0.0 yaw:124.0 coordinateTolerance:25.0 yawTolerance:6.283185307179586 frame:map ]
14:17:19 DEBUG SkillRunner:   PepperGetSourceAndGNT#bmb -> end() returned: success
14:17:19 DEBUG SCXMLSkillRunner:   Fire event: PepperGetSourceAndGNT.success.exitWoGNT
14:17:19 DEBUG SkillStateMachine: FIRE SKILL Event: PepperGetSourceAndGNT.success.exitWoGNT
14:17:19 INFO  SkillStateMachine: #onTransition: "tasks.speechrec.PepperGetSourceAndGNT#bmb" --> "tasks.speechrec.PepperGetSourceAndGNT#bmb "event: "PepperGetSourceAndGNT.success.exitWoGNT"
14:17:19 INFO  SkillStateMachine: ## SEND ## Event:'bmb.again'
14:17:19 DEBUG SkillStateMachine: #OnExit: tasks.speechrec.PepperGetSourceAndGNT#bmb
14:17:19 DEBUG SkillStateMachine: #OnExit: bmb
14:17:19 INFO  SkillStateMachine: #onTransition: "bmb" --> "bmb "event: "bmb.again"
14:17:19 DEBUG SkillStateMachine: #OnEntry: bmb
14:17:19 INFO  SkillStateMachine: ## ASSIGN ## Name:SENSOR Expr:'SpeechSensor'
14:17:19 INFO  SkillStateMachine: ## ASSIGN ## Name:TURN_TO_SOURCE Expr:'true'
14:17:19 INFO  SkillStateMachine: ## ASSIGN ## Name:questionsAskedBmb Expr:questionsAsked+1
14:17:19 INFO  SkillStateMachine: ## ASSIGN ## Name:exitWoGNT Expr:'true'
14:17:19 DEBUG SkillStateMachine: #OnEntry: tasks.speechrec.PepperGetSourceAndGNT#bmb
14:17:19 INFO  SkillStateMachine: data id:#_SENSOR with expr='@SENSOR'changed to:SpeechSensor
14:17:19 INFO  SkillStateMachine: data id:#_TURN_TO_SOURCE with expr='@TURN_TO_SOURCE'changed to:true
14:17:19 INFO  SkillStateMachine: data id:#_TIMEOUT with expr='@TIMEOUT'changed to:-1
14:17:19 INFO  SkillStateMachine: data id:#_ALLOW_EXITING_WITHOUT_GNT with expr='@exitWoGNT'changed to:true
14:17:19 INFO  SkillStateMachine: ##INVOKE   PepperGetSourceAndGNT#bmb
14:17:19 DEBUG SkillConfigurator: request bool #_TURN_TO_SOURCE default:true
14:17:19 DEBUG SkillConfigurator: request value #_SENSOR
14:17:19 DEBUG PepperGetSourceAndGNT: wait for nt using speech sensor:SpeechSensor
14:17:19 DEBUG SkillConfigurator: request INT #_TIMEOUT default:-1
14:17:19 DEBUG SkillConfigurator: request double #_MAX_DISTANCE default:2.0
14:17:19 DEBUG SkillConfigurator: request value #_NONTERMINALS
14:17:19 DEBUG SkillConfigurator: request bool #_DISABLE_CONCAT_UNDERSCORE default:false
14:17:19 DEBUG SkillConfigurator: request value #_NONTERMINALS_TO_CONFIRM default:#N/A#
14:17:19 DEBUG SkillConfigurator: request value #_TEXT default:#N/A#
14:17:19 DEBUG SkillConfigurator: request bool #_ALLOW_EXITING_WITHOUT_GNT default:false
14:17:19 DEBUG SkillRunner:   PepperGetSourceAndGNT#bmb -> invoke configure().
14:17:19 DEBUG PepperGetSourceAndGNT: wait for nt using speech sensor:SpeechSensor
14:17:19 INFO  BonsaiManager: Creating a sensor instance with key 'SpeechSensor' and dataType 'class de.unibi.citec.clf.btl.data.speechrec.Utterance'
14:17:19 TRACE RosFactory: create sensor for: class de.unibi.citec.clf.btl.data.speechrec.Utterance
14:17:19 INFO  BonsaiManager: Creating an actuator instance with key 'SpeechActuator' and type 'interface de.unibi.citec.clf.bonsai.actuators.SpeechActuator'
14:17:19 TRACE RosFactory: create actuator: interface de.unibi.citec.clf.bonsai.actuators.SpeechActuator
14:17:19 INFO  BonsaiManager: Creating an actuator instance with key 'SSLActuator' and type 'interface de.unibi.citec.clf.bonsai.actuators.SSLActuator'
14:17:19 TRACE RosFactory: create actuator: interface de.unibi.citec.clf.bonsai.actuators.SSLActuator
14:17:19 INFO  BonsaiManager: Creating an working memory instance with key 'WorkingMemory'
14:17:19 DEBUG DefaultMemory: getSlot /behaviors/answerQuestion/nav[class de.unibi.citec.clf.btl.data.navigation.NavigationGoalData]
14:17:19 INFO  BonsaiManager: Creating an working memory instance with key 'WorkingMemory'
14:17:19 DEBUG DefaultMemory: getSlot /behaviors/answerQuestion/tree[class de.unibi.citec.clf.btl.data.speechrec.GrammarTree]
14:17:19 DEBUG SkillRunner:   PepperGetSourceAndGNT#bmb -> invoke init()
14:17:19 DEBUG SimpleSpeechHelper: start listening
14:17:19 DEBUG SkillRunner:   PepperGetSourceAndGNT#bmb -> init() returned: true
14:17:19 DEBUG SkillRunner:   PepperGetSourceAndGNT#bmb -> invoke execute()
14:17:20 INFO  CurrentStateViewController: stop statemachine
14:17:20 INFO  SkillStateMachine: STOP STATE MACHINE
14:17:20 INFO  SkillStateMachine: Waiting for state/class to end: de.unibi.citec.clf.bonsai.skills.tasks.speechrec.PepperGetSourceAndGNT#bmb
14:17:20 DEBUG SkillRunner: Forcing skill to end: PepperGetSourceAndGNT
14:17:20 DEBUG SkillRunner: notify loop to stop
14:17:20 DEBUG SkillRunner: waiting for skill to quit
14:17:20 DEBUG SkillRunner: Loop was forced to end
14:17:20 WARN  SkillRunner: Skill was forced to end while looping.
14:17:20 DEBUG SkillRunner:   PepperGetSourceAndGNT#bmb -> execute() returned: fatal
14:17:20 DEBUG SkillRunner:   PepperGetSourceAndGNT#bmb -> invoke end()
14:17:20 DEBUG SkillRunner:   PepperGetSourceAndGNT#bmb -> end() returned: fatal
14:17:20 INFO  SkillStateMachine: #######################
STATE MACHINE STOPPED AND RESET
#######################

14:17:20 INFO  CurrentStateViewController: enable automatic events
14:17:20 DEBUG FXGUI: statemachine stopped
14:17:20 INFO  CurrentStateViewController: enable automatic events
